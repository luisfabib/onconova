/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { FIGOStaging } from './figo-staging';
import { BreslowDepth } from './breslow-depth';
import { INRGSSStage } from './inrgss-stage';
import { User } from './user';
import { CodedConcept } from './coded-concept';
import { TNMStaging } from './tnm-staging';
import { RISSStaging } from './riss-staging';
import { ClarkStaging } from './clark-staging';
import { BinetStaging } from './binet-staging';
import { WilmsStage } from './wilms-stage';
import { RaiStaging } from './rai-staging';
import { GleasonGrade } from './gleason-grade';
import { ISSStaging } from './iss-staging';
import { RhabdomyosarcomaClinicalGroup } from './rhabdomyosarcoma-clinical-group';
import { INSSStage } from './inss-stage';
import { LymphomaStaging } from './lymphoma-staging';


export interface PatientCaseBundleStagingsInner { 
    stagingDomain?: PatientCaseBundleStagingsInner.StagingDomainEnum;
    /**
     * 
     */
    id: string;
    /**
     * 
     */
    createdAt: string;
    /**
     * 
     */
    updatedAt: string;
    createdBy?: User;
    externalSource?: string;
    externalSourceId?: string;
    /**
     * Indicates the case of the patient who\'s cancer is staged
     */
    caseId: string;
    /**
     * Clinically-relevant date at which the staging was performed and recorded.
     */
    date: string;
    /**
     * The user(s) who updated the data since its creation
     */
    updatedBy?: Array<User>;
    /**
     * References to the neoplastic entities that were the focus of the staging.
     */
    stagedEntitiesIds?: Array<string>;
    /**
     * The value of the Lymphoma stage
     */
    stage: CodedConcept;
    methodology?: CodedConcept;
    pathological?: boolean;
    primarytumor?: CodedConcept;
    regionalnodes?: CodedConcept;
    distantmetastases?: CodedConcept;
    grade?: CodedConcept;
    residualtumor?: CodedConcept;
    lymphaticinvasion?: CodedConcept;
    venousinvasion?: CodedConcept;
    perineuralinvasion?: CodedConcept;
    serumtumormarkerlevel?: CodedConcept;
    /**
     * Human-readable description
     */
    description: string;
    /**
     * Breslow depth given in milimeters
     */
    depth: number;
    isUlcered?: boolean;
    bulky?: boolean;
    /**
     * Qualifier acting as modifier for the lymphoma stage
     */
    modifiers?: Array<CodedConcept>;
}
export namespace PatientCaseBundleStagingsInner {
    export type StagingDomainEnum = 'lymphoma';
    export const StagingDomainEnum = {
        Lymphoma: 'lymphoma' as StagingDomainEnum
    };
}


