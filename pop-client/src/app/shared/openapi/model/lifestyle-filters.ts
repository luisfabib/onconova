/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface LifestyleFilters { 
    /**
     * Id - Filter for full text matches
     */
    id?: string;
    /**
     * Id - Filter for full text mismatches
     */
    'id.not'?: string;
    /**
     * Id - Filter for partial text matches
     */
    'id.contains'?: string;
    /**
     * Id - Filter for partial text mismatches
     */
    'id.not.contains'?: string;
    /**
     * Id - Filter for entries starting with the text
     */
    'id.beginsWith'?: string;
    /**
     * Id - Filter for entries not starting with the text
     */
    'id.not.beginsWith'?: string;
    /**
     * Id - Filter for entries ending with the text
     */
    'id.endsWith'?: string;
    /**
     * Id - Filter for entries not ending with the text
     */
    'id.not.endsWith'?: string;
    /**
     * Patient case - Filter for reference matches
     */
    caseId?: string;
    /**
     * Patient case - Filter for reference mismatches
     */
    'caseId.not'?: string;
    /**
     * Patient case - Filter for partial text matches
     */
    'caseId.contains'?: string;
    /**
     * Patient case - Filter for partial text mismatches
     */
    'caseId.not.contains'?: string;
    /**
     * Patient case - Filter for entries starting with the text
     */
    'caseId.beginsWith'?: string;
    /**
     * Patient case - Filter for entries not starting with the text
     */
    'caseId.not.beginsWith'?: string;
    /**
     * Patient case - Filter for entries ending with the text
     */
    'caseId.endsWith'?: string;
    /**
     * Patient case - Filter for entries not ending with the text
     */
    'caseId.not.endsWith'?: string;
    /**
     * Assessment date - Filter for entries with dates before the specified value
     */
    'date.before'?: string;
    /**
     * Assessment date - Filter for entries with dates after the specified value
     */
    'date.after'?: string;
    /**
     * Assessment date - Filter for entries with dates on or before the specified value
     */
    'date.onOrBefore'?: string;
    /**
     * Assessment date - Filter for entries with dates on or after the specified value
     */
    'date.onOrAfter'?: string;
    /**
     * Assessment date - Filter for entries with dates exactly matching the specified value
     */
    'date.on'?: string;
    /**
     * Assessment date - Filter for entries with dates not matching the specified value
     */
    'date.not.on'?: string;
    /**
     * Assessment date - Filter for entries with dates between two specified values (inclusive)
     */
    'date.between'?: Array<any>;
    /**
     * Assessment date - Filter for entries with dates not between two specified values (inclusive)
     */
    'date.not.between'?: Array<any>;
    /**
     * Alcohol consumption - Filter for entries without a value
     */
    'smokingStatus.not.exists'?: boolean;
    /**
     * Alcohol consumption - Filter for entries with a value
     */
    'smokingStatus.exists'?: boolean;
    /**
     * Alcohol consumption - Filter for a matching concept code
     */
    smokingStatus?: string;
    /**
     * Alcohol consumption - Filter for a mismatching concept code
     */
    'smokingStatus.not'?: string;
    /**
     * Alcohol consumption - Filter for a matching set of concept codes
     */
    'smokingStatus.anyOf'?: Array<string>;
    /**
     * Alcohol consumption - Filter for a mismmatching set of concept codes
     */
    'smokingStatus.not.anyOf'?: Array<string>;
    /**
     * Alcohol consumption - Filter for all child concepts of a given concepts code
     */
    'smokingStatus.descendantsOf'?: string;
    /**
     * Smoking packyears - Filter for entries without a value
     */
    'smokingPackyears.not.exists'?: boolean;
    /**
     * Smoking packyears - Filter for entries with a value
     */
    'smokingPackyears.exists'?: boolean;
    /**
     * Smoking packyears - Filter for entries with values less than the specified value
     */
    'smokingPackyears.lessThan'?: number;
    /**
     * Smoking packyears - Filter for entries with values less than or equal to the specified value
     */
    'smokingPackyears.lessThanOrEqual'?: number;
    /**
     * Smoking packyears - Filter for entries with values greater than the specified value
     */
    'smokingPackyears.greaterThan'?: number;
    /**
     * Smoking packyears - Filter for entries with values greater than or equal to the specified value
     */
    'smokingPackyears.greaterThanOrEqual'?: number;
    /**
     * Smoking packyears - Filter for entries with values exactly equal to the specified value
     */
    'smokingPackyears.equal'?: number;
    /**
     * Smoking packyears - Filter for entries with values not equal to the specified value
     */
    'smokingPackyears.not.equal'?: number;
    /**
     * Smoking packyears - Filter for entries with values between two specified values (inclusive)
     */
    'smokingPackyears.between'?: Array<any>;
    /**
     * Smoking packyears - Filter for entries with values between two specified values (inclusive)
     */
    'smokingPackyears.not.between'?: Array<any>;
    /**
     * Time since quitted smoking - Filter for entries without a value
     */
    'smokingQuited.not.exists'?: boolean;
    /**
     * Time since quitted smoking - Filter for entries with a value
     */
    'smokingQuited.exists'?: boolean;
    /**
     * Time since quitted smoking - Filter for entries with values less than the specified value
     */
    'smokingQuited.lessThan'?: number;
    /**
     * Time since quitted smoking - Filter for entries with values less than or equal to the specified value
     */
    'smokingQuited.lessThanOrEqual'?: number;
    /**
     * Time since quitted smoking - Filter for entries with values greater than the specified value
     */
    'smokingQuited.greaterThan'?: number;
    /**
     * Time since quitted smoking - Filter for entries with values greater than or equal to the specified value
     */
    'smokingQuited.greaterThanOrEqual'?: number;
    /**
     * Time since quitted smoking - Filter for entries with values exactly equal to the specified value
     */
    'smokingQuited.equal'?: number;
    /**
     * Time since quitted smoking - Filter for entries with values not equal to the specified value
     */
    'smokingQuited.not.equal'?: number;
    /**
     * Time since quitted smoking - Filter for entries with values between two specified values (inclusive)
     */
    'smokingQuited.between'?: Array<any>;
    /**
     * Time since quitted smoking - Filter for entries with values between two specified values (inclusive)
     */
    'smokingQuited.not.between'?: Array<any>;
    /**
     * Alcohol consumption - Filter for entries without a value
     */
    'alcoholConsumption.not.exists'?: boolean;
    /**
     * Alcohol consumption - Filter for entries with a value
     */
    'alcoholConsumption.exists'?: boolean;
    /**
     * Alcohol consumption - Filter for a matching concept code
     */
    alcoholConsumption?: string;
    /**
     * Alcohol consumption - Filter for a mismatching concept code
     */
    'alcoholConsumption.not'?: string;
    /**
     * Alcohol consumption - Filter for a matching set of concept codes
     */
    'alcoholConsumption.anyOf'?: Array<string>;
    /**
     * Alcohol consumption - Filter for a mismmatching set of concept codes
     */
    'alcoholConsumption.not.anyOf'?: Array<string>;
    /**
     * Alcohol consumption - Filter for all child concepts of a given concepts code
     */
    'alcoholConsumption.descendantsOf'?: string;
    /**
     * Night sleep - Filter for entries without a value
     */
    'nightSleep.not.exists'?: boolean;
    /**
     * Night sleep - Filter for entries with a value
     */
    'nightSleep.exists'?: boolean;
    /**
     * Night sleep - Filter for entries with values less than the specified value
     */
    'nightSleep.lessThan'?: number;
    /**
     * Night sleep - Filter for entries with values less than or equal to the specified value
     */
    'nightSleep.lessThanOrEqual'?: number;
    /**
     * Night sleep - Filter for entries with values greater than the specified value
     */
    'nightSleep.greaterThan'?: number;
    /**
     * Night sleep - Filter for entries with values greater than or equal to the specified value
     */
    'nightSleep.greaterThanOrEqual'?: number;
    /**
     * Night sleep - Filter for entries with values exactly equal to the specified value
     */
    'nightSleep.equal'?: number;
    /**
     * Night sleep - Filter for entries with values not equal to the specified value
     */
    'nightSleep.not.equal'?: number;
    /**
     * Night sleep - Filter for entries with values between two specified values (inclusive)
     */
    'nightSleep.between'?: Array<any>;
    /**
     * Night sleep - Filter for entries with values between two specified values (inclusive)
     */
    'nightSleep.not.between'?: Array<any>;
    /**
     * Recreational drugs - Filter for entries without a value
     */
    'recreationalDrugs.not.exists'?: boolean;
    /**
     * Recreational drugs - Filter for entries with a value
     */
    'recreationalDrugs.exists'?: boolean;
    /**
     * Recreational drugs - Filter for a matching concept code
     */
    recreationalDrugs?: string;
    /**
     * Recreational drugs - Filter for a mismatching concept code
     */
    'recreationalDrugs.not'?: string;
    /**
     * Recreational drugs - Filter for a matching set of concept codes
     */
    'recreationalDrugs.anyOf'?: Array<string>;
    /**
     * Recreational drugs - Filter for a mismmatching set of concept codes
     */
    'recreationalDrugs.not.anyOf'?: Array<string>;
    /**
     * Recreational drugs - Filter for all child concepts of a given concepts code
     */
    'recreationalDrugs.descendantsOf'?: string;
    /**
     * Recreational drugs - Filter for entries matching all of the concepts
     */
    'recreationalDrugs.allOf'?: Array<string>;
    /**
     * Recreational drugs - Filter for entries mismatching all of the concepts
     */
    'recreationalDrugs.not.allOf'?: Array<string>;
    /**
     * Exposures - Filter for entries without a value
     */
    'exposures.not.exists'?: boolean;
    /**
     * Exposures - Filter for entries with a value
     */
    'exposures.exists'?: boolean;
    /**
     * Exposures - Filter for a matching concept code
     */
    exposures?: string;
    /**
     * Exposures - Filter for a mismatching concept code
     */
    'exposures.not'?: string;
    /**
     * Exposures - Filter for a matching set of concept codes
     */
    'exposures.anyOf'?: Array<string>;
    /**
     * Exposures - Filter for a mismmatching set of concept codes
     */
    'exposures.not.anyOf'?: Array<string>;
    /**
     * Exposures - Filter for all child concepts of a given concepts code
     */
    'exposures.descendantsOf'?: string;
    /**
     * Exposures - Filter for entries matching all of the concepts
     */
    'exposures.allOf'?: Array<string>;
    /**
     * Exposures - Filter for entries mismatching all of the concepts
     */
    'exposures.not.allOf'?: Array<string>;
}

