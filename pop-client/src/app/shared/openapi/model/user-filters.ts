/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface UserFilters { 
    role?: UserFilters.RoleEnum;
    'role.not'?: UserFilters.RoleNotEnum;
    /**
     * None - (\'Filter for excluding a subset of value choices\',)
     */
    'role.anyOf'?: Array<UserFilters.RoleAnyOfEnum>;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canViewCases?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canViewProjects?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canViewCohorts?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canViewUsers?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canViewDatasets?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canImportData?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canManageCases?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canManageCohorts?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canManageDatasets?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canAnalyzeData?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canExportData?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canManageProjects?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canAccessSensitiveData?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canAuditLogs?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    canManageUsers?: boolean;
    /**
     * None - (\'Filter for yes/no statement\',)
     */
    isSystemAdmin?: boolean;
    /**
     * Last Login - Filter for entries without a value
     */
    'lastLogin.not.exists'?: boolean;
    /**
     * Last Login - Filter for entries with a value
     */
    'lastLogin.exists'?: boolean;
    /**
     * Last Login - Filter for entries with dates before the specified value
     */
    'lastLogin.before'?: string;
    /**
     * Last Login - Filter for entries with dates after the specified value
     */
    'lastLogin.after'?: string;
    /**
     * Last Login - Filter for entries with dates on or before the specified value
     */
    'lastLogin.onOrBefore'?: string;
    /**
     * Last Login - Filter for entries with dates on or after the specified value
     */
    'lastLogin.onOrAfter'?: string;
    /**
     * Last Login - Filter for entries with dates exactly matching the specified value
     */
    'lastLogin.on'?: string;
    /**
     * Last Login - Filter for entries with dates not matching the specified value
     */
    'lastLogin.not.on'?: string;
    /**
     * Last Login - Filter for entries with dates between two specified values (inclusive)
     */
    'lastLogin.between'?: Array<any>;
    /**
     * Last Login - Filter for entries with dates not between two specified values (inclusive)
     */
    'lastLogin.not.between'?: Array<any>;
    /**
     * Username - Filter for full text matches
     */
    username?: string;
    /**
     * Username - Filter for full text mismatches
     */
    'username.not'?: string;
    /**
     * Username - Filter for partial text matches
     */
    'username.contains'?: string;
    /**
     * Username - Filter for partial text mismatches
     */
    'username.not.contains'?: string;
    /**
     * Username - Filter for entries starting with the text
     */
    'username.beginsWith'?: string;
    /**
     * Username - Filter for entries not starting with the text
     */
    'username.not.beginsWith'?: string;
    /**
     * Username - Filter for entries ending with the text
     */
    'username.endsWith'?: string;
    /**
     * Username - Filter for entries not ending with the text
     */
    'username.not.endsWith'?: string;
    /**
     * First Name - Filter for entries without a value
     */
    'firstName.not.exists'?: boolean;
    /**
     * First Name - Filter for entries with a value
     */
    'firstName.exists'?: boolean;
    /**
     * First Name - Filter for full text matches
     */
    firstName?: string;
    /**
     * First Name - Filter for full text mismatches
     */
    'firstName.not'?: string;
    /**
     * First Name - Filter for partial text matches
     */
    'firstName.contains'?: string;
    /**
     * First Name - Filter for partial text mismatches
     */
    'firstName.not.contains'?: string;
    /**
     * First Name - Filter for entries starting with the text
     */
    'firstName.beginsWith'?: string;
    /**
     * First Name - Filter for entries not starting with the text
     */
    'firstName.not.beginsWith'?: string;
    /**
     * First Name - Filter for entries ending with the text
     */
    'firstName.endsWith'?: string;
    /**
     * First Name - Filter for entries not ending with the text
     */
    'firstName.not.endsWith'?: string;
    /**
     * Last Name - Filter for entries without a value
     */
    'lastName.not.exists'?: boolean;
    /**
     * Last Name - Filter for entries with a value
     */
    'lastName.exists'?: boolean;
    /**
     * Last Name - Filter for full text matches
     */
    lastName?: string;
    /**
     * Last Name - Filter for full text mismatches
     */
    'lastName.not'?: string;
    /**
     * Last Name - Filter for partial text matches
     */
    'lastName.contains'?: string;
    /**
     * Last Name - Filter for partial text mismatches
     */
    'lastName.not.contains'?: string;
    /**
     * Last Name - Filter for entries starting with the text
     */
    'lastName.beginsWith'?: string;
    /**
     * Last Name - Filter for entries not starting with the text
     */
    'lastName.not.beginsWith'?: string;
    /**
     * Last Name - Filter for entries ending with the text
     */
    'lastName.endsWith'?: string;
    /**
     * Last Name - Filter for entries not ending with the text
     */
    'lastName.not.endsWith'?: string;
    /**
     * Email Address - Filter for entries without a value
     */
    'email.not.exists'?: boolean;
    /**
     * Email Address - Filter for entries with a value
     */
    'email.exists'?: boolean;
    /**
     * Email Address - Filter for full text matches
     */
    email?: string;
    /**
     * Email Address - Filter for full text mismatches
     */
    'email.not'?: string;
    /**
     * Email Address - Filter for partial text matches
     */
    'email.contains'?: string;
    /**
     * Email Address - Filter for partial text mismatches
     */
    'email.not.contains'?: string;
    /**
     * Email Address - Filter for entries starting with the text
     */
    'email.beginsWith'?: string;
    /**
     * Email Address - Filter for entries not starting with the text
     */
    'email.not.beginsWith'?: string;
    /**
     * Email Address - Filter for entries ending with the text
     */
    'email.endsWith'?: string;
    /**
     * Email Address - Filter for entries not ending with the text
     */
    'email.not.endsWith'?: string;
    /**
     * Active - (\'Filter for yes/no statement\',)
     */
    isActive?: boolean;
    /**
     * Id - Filter for full text matches
     */
    id?: string;
    /**
     * Id - Filter for full text mismatches
     */
    'id.not'?: string;
    /**
     * Id - Filter for partial text matches
     */
    'id.contains'?: string;
    /**
     * Id - Filter for partial text mismatches
     */
    'id.not.contains'?: string;
    /**
     * Id - Filter for entries starting with the text
     */
    'id.beginsWith'?: string;
    /**
     * Id - Filter for entries not starting with the text
     */
    'id.not.beginsWith'?: string;
    /**
     * Id - Filter for entries ending with the text
     */
    'id.endsWith'?: string;
    /**
     * Id - Filter for entries not ending with the text
     */
    'id.not.endsWith'?: string;
    /**
     * Title - Filter for entries without a value
     */
    'title.not.exists'?: boolean;
    /**
     * Title - Filter for entries with a value
     */
    'title.exists'?: boolean;
    /**
     * Title - Filter for full text matches
     */
    title?: string;
    /**
     * Title - Filter for full text mismatches
     */
    'title.not'?: string;
    /**
     * Title - Filter for partial text matches
     */
    'title.contains'?: string;
    /**
     * Title - Filter for partial text mismatches
     */
    'title.not.contains'?: string;
    /**
     * Title - Filter for entries starting with the text
     */
    'title.beginsWith'?: string;
    /**
     * Title - Filter for entries not starting with the text
     */
    'title.not.beginsWith'?: string;
    /**
     * Title - Filter for entries ending with the text
     */
    'title.endsWith'?: string;
    /**
     * Title - Filter for entries not ending with the text
     */
    'title.not.endsWith'?: string;
    /**
     * Organization - Filter for entries without a value
     */
    'organization.not.exists'?: boolean;
    /**
     * Organization - Filter for entries with a value
     */
    'organization.exists'?: boolean;
    /**
     * Organization - Filter for full text matches
     */
    organization?: string;
    /**
     * Organization - Filter for full text mismatches
     */
    'organization.not'?: string;
    /**
     * Organization - Filter for partial text matches
     */
    'organization.contains'?: string;
    /**
     * Organization - Filter for partial text mismatches
     */
    'organization.not.contains'?: string;
    /**
     * Organization - Filter for entries starting with the text
     */
    'organization.beginsWith'?: string;
    /**
     * Organization - Filter for entries not starting with the text
     */
    'organization.not.beginsWith'?: string;
    /**
     * Organization - Filter for entries ending with the text
     */
    'organization.endsWith'?: string;
    /**
     * Organization - Filter for entries not ending with the text
     */
    'organization.not.endsWith'?: string;
    /**
     * Department - Filter for entries without a value
     */
    'department.not.exists'?: boolean;
    /**
     * Department - Filter for entries with a value
     */
    'department.exists'?: boolean;
    /**
     * Department - Filter for full text matches
     */
    department?: string;
    /**
     * Department - Filter for full text mismatches
     */
    'department.not'?: string;
    /**
     * Department - Filter for partial text matches
     */
    'department.contains'?: string;
    /**
     * Department - Filter for partial text mismatches
     */
    'department.not.contains'?: string;
    /**
     * Department - Filter for entries starting with the text
     */
    'department.beginsWith'?: string;
    /**
     * Department - Filter for entries not starting with the text
     */
    'department.not.beginsWith'?: string;
    /**
     * Department - Filter for entries ending with the text
     */
    'department.endsWith'?: string;
    /**
     * Department - Filter for entries not ending with the text
     */
    'department.not.endsWith'?: string;
    /**
     * Access level - Filter for entries with values less than the specified value
     */
    'accessLevel.lessThan'?: number;
    /**
     * Access level - Filter for entries with values less than or equal to the specified value
     */
    'accessLevel.lessThanOrEqual'?: number;
    /**
     * Access level - Filter for entries with values greater than the specified value
     */
    'accessLevel.greaterThan'?: number;
    /**
     * Access level - Filter for entries with values greater than or equal to the specified value
     */
    'accessLevel.greaterThanOrEqual'?: number;
    /**
     * Access level - Filter for entries with values exactly equal to the specified value
     */
    'accessLevel.equal'?: number;
    /**
     * Access level - Filter for entries with values not equal to the specified value
     */
    'accessLevel.not.equal'?: number;
    /**
     * Access level - Filter for entries with values between two specified values (inclusive)
     */
    'accessLevel.between'?: Array<any>;
    /**
     * Access level - Filter for entries with values between two specified values (inclusive)
     */
    'accessLevel.not.between'?: Array<any>;
}
export namespace UserFilters {
    export type RoleEnum = 'External' | 'Viewer' | 'Data Contributor' | 'Data Analyst' | 'Project Manager' | 'Platform Manager' | 'System Administrator';
    export const RoleEnum = {
        External: 'External' as RoleEnum,
        Viewer: 'Viewer' as RoleEnum,
        DataContributor: 'Data Contributor' as RoleEnum,
        DataAnalyst: 'Data Analyst' as RoleEnum,
        ProjectManager: 'Project Manager' as RoleEnum,
        PlatformManager: 'Platform Manager' as RoleEnum,
        SystemAdministrator: 'System Administrator' as RoleEnum
    };
    export type RoleNotEnum = 'External' | 'Viewer' | 'Data Contributor' | 'Data Analyst' | 'Project Manager' | 'Platform Manager' | 'System Administrator';
    export const RoleNotEnum = {
        External: 'External' as RoleNotEnum,
        Viewer: 'Viewer' as RoleNotEnum,
        DataContributor: 'Data Contributor' as RoleNotEnum,
        DataAnalyst: 'Data Analyst' as RoleNotEnum,
        ProjectManager: 'Project Manager' as RoleNotEnum,
        PlatformManager: 'Platform Manager' as RoleNotEnum,
        SystemAdministrator: 'System Administrator' as RoleNotEnum
    };
    export type RoleAnyOfEnum = 'External' | 'Viewer' | 'Data Contributor' | 'Data Analyst' | 'Project Manager' | 'Platform Manager' | 'System Administrator';
    export const RoleAnyOfEnum = {
        External: 'External' as RoleAnyOfEnum,
        Viewer: 'Viewer' as RoleAnyOfEnum,
        DataContributor: 'Data Contributor' as RoleAnyOfEnum,
        DataAnalyst: 'Data Analyst' as RoleAnyOfEnum,
        ProjectManager: 'Project Manager' as RoleAnyOfEnum,
        PlatformManager: 'Platform Manager' as RoleAnyOfEnum,
        SystemAdministrator: 'System Administrator' as RoleAnyOfEnum
    };
}


