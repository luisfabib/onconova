/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { HistoryEventWithSchema } from '../model/models';
import { ModifiedResource } from '../model/models';
import { PaginatedHistoryEventWithSchema } from '../model/models';
import { PaginatedTherapyLine } from '../model/models';
import { TherapyLine } from '../model/models';
import { TherapyLineCreate } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateTherapyLineRequestParams {
    therapyLineCreate: TherapyLineCreate;
}

export interface DeleteTherapyLineRequestParams {
    therapyLineId: string;
}

export interface GetAllTherapyLineHistoryEventsRequestParams {
    therapyLineId: string;
    limit?: number;
    offset?: number;
}

export interface GetReassignedPatientCaseTherapyLinesRequestParams {
    caseId: string;
}

export interface GetTherapyLineByIdRequestParams {
    therapyLineId: string;
}

export interface GetTherapyLineHistoryEventByIdRequestParams {
    therapyLineId: string;
    eventId: string;
}

export interface GetTherapyLinesRequestParams {
    periodNotExists?: boolean;
    periodExists?: boolean;
    periodOverlaps?: Array<any>;
    periodNotOverlaps?: Array<any>;
    periodContains?: Array<any>;
    periodNotContains?: Array<any>;
    periodContainedBy?: Array<any>;
    periodNotContainedBy?: Array<any>;
    label?: string;
    labelNot?: string;
    labelContains?: string;
    labelNotContains?: string;
    labelBeginsWith?: string;
    labelNotBeginsWith?: string;
    labelEndsWith?: string;
    labelNotEndsWith?: string;
    progressionFreeSurvivalNotExists?: boolean;
    progressionFreeSurvivalExists?: boolean;
    progressionFreeSurvivalLessThan?: number;
    progressionFreeSurvivalLessThanOrEqual?: number;
    progressionFreeSurvivalGreaterThan?: number;
    progressionFreeSurvivalGreaterThanOrEqual?: number;
    progressionFreeSurvivalEqual?: number;
    progressionFreeSurvivalNotEqual?: number;
    progressionFreeSurvivalBetween?: Array<any>;
    progressionFreeSurvivalNotBetween?: Array<any>;
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    ordinalLessThan?: number;
    ordinalLessThanOrEqual?: number;
    ordinalGreaterThan?: number;
    ordinalGreaterThanOrEqual?: number;
    ordinalEqual?: number;
    ordinalNotEqual?: number;
    ordinalBetween?: Array<any>;
    ordinalNotBetween?: Array<any>;
    intent?: string;
    intentNot?: string;
    intentAnyOf?: Array<'curative' | 'palliative'>;
    progressionDateNotExists?: boolean;
    progressionDateExists?: boolean;
    progressionDateBefore?: string;
    progressionDateAfter?: string;
    progressionDateOnOrBefore?: string;
    progressionDateOnOrAfter?: string;
    progressionDateOn?: string;
    progressionDateNotOn?: string;
    progressionDateBetween?: Array<any>;
    progressionDateNotBetween?: Array<any>;
    limit?: number;
    offset?: number;
}

export interface RevertTherapyLineToHistoryEventRequestParams {
    therapyLineId: string;
    eventId: string;
}

export interface UpdateTherapyLineRequestParams {
    therapyLineId: string;
    therapyLineCreate: TherapyLineCreate;
}


export interface TherapyLinesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Therapy Line
     * 
* @param requestParameters
     */
    createTherapyLine(requestParameters: CreateTherapyLineRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Therapy Line
     * 
* @param requestParameters
     */
    deleteTherapyLine(requestParameters: DeleteTherapyLineRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Therapy Line History Events
     * 
* @param requestParameters
     */
    getAllTherapyLineHistoryEvents(requestParameters: GetAllTherapyLineHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEventWithSchema>;

    /**
     * Get Reassigned Patient Case Therapy Lines
     * 
* @param requestParameters
     */
    getReassignedPatientCaseTherapyLines(requestParameters: GetReassignedPatientCaseTherapyLinesRequestParams, extraHttpRequestParams?: any): Observable<Array<TherapyLine>>;

    /**
     * Get Therapy Line By Id
     * 
* @param requestParameters
     */
    getTherapyLineById(requestParameters: GetTherapyLineByIdRequestParams, extraHttpRequestParams?: any): Observable<TherapyLine>;

    /**
     * Get Therapy Line History Event By Id
     * 
* @param requestParameters
     */
    getTherapyLineHistoryEventById(requestParameters: GetTherapyLineHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEventWithSchema>;

    /**
     * Get All Therapy Lines Matching The Query
     * 
* @param requestParameters
     */
    getTherapyLines(requestParameters: GetTherapyLinesRequestParams, extraHttpRequestParams?: any): Observable<PaginatedTherapyLine>;

    /**
     * Revert Therapy Line To History Event
     * 
* @param requestParameters
     */
    revertTherapyLineToHistoryEvent(requestParameters: RevertTherapyLineToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Therapy Line
     * 
* @param requestParameters
     */
    updateTherapyLine(requestParameters: UpdateTherapyLineRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
