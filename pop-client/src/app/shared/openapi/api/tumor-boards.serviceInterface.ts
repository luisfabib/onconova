/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AnyTumorBoard } from '../model/models';
import { HistoryEvent } from '../model/models';
import { ModifiedResource } from '../model/models';
import { MolecularTherapeuticRecommendation } from '../model/models';
import { MolecularTherapeuticRecommendationCreate } from '../model/models';
import { PaginatedAnyTumorBoard } from '../model/models';
import { PaginatedHistoryEvent } from '../model/models';
import { Payload1 } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateMolecularTherapeuticRecommendationRequestParams {
    tumorBoardId: string;
    molecularTherapeuticRecommendationCreate: MolecularTherapeuticRecommendationCreate;
}

export interface CreateTumorBoardRequestParams {
    payload1: Payload1;
}

export interface DeleteMolecularTherapeuticRecommendationRequestParams {
    tumorBoardId: string;
    recommendationId: string;
}

export interface DeleteTumorBoardByIdRequestParams {
    tumorBoardId: string;
}

export interface GetAllMolecularTherapeuticRecommendationHistoryEventsRequestParams {
    tumorBoardId: string;
    recommendationId: string;
    limit?: number;
    offset?: number;
}

export interface GetAllTumorBoardHistoryEventsRequestParams {
    tumorBoardId: string;
    limit?: number;
    offset?: number;
}

export interface GetMOlecularTherapeuticRecommendationByIdRequestParams {
    tumorBoardId: string;
    recommendationId: string;
}

export interface GetMolecularTherapeuticRecommendationHistoryEventByIdRequestParams {
    tumorBoardId: string;
    recommendationId: string;
    eventId: string;
}

export interface GetMolecularTherapeuticRecommendationsRequestParams {
    tumorBoardId: string;
}

export interface GetTumorBoardByIdRequestParams {
    tumorBoardId: string;
}

export interface GetTumorBoardHistoryEventByIdRequestParams {
    tumorBoardId: string;
    eventId: string;
}

export interface GetTumorBoardsRequestParams {
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    dateBefore?: string;
    dateAfter?: string;
    dateOnOrBefore?: string;
    dateOnOrAfter?: string;
    dateOn?: string;
    dateNotOn?: string;
    dateBetween?: Array<any>;
    dateNotBetween?: Array<any>;
    relatedEntitiesIds?: string;
    relatedEntitiesIdsNot?: string;
    relatedEntitiesIdsContains?: string;
    relatedEntitiesIdsNotContains?: string;
    relatedEntitiesIdsBeginsWith?: string;
    relatedEntitiesIdsNotBeginsWith?: string;
    relatedEntitiesIdsEndsWith?: string;
    relatedEntitiesIdsNotEndsWith?: string;
    recommendationsNotExists?: boolean;
    recommendationsExists?: boolean;
    recommendations?: string;
    recommendationsNot?: string;
    recommendationsAnyOf?: Array<string>;
    recommendationsNotAnyOf?: Array<string>;
    recommendationsDescendantsOf?: string;
    recommendationsAllOf?: Array<string>;
    recommendationsNotAllOf?: Array<string>;
    limit?: number;
    offset?: number;
}

export interface RevertMolecularTherapeuticRecommendationToHistoryEventRequestParams {
    tumorBoardId: string;
    recommendationId: string;
    eventId: string;
}

export interface RevertTumorBoardToHistoryEventRequestParams {
    tumorBoardId: string;
    eventId: string;
}

export interface UpdateMolecularTherapeuticRecommendationRequestParams {
    tumorBoardId: string;
    recommendationId: string;
    molecularTherapeuticRecommendationCreate: MolecularTherapeuticRecommendationCreate;
}

export interface UpdateTumorBoardByIdRequestParams {
    tumorBoardId: string;
    payload1: Payload1;
}


export interface TumorBoardsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Molecular Tumor Board Therapeutic Recommendation
     * 
* @param requestParameters
     */
    createMolecularTherapeuticRecommendation(requestParameters: CreateMolecularTherapeuticRecommendationRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Create Tumor Board
     * 
* @param requestParameters
     */
    createTumorBoard(requestParameters: CreateTumorBoardRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Molecular Tumor Board Therapeutic Recommendation
     * 
* @param requestParameters
     */
    deleteMolecularTherapeuticRecommendation(requestParameters: DeleteMolecularTherapeuticRecommendationRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete Tumor Board
     * 
* @param requestParameters
     */
    deleteTumorBoardById(requestParameters: DeleteTumorBoardByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Molecular Tumor Board Therapeutic History Events
     * 
* @param requestParameters
     */
    getAllMolecularTherapeuticRecommendationHistoryEvents(requestParameters: GetAllMolecularTherapeuticRecommendationHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEvent>;

    /**
     * Get All Tumor Board History Events
     * 
* @param requestParameters
     */
    getAllTumorBoardHistoryEvents(requestParameters: GetAllTumorBoardHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEvent>;

    /**
     * Get Molecular Tumor Board Therapeutic Recommendation By Id
     * 
* @param requestParameters
     */
    getMOlecularTherapeuticRecommendationById(requestParameters: GetMOlecularTherapeuticRecommendationByIdRequestParams, extraHttpRequestParams?: any): Observable<MolecularTherapeuticRecommendation>;

    /**
     * Get Molecular Tumor Board Therapeutic History Event By Id
     * 
* @param requestParameters
     */
    getMolecularTherapeuticRecommendationHistoryEventById(requestParameters: GetMolecularTherapeuticRecommendationHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEvent>;

    /**
     * Get Molecular Tumor Board Therapeutic Recommendations Matching The Query
     * 
* @param requestParameters
     */
    getMolecularTherapeuticRecommendations(requestParameters: GetMolecularTherapeuticRecommendationsRequestParams, extraHttpRequestParams?: any): Observable<Array<MolecularTherapeuticRecommendation>>;

    /**
     * Get Tumor Board By Id
     * 
* @param requestParameters
     */
    getTumorBoardById(requestParameters: GetTumorBoardByIdRequestParams, extraHttpRequestParams?: any): Observable<AnyTumorBoard>;

    /**
     * Get Tumor Board History Event By Id
     * 
* @param requestParameters
     */
    getTumorBoardHistoryEventById(requestParameters: GetTumorBoardHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEvent>;

    /**
     * Get All Tumor Boards Matching The Query
     * 
* @param requestParameters
     */
    getTumorBoards(requestParameters: GetTumorBoardsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedAnyTumorBoard>;

    /**
     * Revert Molecular Tumor Board Therapeutic To History Event
     * 
* @param requestParameters
     */
    revertMolecularTherapeuticRecommendationToHistoryEvent(requestParameters: RevertMolecularTherapeuticRecommendationToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Revert Tumor Board To History Event
     * 
* @param requestParameters
     */
    revertTumorBoardToHistoryEvent(requestParameters: RevertTumorBoardToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Molecular Tumor Board Therapeutic Recommendation
     * 
* @param requestParameters
     */
    updateMolecularTherapeuticRecommendation(requestParameters: UpdateMolecularTherapeuticRecommendationRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Tumor Board
     * 
* @param requestParameters
     */
    updateTumorBoardById(requestParameters: UpdateTumorBoardByIdRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
