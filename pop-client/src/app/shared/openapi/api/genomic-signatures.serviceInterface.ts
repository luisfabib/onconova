/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AnyGenomicSignature } from '../model/models';
import { HistoryEvent } from '../model/models';
import { ModifiedResource } from '../model/models';
import { PaginatedAnyGenomicSignature } from '../model/models';
import { PaginatedHistoryEvent } from '../model/models';
import { Payload2 } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateGenomicSignatureRequestParams {
    payload2: Payload2;
}

export interface DeleteGenomicSignatureByIdRequestParams {
    genomicSignatureId: string;
}

export interface GetAllGenomicSignatureHistoryEventsRequestParams {
    genomicSignatureId: string;
    limit?: number;
    offset?: number;
}

export interface GetGenomicSignatureByIdRequestParams {
    genomicSignatureId: string;
}

export interface GetGenomicSignatureHistoryEventByIdRequestParams {
    genomicSignatureId: string;
    eventId: string;
}

export interface GetGenomicSignaturesRequestParams {
    category?: string;
    categoryNot?: string;
    categoryAnyOf?: Array<'tumor_mutational_burden' | 'loss_of_heterozygosity' | 'microsatellite_instability' | 'homologous_recombination_deficiency' | 'tumor_neoantigen_burden' | 'aneuploid_score'>;
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    idAnyOf?: Array<string>;
    idNotAnyOf?: Array<string>;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    caseIdAnyOf?: Array<string>;
    caseIdNotAnyOf?: Array<string>;
    dateBefore?: string;
    dateAfter?: string;
    dateOnOrBefore?: string;
    dateOnOrAfter?: string;
    dateOn?: string;
    dateNotOn?: string;
    dateBetween?: Array<any>;
    dateNotBetween?: Array<any>;
    limit?: number;
    offset?: number;
}

export interface RevertGenomicSignatureToHistoryEventRequestParams {
    genomicSignatureId: string;
    eventId: string;
}

export interface UpdateGenomicSignatureByIdRequestParams {
    genomicSignatureId: string;
    payload2: Payload2;
}


export interface GenomicSignaturesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Genomic Signature
     * 
* @param requestParameters
     */
    createGenomicSignature(requestParameters: CreateGenomicSignatureRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Genomic Signature
     * 
* @param requestParameters
     */
    deleteGenomicSignatureById(requestParameters: DeleteGenomicSignatureByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Genomic Signature History Events
     * 
* @param requestParameters
     */
    getAllGenomicSignatureHistoryEvents(requestParameters: GetAllGenomicSignatureHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEvent>;

    /**
     * Get Genomic Signature By Id
     * 
* @param requestParameters
     */
    getGenomicSignatureById(requestParameters: GetGenomicSignatureByIdRequestParams, extraHttpRequestParams?: any): Observable<AnyGenomicSignature>;

    /**
     * Get Genomic Signature History Event By Id
     * 
* @param requestParameters
     */
    getGenomicSignatureHistoryEventById(requestParameters: GetGenomicSignatureHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEvent>;

    /**
     * Get All Genomic Signatures Matching The Query
     * 
* @param requestParameters
     */
    getGenomicSignatures(requestParameters: GetGenomicSignaturesRequestParams, extraHttpRequestParams?: any): Observable<PaginatedAnyGenomicSignature>;

    /**
     * Revert Genomic Signature To History Event
     * 
* @param requestParameters
     */
    revertGenomicSignatureToHistoryEvent(requestParameters: RevertGenomicSignatureToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Genomic Signature
     * 
* @param requestParameters
     */
    updateGenomicSignatureById(requestParameters: UpdateGenomicSignatureByIdRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
