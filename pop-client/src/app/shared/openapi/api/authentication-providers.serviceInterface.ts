/**
 * django-allauth: Headless API
 *
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiAllauthAppV1AuthProviderSignupGet200Response } from '../model/models';
import { AuthenticatedResponse } from '../model/models';
import { AuthenticationResponse } from '../model/models';
import { ConflictResponse } from '../model/models';
import { ErrorResponse } from '../model/models';
import { ForbiddenResponse } from '../model/models';
import { ProviderSignup } from '../model/models';
import { ProviderToken } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface ApiAllauthAppV1AuthProviderSignupGetRequestParams {
    client: 'app' | 'browser';
}

export interface ApiAllauthAppV1AuthProviderSignupPostRequestParams {
    client: 'app' | 'browser';
    providerSignup: ProviderSignup;
}

export interface ApiAllauthAppV1AuthProviderTokenPostRequestParams {
    client: 'app' | 'browser';
    providerToken: ProviderToken;
    xSessionToken?: string;
}


export interface AuthenticationProvidersServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Provider signup information
     * If, while signing up using a third-party provider account, there is insufficient information received from the provider to automatically complete the signup process, an additional step is needed to complete the missing data before the user is fully signed up and authenticated. The information available so far, such as the pending provider account, can be retrieved via this endpoint. 
* @param requestParameters
     */
    apiAllauthAppV1AuthProviderSignupGet(requestParameters: ApiAllauthAppV1AuthProviderSignupGetRequestParams, extraHttpRequestParams?: any): Observable<ApiAllauthAppV1AuthProviderSignupGet200Response>;

    /**
     * Provider signup
     * If, while signing up using a third-party provider account, there is insufficient information received from the provider to automatically complete the signup process, an additional step is needed to complete the missing data before the user is fully signed up and authenticated. 
* @param requestParameters
     */
    apiAllauthAppV1AuthProviderSignupPost(requestParameters: ApiAllauthAppV1AuthProviderSignupPostRequestParams, extraHttpRequestParams?: any): Observable<AuthenticatedResponse>;

    /**
     * Provider token
     * Authenticates with a third-party provider using provider tokens received by other means. For example, in case of a mobile app, the authentication flow runs completely on the device itself, without any interaction with the API. Then, when the (device) authentication completes and the mobile app receives an access and/or ID token, it can hand over these tokens via this endpoint to authenticate on the server. 
* @param requestParameters
     */
    apiAllauthAppV1AuthProviderTokenPost(requestParameters: ApiAllauthAppV1AuthProviderTokenPostRequestParams, extraHttpRequestParams?: any): Observable<AuthenticatedResponse>;

}
