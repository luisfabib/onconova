/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { HistoryEvent } from '../model/models';
import { ModifiedResource } from '../model/models';
import { PaginatedHistoryEvent } from '../model/models';
import { PaginatedRiskAssessment } from '../model/models';
import { RiskAssessment } from '../model/models';
import { RiskAssessmentCreate } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateRiskAssessmentRequestParams {
    riskAssessmentCreate: RiskAssessmentCreate;
}

export interface DeleteRiskAssessmentByIdRequestParams {
    riskAssessmentId: string;
}

export interface GetAllRiskAssessmentHistoryEventsRequestParams {
    riskAssessmentId: string;
    limit?: number;
    offset?: number;
}

export interface GetRiskAssessmentByIdRequestParams {
    riskAssessmentId: string;
}

export interface GetRiskAssessmentHistoryEventByIdRequestParams {
    riskAssessmentId: string;
    eventId: string;
}

export interface GetRiskAssessmentsRequestParams {
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    dateBefore?: string;
    dateAfter?: string;
    dateOnOrBefore?: string;
    dateOnOrAfter?: string;
    dateOn?: string;
    dateNotOn?: string;
    dateBetween?: Array<any>;
    dateNotBetween?: Array<any>;
    methodology?: string;
    methodologyNot?: string;
    methodologyAnyOf?: Array<string>;
    methodologyNotAnyOf?: Array<string>;
    methodologyDescendantsOf?: string;
    risk?: string;
    riskNot?: string;
    riskAnyOf?: Array<string>;
    riskNotAnyOf?: Array<string>;
    riskDescendantsOf?: string;
    scoreNotExists?: boolean;
    scoreExists?: boolean;
    scoreLessThan?: number;
    scoreLessThanOrEqual?: number;
    scoreGreaterThan?: number;
    scoreGreaterThanOrEqual?: number;
    scoreEqual?: number;
    scoreNotEqual?: number;
    scoreBetween?: Array<any>;
    scoreNotBetween?: Array<any>;
    assessedEntitiesIds?: string;
    assessedEntitiesIdsNot?: string;
    limit?: number;
    offset?: number;
}

export interface RevertRiskAssessmentToHistoryEventRequestParams {
    riskAssessmentId: string;
    eventId: string;
}

export interface UpdateRiskAssessmentByIdRequestParams {
    riskAssessmentId: string;
    riskAssessmentCreate: RiskAssessmentCreate;
}


export interface RiskAssessmentsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Risk Assessment
     * 
* @param requestParameters
     */
    createRiskAssessment(requestParameters: CreateRiskAssessmentRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Risk Assessment
     * 
* @param requestParameters
     */
    deleteRiskAssessmentById(requestParameters: DeleteRiskAssessmentByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Risk Assessment History Events
     * 
* @param requestParameters
     */
    getAllRiskAssessmentHistoryEvents(requestParameters: GetAllRiskAssessmentHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEvent>;

    /**
     * Get Risk Assessment By Id
     * 
* @param requestParameters
     */
    getRiskAssessmentById(requestParameters: GetRiskAssessmentByIdRequestParams, extraHttpRequestParams?: any): Observable<RiskAssessment>;

    /**
     * Get Risk Assessment History Event By Id
     * 
* @param requestParameters
     */
    getRiskAssessmentHistoryEventById(requestParameters: GetRiskAssessmentHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEvent>;

    /**
     * Get All Risk Assessments Matching The Query
     * 
* @param requestParameters
     */
    getRiskAssessments(requestParameters: GetRiskAssessmentsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedRiskAssessment>;

    /**
     * Revert Risk Assessment To History Event
     * 
* @param requestParameters
     */
    revertRiskAssessmentToHistoryEvent(requestParameters: RevertRiskAssessmentToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Risk Assessment
     * 
* @param requestParameters
     */
    updateRiskAssessmentById(requestParameters: UpdateRiskAssessmentByIdRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
