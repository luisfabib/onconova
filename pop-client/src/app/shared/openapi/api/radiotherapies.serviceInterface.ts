/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { HistoryEvent } from '../model/models';
import { ModifiedResource } from '../model/models';
import { PaginatedHistoryEvent } from '../model/models';
import { PaginatedRadiotherapy } from '../model/models';
import { Radiotherapy } from '../model/models';
import { RadiotherapyCreate } from '../model/models';
import { RadiotherapyDosage } from '../model/models';
import { RadiotherapyDosageCreate } from '../model/models';
import { RadiotherapySetting } from '../model/models';
import { RadiotherapySettingCreate } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateRadiotherapyRequestParams {
    radiotherapyCreate: RadiotherapyCreate;
}

export interface CreateRadiotherapyDosageRequestParams {
    radiotherapyId: string;
    radiotherapyDosageCreate: RadiotherapyDosageCreate;
}

export interface CreateRadiotherapySettingRequestParams {
    radiotherapyId: string;
    radiotherapySettingCreate: RadiotherapySettingCreate;
}

export interface DeleteRadiotherapyByIdRequestParams {
    radiotherapyId: string;
}

export interface DeleteRadiotherapyDosageRequestParams {
    radiotherapyId: string;
    dosageId: string;
}

export interface DeleteRadiotherapySettingRequestParams {
    radiotherapyId: string;
    settingId: string;
}

export interface GetAllRadiotherapyDosageHistoryEventsRequestParams {
    radiotherapyId: string;
    dosageId: string;
    limit?: number;
    offset?: number;
}

export interface GetAllRadiotherapyHistoryEventsRequestParams {
    radiotherapyId: string;
    limit?: number;
    offset?: number;
}

export interface GetAllRadiotherapySettingHistoryEventsRequestParams {
    radiotherapyId: string;
    settingId: string;
    limit?: number;
    offset?: number;
}

export interface GetRadiotherapiesRequestParams {
    dosagesId?: string;
    dosagesIdNot?: string;
    dosagesIdContains?: string;
    dosagesIdNotContains?: string;
    dosagesIdBeginsWith?: string;
    dosagesIdNotBeginsWith?: string;
    dosagesIdEndsWith?: string;
    dosagesIdNotEndsWith?: string;
    dosagesFractionsNotExists?: boolean;
    dosagesFractionsExists?: boolean;
    dosagesFractionsLessThan?: number;
    dosagesFractionsLessThanOrEqual?: number;
    dosagesFractionsGreaterThan?: number;
    dosagesFractionsGreaterThanOrEqual?: number;
    dosagesFractionsEqual?: number;
    dosagesFractionsNotEqual?: number;
    dosagesFractionsBetween?: Array<any>;
    dosagesFractionsNotBetween?: Array<any>;
    dosagesDoseNotExists?: boolean;
    dosagesDoseExists?: boolean;
    dosagesDoseLessThan?: number;
    dosagesDoseLessThanOrEqual?: number;
    dosagesDoseGreaterThan?: number;
    dosagesDoseGreaterThanOrEqual?: number;
    dosagesDoseEqual?: number;
    dosagesDoseNotEqual?: number;
    dosagesDoseBetween?: Array<any>;
    dosagesDoseNotBetween?: Array<any>;
    dosagesIrradiatedVolume?: string;
    dosagesIrradiatedVolumeNot?: string;
    dosagesIrradiatedVolumeAnyOf?: Array<string>;
    dosagesIrradiatedVolumeNotAnyOf?: Array<string>;
    dosagesIrradiatedVolumeDescendantsOf?: string;
    dosagesIrradiatedVolumeMorphologyNotExists?: boolean;
    dosagesIrradiatedVolumeMorphologyExists?: boolean;
    dosagesIrradiatedVolumeMorphology?: string;
    dosagesIrradiatedVolumeMorphologyNot?: string;
    dosagesIrradiatedVolumeMorphologyAnyOf?: Array<string>;
    dosagesIrradiatedVolumeMorphologyNotAnyOf?: Array<string>;
    dosagesIrradiatedVolumeMorphologyDescendantsOf?: string;
    dosagesIrradiatedVolumeQualifierNotExists?: boolean;
    dosagesIrradiatedVolumeQualifierExists?: boolean;
    dosagesIrradiatedVolumeQualifier?: string;
    dosagesIrradiatedVolumeQualifierNot?: string;
    dosagesIrradiatedVolumeQualifierAnyOf?: Array<string>;
    dosagesIrradiatedVolumeQualifierNotAnyOf?: Array<string>;
    dosagesIrradiatedVolumeQualifierDescendantsOf?: string;
    settingsId?: string;
    settingsIdNot?: string;
    settingsIdContains?: string;
    settingsIdNotContains?: string;
    settingsIdBeginsWith?: string;
    settingsIdNotBeginsWith?: string;
    settingsIdEndsWith?: string;
    settingsIdNotEndsWith?: string;
    settingsModality?: string;
    settingsModalityNot?: string;
    settingsModalityAnyOf?: Array<string>;
    settingsModalityNotAnyOf?: Array<string>;
    settingsModalityDescendantsOf?: string;
    settingsTechnique?: string;
    settingsTechniqueNot?: string;
    settingsTechniqueAnyOf?: Array<string>;
    settingsTechniqueNotAnyOf?: Array<string>;
    settingsTechniqueDescendantsOf?: string;
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    periodOverlaps?: Array<any>;
    periodNotOverlaps?: Array<any>;
    periodContains?: Array<any>;
    periodNotContains?: Array<any>;
    periodContainedBy?: Array<any>;
    periodNotContainedBy?: Array<any>;
    sessionsLessThan?: number;
    sessionsLessThanOrEqual?: number;
    sessionsGreaterThan?: number;
    sessionsGreaterThanOrEqual?: number;
    sessionsEqual?: number;
    sessionsNotEqual?: number;
    sessionsBetween?: Array<any>;
    sessionsNotBetween?: Array<any>;
    intent?: string;
    intentNot?: string;
    intentAnyOf?: Array<'curative' | 'palliative'>;
    terminationReasonNotExists?: boolean;
    terminationReasonExists?: boolean;
    terminationReason?: string;
    terminationReasonNot?: string;
    terminationReasonAnyOf?: Array<string>;
    terminationReasonNotAnyOf?: Array<string>;
    terminationReasonDescendantsOf?: string;
    therapyLineIdNotExists?: boolean;
    therapyLineIdExists?: boolean;
    therapyLineId?: string;
    therapyLineIdNot?: string;
    therapyLineIdContains?: string;
    therapyLineIdNotContains?: string;
    therapyLineIdBeginsWith?: string;
    therapyLineIdNotBeginsWith?: string;
    therapyLineIdEndsWith?: string;
    therapyLineIdNotEndsWith?: string;
    targetedEntitiesIds?: string;
    targetedEntitiesIdsNot?: string;
    limit?: number;
    offset?: number;
}

export interface GetRadiotherapyByIdRequestParams {
    radiotherapyId: string;
}

export interface GetRadiotherapyDosageByIdRequestParams {
    radiotherapyId: string;
    dosageId: string;
}

export interface GetRadiotherapyDosageHistoryEventByIdRequestParams {
    radiotherapyId: string;
    dosageId: string;
    eventId: string;
}

export interface GetRadiotherapyDosagesRequestParams {
    radiotherapyId: string;
}

export interface GetRadiotherapyHistoryEventByIdRequestParams {
    radiotherapyId: string;
    eventId: string;
}

export interface GetRadiotherapySettingByIdRequestParams {
    radiotherapyId: string;
    settingId: string;
}

export interface GetRadiotherapySettingHistoryEventByIdRequestParams {
    radiotherapyId: string;
    settingId: string;
    eventId: string;
}

export interface GetRadiotherapySettingsRequestParams {
    radiotherapyId: string;
}

export interface RevertRadiotherapyDosageToHistoryEventRequestParams {
    radiotherapyId: string;
    dosageId: string;
    eventId: string;
}

export interface RevertRadiotherapySettingToHistoryEventRequestParams {
    radiotherapyId: string;
    settingId: string;
    eventId: string;
}

export interface RevertRadiotherapyToHistoryEventRequestParams {
    radiotherapyId: string;
    eventId: string;
}

export interface UpdateRadiotherapyRequestParams {
    radiotherapyId: string;
    radiotherapyCreate: RadiotherapyCreate;
}

export interface UpdateRadiotherapyDosageRequestParams {
    radiotherapyId: string;
    dosageId: string;
    radiotherapyDosageCreate: RadiotherapyDosageCreate;
}

export interface UpdateRadiotherapySettingRequestParams {
    radiotherapyId: string;
    settingId: string;
    radiotherapySettingCreate: RadiotherapySettingCreate;
}


export interface RadiotherapiesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Radiotherapy
     * 
* @param requestParameters
     */
    createRadiotherapy(requestParameters: CreateRadiotherapyRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Create Radiotherapy Dosage
     * 
* @param requestParameters
     */
    createRadiotherapyDosage(requestParameters: CreateRadiotherapyDosageRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Create Radiotherapy Setting
     * 
* @param requestParameters
     */
    createRadiotherapySetting(requestParameters: CreateRadiotherapySettingRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Radiotherapy
     * 
* @param requestParameters
     */
    deleteRadiotherapyById(requestParameters: DeleteRadiotherapyByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete Radiotherapy Dosage
     * 
* @param requestParameters
     */
    deleteRadiotherapyDosage(requestParameters: DeleteRadiotherapyDosageRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete Radiotherapy Setting
     * 
* @param requestParameters
     */
    deleteRadiotherapySetting(requestParameters: DeleteRadiotherapySettingRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Radiotherapy Dosage History Events
     * 
* @param requestParameters
     */
    getAllRadiotherapyDosageHistoryEvents(requestParameters: GetAllRadiotherapyDosageHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEvent>;

    /**
     * Get All Radiotherapy History Events
     * 
* @param requestParameters
     */
    getAllRadiotherapyHistoryEvents(requestParameters: GetAllRadiotherapyHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEvent>;

    /**
     * Get All Radiotherapy Setting History Events
     * 
* @param requestParameters
     */
    getAllRadiotherapySettingHistoryEvents(requestParameters: GetAllRadiotherapySettingHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEvent>;

    /**
     * Get All Radiotherapies Matching The Query
     * 
* @param requestParameters
     */
    getRadiotherapies(requestParameters: GetRadiotherapiesRequestParams, extraHttpRequestParams?: any): Observable<PaginatedRadiotherapy>;

    /**
     * Get Radiotherapy By Id
     * 
* @param requestParameters
     */
    getRadiotherapyById(requestParameters: GetRadiotherapyByIdRequestParams, extraHttpRequestParams?: any): Observable<Radiotherapy>;

    /**
     * Get Radiotherapy Dosage By Id
     * 
* @param requestParameters
     */
    getRadiotherapyDosageById(requestParameters: GetRadiotherapyDosageByIdRequestParams, extraHttpRequestParams?: any): Observable<RadiotherapyDosage>;

    /**
     * Get Radiotherapy Dosage History Event By Id
     * 
* @param requestParameters
     */
    getRadiotherapyDosageHistoryEventById(requestParameters: GetRadiotherapyDosageHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEvent>;

    /**
     * Get Radiotherapy Dosages Matching The Query
     * 
* @param requestParameters
     */
    getRadiotherapyDosages(requestParameters: GetRadiotherapyDosagesRequestParams, extraHttpRequestParams?: any): Observable<Array<RadiotherapyDosage>>;

    /**
     * Get Radiotherapy History Event By Id
     * 
* @param requestParameters
     */
    getRadiotherapyHistoryEventById(requestParameters: GetRadiotherapyHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEvent>;

    /**
     * Get Radiotherapy Setting By Id
     * 
* @param requestParameters
     */
    getRadiotherapySettingById(requestParameters: GetRadiotherapySettingByIdRequestParams, extraHttpRequestParams?: any): Observable<RadiotherapySetting>;

    /**
     * Get Radiotherapy Setting History Event By Id
     * 
* @param requestParameters
     */
    getRadiotherapySettingHistoryEventById(requestParameters: GetRadiotherapySettingHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEvent>;

    /**
     * Get Radiotherapy Settings Matching The Query
     * 
* @param requestParameters
     */
    getRadiotherapySettings(requestParameters: GetRadiotherapySettingsRequestParams, extraHttpRequestParams?: any): Observable<Array<RadiotherapySetting>>;

    /**
     * Revert Radiotherapy Dosage To History Event
     * 
* @param requestParameters
     */
    revertRadiotherapyDosageToHistoryEvent(requestParameters: RevertRadiotherapyDosageToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Revert Radiotherapy Setting To History Event
     * 
* @param requestParameters
     */
    revertRadiotherapySettingToHistoryEvent(requestParameters: RevertRadiotherapySettingToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Revert Radiotherapy To History Event
     * 
* @param requestParameters
     */
    revertRadiotherapyToHistoryEvent(requestParameters: RevertRadiotherapyToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Radiotherapy
     * 
* @param requestParameters
     */
    updateRadiotherapy(requestParameters: UpdateRadiotherapyRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Radiotherapy Dosage
     * 
* @param requestParameters
     */
    updateRadiotherapyDosage(requestParameters: UpdateRadiotherapyDosageRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Radiotherapy Setting
     * 
* @param requestParameters
     */
    updateRadiotherapySetting(requestParameters: UpdateRadiotherapySettingRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
