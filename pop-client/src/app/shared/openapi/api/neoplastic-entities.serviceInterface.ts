/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { HistoryEventWithSchema } from '../model/models';
import { ModifiedResource } from '../model/models';
import { NeoplasticEntity } from '../model/models';
import { NeoplasticEntityCreate } from '../model/models';
import { PaginatedHistoryEventWithSchema } from '../model/models';
import { PaginatedNeoplasticEntity } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateNeoplasticEntityRequestParams {
    neoplasticEntityCreate: NeoplasticEntityCreate;
}

export interface DeleteNeoplasticEntityByIdRequestParams {
    entityId: string;
}

export interface GetAllNeoplasticEntityHistoryEventsRequestParams {
    entityId: string;
    limit?: number;
    offset?: number;
}

export interface GetNeoplasticEntitiesRequestParams {
    topographyGroupNotExists?: boolean;
    topographyGroupExists?: boolean;
    topographyGroup?: string;
    topographyGroupNot?: string;
    topographyGroupAnyOf?: Array<string>;
    topographyGroupNotAnyOf?: Array<string>;
    topographyGroupDescendantsOf?: string;
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    relationship?: string;
    relationshipNot?: string;
    relationshipAnyOf?: Array<'primary' | 'metastatic' | 'local_recurrence' | 'regional_recurrence'>;
    relatedPrimaryIdNotExists?: boolean;
    relatedPrimaryIdExists?: boolean;
    relatedPrimaryId?: string;
    relatedPrimaryIdNot?: string;
    relatedPrimaryIdContains?: string;
    relatedPrimaryIdNotContains?: string;
    relatedPrimaryIdBeginsWith?: string;
    relatedPrimaryIdNotBeginsWith?: string;
    relatedPrimaryIdEndsWith?: string;
    relatedPrimaryIdNotEndsWith?: string;
    assertionDateBefore?: string;
    assertionDateAfter?: string;
    assertionDateOnOrBefore?: string;
    assertionDateOnOrAfter?: string;
    assertionDateOn?: string;
    assertionDateNotOn?: string;
    assertionDateBetween?: Array<any>;
    assertionDateNotBetween?: Array<any>;
    topography?: string;
    topographyNot?: string;
    topographyAnyOf?: Array<string>;
    topographyNotAnyOf?: Array<string>;
    topographyDescendantsOf?: string;
    morphology?: string;
    morphologyNot?: string;
    morphologyAnyOf?: Array<string>;
    morphologyNotAnyOf?: Array<string>;
    morphologyDescendantsOf?: string;
    differentitationNotExists?: boolean;
    differentitationExists?: boolean;
    differentitation?: string;
    differentitationNot?: string;
    differentitationAnyOf?: Array<string>;
    differentitationNotAnyOf?: Array<string>;
    differentitationDescendantsOf?: string;
    lateralityNotExists?: boolean;
    lateralityExists?: boolean;
    laterality?: string;
    lateralityNot?: string;
    lateralityAnyOf?: Array<string>;
    lateralityNotAnyOf?: Array<string>;
    lateralityDescendantsOf?: string;
    limit?: number;
    offset?: number;
}

export interface GetNeoplasticEntityByIdRequestParams {
    entityId: string;
}

export interface GetNeoplasticEntityHistoryEventByIdRequestParams {
    entityId: string;
    eventId: string;
}

export interface RevertNeoplasticEntityToHistoryEventRequestParams {
    entityId: string;
    eventId: string;
}

export interface UpdateNeoplasticEntityByIdRequestParams {
    entityId: string;
    neoplasticEntityCreate: NeoplasticEntityCreate;
}


export interface NeoplasticEntitiesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Neoplastic Entity
     * 
* @param requestParameters
     */
    createNeoplasticEntity(requestParameters: CreateNeoplasticEntityRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Neoplastic Entity
     * 
* @param requestParameters
     */
    deleteNeoplasticEntityById(requestParameters: DeleteNeoplasticEntityByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Neoplastic Entity History Events
     * 
* @param requestParameters
     */
    getAllNeoplasticEntityHistoryEvents(requestParameters: GetAllNeoplasticEntityHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEventWithSchema>;

    /**
     * Get All Neoplastic Entities Matching The Query
     * 
* @param requestParameters
     */
    getNeoplasticEntities(requestParameters: GetNeoplasticEntitiesRequestParams, extraHttpRequestParams?: any): Observable<PaginatedNeoplasticEntity>;

    /**
     * Get Neoplastic Entity By Id
     * 
* @param requestParameters
     */
    getNeoplasticEntityById(requestParameters: GetNeoplasticEntityByIdRequestParams, extraHttpRequestParams?: any): Observable<NeoplasticEntity>;

    /**
     * Get Neoplastic Entity History Event By Id
     * 
* @param requestParameters
     */
    getNeoplasticEntityHistoryEventById(requestParameters: GetNeoplasticEntityHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEventWithSchema>;

    /**
     * Revert Neoplastic Entity To History Event
     * 
* @param requestParameters
     */
    revertNeoplasticEntityToHistoryEvent(requestParameters: RevertNeoplasticEntityToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Neoplastic Entity
     * 
* @param requestParameters
     */
    updateNeoplasticEntityById(requestParameters: UpdateNeoplasticEntityByIdRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
