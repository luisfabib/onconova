/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { HistoryEventWithSchema } from '../model/models';
import { ModifiedResource } from '../model/models';
import { PaginatedHistoryEventWithSchema } from '../model/models';
import { PaginatedProject } from '../model/models';
import { PaginatedProjectDataManagerGrant } from '../model/models';
import { Project } from '../model/models';
import { ProjectCreate } from '../model/models';
import { ProjectDataManagerGrant } from '../model/models';
import { ProjectDataManagerGrantCreate } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateProjectRequestParams {
    projectCreate: ProjectCreate;
}

export interface CreateProjectDataManagerGrantRequestParams {
    projectId: string;
    memberId: string;
    projectDataManagerGrantCreate: ProjectDataManagerGrantCreate;
}

export interface DeleteProjectByIdRequestParams {
    projectId: string;
}

export interface DeleteProjectDataManagerGrantRequestParams {
    projectId: string;
    memberId: string;
    grantId: string;
}

export interface GetAllProjectHistoryEventsRequestParams {
    projectId: string;
    limit?: number;
    offset?: number;
}

export interface GetProjectByIdRequestParams {
    projectId: string;
}

export interface GetProjectDataManagerGrantRequestParams {
    projectId: string;
    memberId: string;
    limit?: number;
    offset?: number;
}

export interface GetProjectDataManagerGrantByIdRequestParams {
    projectId: string;
    memberId: string;
    grantId: string;
}

export interface GetProjectHistoryEventByIdRequestParams {
    projectId: string;
    eventId: string;
}

export interface GetProjectsRequestParams {
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    leaderRole?: string;
    leaderRoleNot?: string;
    leaderRoleAnyOf?: Array<'External' | 'Viewer' | 'Data Contributor' | 'Data Analyst' | 'Project Manager' | 'Platform Manager' | 'System Administrator'>;
    leaderCanViewCases?: boolean;
    leaderCanViewProjects?: boolean;
    leaderCanViewCohorts?: boolean;
    leaderCanViewUsers?: boolean;
    leaderCanViewDatasets?: boolean;
    leaderCanImportData?: boolean;
    leaderCanManageCases?: boolean;
    leaderCanManageCohorts?: boolean;
    leaderCanManageDatasets?: boolean;
    leaderCanAnalyzeData?: boolean;
    leaderCanExportData?: boolean;
    leaderCanManageProjects?: boolean;
    leaderCanAccessSensitiveData?: boolean;
    leaderCanAuditLogs?: boolean;
    leaderCanManageUsers?: boolean;
    leaderIsSystemAdmin?: boolean;
    leaderIsProvided?: boolean;
    leaderProviderNotExists?: boolean;
    leaderProviderExists?: boolean;
    leaderProvider?: string;
    leaderProviderNot?: string;
    leaderProviderContains?: string;
    leaderProviderNotContains?: string;
    leaderProviderBeginsWith?: string;
    leaderProviderNotBeginsWith?: string;
    leaderProviderEndsWith?: string;
    leaderProviderNotEndsWith?: string;
    leaderLastLoginNotExists?: boolean;
    leaderLastLoginExists?: boolean;
    leaderLastLoginBefore?: string;
    leaderLastLoginAfter?: string;
    leaderLastLoginOnOrBefore?: string;
    leaderLastLoginOnOrAfter?: string;
    leaderLastLoginOn?: string;
    leaderLastLoginNotOn?: string;
    leaderLastLoginBetween?: Array<any>;
    leaderLastLoginNotBetween?: Array<any>;
    leaderUsername?: string;
    leaderUsernameNot?: string;
    leaderUsernameContains?: string;
    leaderUsernameNotContains?: string;
    leaderUsernameBeginsWith?: string;
    leaderUsernameNotBeginsWith?: string;
    leaderUsernameEndsWith?: string;
    leaderUsernameNotEndsWith?: string;
    leaderFirstNameNotExists?: boolean;
    leaderFirstNameExists?: boolean;
    leaderFirstName?: string;
    leaderFirstNameNot?: string;
    leaderFirstNameContains?: string;
    leaderFirstNameNotContains?: string;
    leaderFirstNameBeginsWith?: string;
    leaderFirstNameNotBeginsWith?: string;
    leaderFirstNameEndsWith?: string;
    leaderFirstNameNotEndsWith?: string;
    leaderLastNameNotExists?: boolean;
    leaderLastNameExists?: boolean;
    leaderLastName?: string;
    leaderLastNameNot?: string;
    leaderLastNameContains?: string;
    leaderLastNameNotContains?: string;
    leaderLastNameBeginsWith?: string;
    leaderLastNameNotBeginsWith?: string;
    leaderLastNameEndsWith?: string;
    leaderLastNameNotEndsWith?: string;
    leaderEmailNotExists?: boolean;
    leaderEmailExists?: boolean;
    leaderEmail?: string;
    leaderEmailNot?: string;
    leaderEmailContains?: string;
    leaderEmailNotContains?: string;
    leaderEmailBeginsWith?: string;
    leaderEmailNotBeginsWith?: string;
    leaderEmailEndsWith?: string;
    leaderEmailNotEndsWith?: string;
    leaderIsActive?: boolean;
    leaderId?: string;
    leaderIdNot?: string;
    leaderIdContains?: string;
    leaderIdNotContains?: string;
    leaderIdBeginsWith?: string;
    leaderIdNotBeginsWith?: string;
    leaderIdEndsWith?: string;
    leaderIdNotEndsWith?: string;
    leaderTitleNotExists?: boolean;
    leaderTitleExists?: boolean;
    leaderTitle?: string;
    leaderTitleNot?: string;
    leaderTitleContains?: string;
    leaderTitleNotContains?: string;
    leaderTitleBeginsWith?: string;
    leaderTitleNotBeginsWith?: string;
    leaderTitleEndsWith?: string;
    leaderTitleNotEndsWith?: string;
    leaderOrganizationNotExists?: boolean;
    leaderOrganizationExists?: boolean;
    leaderOrganization?: string;
    leaderOrganizationNot?: string;
    leaderOrganizationContains?: string;
    leaderOrganizationNotContains?: string;
    leaderOrganizationBeginsWith?: string;
    leaderOrganizationNotBeginsWith?: string;
    leaderOrganizationEndsWith?: string;
    leaderOrganizationNotEndsWith?: string;
    leaderDepartmentNotExists?: boolean;
    leaderDepartmentExists?: boolean;
    leaderDepartment?: string;
    leaderDepartmentNot?: string;
    leaderDepartmentContains?: string;
    leaderDepartmentNotContains?: string;
    leaderDepartmentBeginsWith?: string;
    leaderDepartmentNotBeginsWith?: string;
    leaderDepartmentEndsWith?: string;
    leaderDepartmentNotEndsWith?: string;
    leaderAccessLevelLessThan?: number;
    leaderAccessLevelLessThanOrEqual?: number;
    leaderAccessLevelGreaterThan?: number;
    leaderAccessLevelGreaterThanOrEqual?: number;
    leaderAccessLevelEqual?: number;
    leaderAccessLevelNotEqual?: number;
    leaderAccessLevelBetween?: Array<any>;
    leaderAccessLevelNotBetween?: Array<any>;
    clinicalCenters?: string;
    clinicalCentersNot?: string;
    clinicalCentersContains?: string;
    clinicalCentersNotContains?: string;
    clinicalCentersBeginsWith?: string;
    clinicalCentersNotBeginsWith?: string;
    clinicalCentersEndsWith?: string;
    clinicalCentersNotEndsWith?: string;
    title?: string;
    titleNot?: string;
    titleContains?: string;
    titleNotContains?: string;
    titleBeginsWith?: string;
    titleNotBeginsWith?: string;
    titleEndsWith?: string;
    titleNotEndsWith?: string;
    summary?: string;
    summaryNot?: string;
    summaryContains?: string;
    summaryNotContains?: string;
    summaryBeginsWith?: string;
    summaryNotBeginsWith?: string;
    summaryEndsWith?: string;
    summaryNotEndsWith?: string;
    ethicsApprovalNumber?: string;
    ethicsApprovalNumberNot?: string;
    ethicsApprovalNumberContains?: string;
    ethicsApprovalNumberNotContains?: string;
    ethicsApprovalNumberBeginsWith?: string;
    ethicsApprovalNumberNotBeginsWith?: string;
    ethicsApprovalNumberEndsWith?: string;
    ethicsApprovalNumberNotEndsWith?: string;
    status?: string;
    statusNot?: string;
    statusAnyOf?: Array<'planned' | 'ongoing' | 'completed' | 'aborted'>;
    membersRole?: string;
    membersRoleNot?: string;
    membersRoleAnyOf?: Array<'External' | 'Viewer' | 'Data Contributor' | 'Data Analyst' | 'Project Manager' | 'Platform Manager' | 'System Administrator'>;
    membersCanViewCases?: boolean;
    membersCanViewProjects?: boolean;
    membersCanViewCohorts?: boolean;
    membersCanViewUsers?: boolean;
    membersCanViewDatasets?: boolean;
    membersCanImportData?: boolean;
    membersCanManageCases?: boolean;
    membersCanManageCohorts?: boolean;
    membersCanManageDatasets?: boolean;
    membersCanAnalyzeData?: boolean;
    membersCanExportData?: boolean;
    membersCanManageProjects?: boolean;
    membersCanAccessSensitiveData?: boolean;
    membersCanAuditLogs?: boolean;
    membersCanManageUsers?: boolean;
    membersIsSystemAdmin?: boolean;
    membersIsProvided?: boolean;
    membersProviderNotExists?: boolean;
    membersProviderExists?: boolean;
    membersProvider?: string;
    membersProviderNot?: string;
    membersProviderContains?: string;
    membersProviderNotContains?: string;
    membersProviderBeginsWith?: string;
    membersProviderNotBeginsWith?: string;
    membersProviderEndsWith?: string;
    membersProviderNotEndsWith?: string;
    membersLastLoginNotExists?: boolean;
    membersLastLoginExists?: boolean;
    membersLastLoginBefore?: string;
    membersLastLoginAfter?: string;
    membersLastLoginOnOrBefore?: string;
    membersLastLoginOnOrAfter?: string;
    membersLastLoginOn?: string;
    membersLastLoginNotOn?: string;
    membersLastLoginBetween?: Array<any>;
    membersLastLoginNotBetween?: Array<any>;
    membersUsername?: string;
    membersUsernameNot?: string;
    membersUsernameContains?: string;
    membersUsernameNotContains?: string;
    membersUsernameBeginsWith?: string;
    membersUsernameNotBeginsWith?: string;
    membersUsernameEndsWith?: string;
    membersUsernameNotEndsWith?: string;
    membersFirstNameNotExists?: boolean;
    membersFirstNameExists?: boolean;
    membersFirstName?: string;
    membersFirstNameNot?: string;
    membersFirstNameContains?: string;
    membersFirstNameNotContains?: string;
    membersFirstNameBeginsWith?: string;
    membersFirstNameNotBeginsWith?: string;
    membersFirstNameEndsWith?: string;
    membersFirstNameNotEndsWith?: string;
    membersLastNameNotExists?: boolean;
    membersLastNameExists?: boolean;
    membersLastName?: string;
    membersLastNameNot?: string;
    membersLastNameContains?: string;
    membersLastNameNotContains?: string;
    membersLastNameBeginsWith?: string;
    membersLastNameNotBeginsWith?: string;
    membersLastNameEndsWith?: string;
    membersLastNameNotEndsWith?: string;
    membersEmailNotExists?: boolean;
    membersEmailExists?: boolean;
    membersEmail?: string;
    membersEmailNot?: string;
    membersEmailContains?: string;
    membersEmailNotContains?: string;
    membersEmailBeginsWith?: string;
    membersEmailNotBeginsWith?: string;
    membersEmailEndsWith?: string;
    membersEmailNotEndsWith?: string;
    membersIsActive?: boolean;
    membersId?: string;
    membersIdNot?: string;
    membersIdContains?: string;
    membersIdNotContains?: string;
    membersIdBeginsWith?: string;
    membersIdNotBeginsWith?: string;
    membersIdEndsWith?: string;
    membersIdNotEndsWith?: string;
    membersTitleNotExists?: boolean;
    membersTitleExists?: boolean;
    membersTitle?: string;
    membersTitleNot?: string;
    membersTitleContains?: string;
    membersTitleNotContains?: string;
    membersTitleBeginsWith?: string;
    membersTitleNotBeginsWith?: string;
    membersTitleEndsWith?: string;
    membersTitleNotEndsWith?: string;
    membersOrganizationNotExists?: boolean;
    membersOrganizationExists?: boolean;
    membersOrganization?: string;
    membersOrganizationNot?: string;
    membersOrganizationContains?: string;
    membersOrganizationNotContains?: string;
    membersOrganizationBeginsWith?: string;
    membersOrganizationNotBeginsWith?: string;
    membersOrganizationEndsWith?: string;
    membersOrganizationNotEndsWith?: string;
    membersDepartmentNotExists?: boolean;
    membersDepartmentExists?: boolean;
    membersDepartment?: string;
    membersDepartmentNot?: string;
    membersDepartmentContains?: string;
    membersDepartmentNotContains?: string;
    membersDepartmentBeginsWith?: string;
    membersDepartmentNotBeginsWith?: string;
    membersDepartmentEndsWith?: string;
    membersDepartmentNotEndsWith?: string;
    membersAccessLevelLessThan?: number;
    membersAccessLevelLessThanOrEqual?: number;
    membersAccessLevelGreaterThan?: number;
    membersAccessLevelGreaterThanOrEqual?: number;
    membersAccessLevelEqual?: number;
    membersAccessLevelNotEqual?: number;
    membersAccessLevelBetween?: Array<any>;
    membersAccessLevelNotBetween?: Array<any>;
    limit?: number;
    offset?: number;
}

export interface RevertProjectToHistoryEventRequestParams {
    projectId: string;
    eventId: string;
}

export interface UpdateProjectByIdRequestParams {
    projectId: string;
    projectCreate: ProjectCreate;
}


export interface ProjectsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Project
     * 
* @param requestParameters
     */
    createProject(requestParameters: CreateProjectRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Create Project Data Manager Grant
     * 
* @param requestParameters
     */
    createProjectDataManagerGrant(requestParameters: CreateProjectDataManagerGrantRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Project
     * 
* @param requestParameters
     */
    deleteProjectById(requestParameters: DeleteProjectByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Revoke Project Data Manager Grant
     * 
* @param requestParameters
     */
    deleteProjectDataManagerGrant(requestParameters: DeleteProjectDataManagerGrantRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Project History Events
     * 
* @param requestParameters
     */
    getAllProjectHistoryEvents(requestParameters: GetAllProjectHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEventWithSchema>;

    /**
     * Get Project By Id
     * 
* @param requestParameters
     */
    getProjectById(requestParameters: GetProjectByIdRequestParams, extraHttpRequestParams?: any): Observable<Project>;

    /**
     * Get All Project Data Manager Grant
     * 
* @param requestParameters
     */
    getProjectDataManagerGrant(requestParameters: GetProjectDataManagerGrantRequestParams, extraHttpRequestParams?: any): Observable<PaginatedProjectDataManagerGrant>;

    /**
     * Check Project Data Manager Grant
     * 
* @param requestParameters
     */
    getProjectDataManagerGrantById(requestParameters: GetProjectDataManagerGrantByIdRequestParams, extraHttpRequestParams?: any): Observable<ProjectDataManagerGrant>;

    /**
     * Get Project History Event By Id
     * 
* @param requestParameters
     */
    getProjectHistoryEventById(requestParameters: GetProjectHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEventWithSchema>;

    /**
     * Get All Projects Matching The Query
     * 
* @param requestParameters
     */
    getProjects(requestParameters: GetProjectsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedProject>;

    /**
     * Revert Project To History Event
     * 
* @param requestParameters
     */
    revertProjectToHistoryEvent(requestParameters: RevertProjectToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Project
     * 
* @param requestParameters
     */
    updateProjectById(requestParameters: UpdateProjectByIdRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
