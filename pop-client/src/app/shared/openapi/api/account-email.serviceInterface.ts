/**
 * django-allauth: Headless API
 *
 * Contact: info@allauth.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiAllauthAppV1AccountEmailGet200Response } from '../model/models';
import { ApiAllauthAppV1AccountEmailPatchRequest } from '../model/models';
import { ApiAllauthAppV1AccountEmailPost401Response } from '../model/models';
import { ApiAllauthAppV1AccountEmailPutRequest } from '../model/models';
import { ApiAllauthAppV1AuthEmailVerifyResendPost200Response } from '../model/models';
import { AuthenticationResponse } from '../model/models';
import { ConflictResponse } from '../model/models';
import { ErrorResponse } from '../model/models';
import { ForbiddenResponse } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface ApiAllauthAppV1AccountEmailDeleteRequestParams {
    client: 'app' | 'browser';
    xSessionToken?: string;
    apiAllauthAppV1AccountEmailPutRequest?: ApiAllauthAppV1AccountEmailPutRequest;
}

export interface ApiAllauthAppV1AccountEmailGetRequestParams {
    client: 'app' | 'browser';
    xSessionToken?: string;
}

export interface ApiAllauthAppV1AccountEmailPatchRequestParams {
    client: 'app' | 'browser';
    xSessionToken?: string;
    apiAllauthAppV1AccountEmailPatchRequest?: ApiAllauthAppV1AccountEmailPatchRequest;
}

export interface ApiAllauthAppV1AccountEmailPostRequestParams {
    client: 'app' | 'browser';
    xSessionToken?: string;
    apiAllauthAppV1AccountEmailPutRequest?: ApiAllauthAppV1AccountEmailPutRequest;
}

export interface ApiAllauthAppV1AccountEmailPutRequestParams {
    client: 'app' | 'browser';
    xSessionToken?: string;
    apiAllauthAppV1AccountEmailPutRequest?: ApiAllauthAppV1AccountEmailPutRequest;
}


export interface AccountEmailServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Remove an email address
     * Used to remove an email address. 
* @param requestParameters
     */
    apiAllauthAppV1AccountEmailDelete(requestParameters: ApiAllauthAppV1AccountEmailDeleteRequestParams, extraHttpRequestParams?: any): Observable<ApiAllauthAppV1AccountEmailGet200Response>;

    /**
     * List email addresses
     * Retrieves the list of email addreses of the account. 
* @param requestParameters
     */
    apiAllauthAppV1AccountEmailGet(requestParameters: ApiAllauthAppV1AccountEmailGetRequestParams, extraHttpRequestParams?: any): Observable<ApiAllauthAppV1AccountEmailGet200Response>;

    /**
     * Change primary email address
     * Used to change primary email address to a different one. Note that only verified email addresses can be marked as primary. 
* @param requestParameters
     */
    apiAllauthAppV1AccountEmailPatch(requestParameters: ApiAllauthAppV1AccountEmailPatchRequestParams, extraHttpRequestParams?: any): Observable<ApiAllauthAppV1AccountEmailGet200Response>;

    /**
     * Add/Change email address 
     * The following functionality is available:    - Adding a new email address for an already signed in user (&#x60;ACCOUNT_CHANGE_EMAIL &#x3D; False&#x60;).   - Change to a new email address for an already signed in user   (&#x60;ACCOUNT_CHANGE_EMAIL &#x3D; True&#x60;).   - Change to a new email address during the email verification process at signup (&#x60;ACCOUNT_EMAIL_VERIFICATION_SUPPORTS_CHANGE &#x3D; True&#x60;).  In all cases, an email verification mail will be sent containing a link or code that needs to be verified. 
* @param requestParameters
     */
    apiAllauthAppV1AccountEmailPost(requestParameters: ApiAllauthAppV1AccountEmailPostRequestParams, extraHttpRequestParams?: any): Observable<ApiAllauthAppV1AccountEmailGet200Response>;

    /**
     * Request email verification
     * Requests for (another) email verification email to be sent. Note that sending emails is rate limited, so when you send too many requests the email will not be sent. 
* @param requestParameters
     */
    apiAllauthAppV1AccountEmailPut(requestParameters: ApiAllauthAppV1AccountEmailPutRequestParams, extraHttpRequestParams?: any): Observable<ApiAllauthAppV1AuthEmailVerifyResendPost200Response>;

}
