/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { HistoryEventWithSchema } from '../model/models';
import { ModifiedResource } from '../model/models';
import { PaginatedHistoryEventWithSchema } from '../model/models';
import { PaginatedSystemicTherapy } from '../model/models';
import { SystemicTherapy } from '../model/models';
import { SystemicTherapyCreate } from '../model/models';
import { SystemicTherapyMedication } from '../model/models';
import { SystemicTherapyMedicationCreate } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateSystemicTherapyRequestParams {
    systemicTherapyCreate: SystemicTherapyCreate;
}

export interface CreateSystemicTherapyMedicationRequestParams {
    systemicTherapyId: string;
    systemicTherapyMedicationCreate: SystemicTherapyMedicationCreate;
}

export interface DeleteSystemicTherapyByIdRequestParams {
    systemicTherapyId: string;
}

export interface DeleteSystemicTherapyMedicationRequestParams {
    systemicTherapyId: string;
    medicationId: string;
}

export interface GetAllSystemicTherapyHistoryEventsRequestParams {
    systemicTherapyId: string;
    limit?: number;
    offset?: number;
}

export interface GetAllSystemicTherapyMedicationHistoryEventsRequestParams {
    systemicTherapyId: string;
    medicationId: string;
    limit?: number;
    offset?: number;
}

export interface GetSystemicTherapiesRequestParams {
    medicationsId?: string;
    medicationsIdNot?: string;
    medicationsIdContains?: string;
    medicationsIdNotContains?: string;
    medicationsIdBeginsWith?: string;
    medicationsIdNotBeginsWith?: string;
    medicationsIdEndsWith?: string;
    medicationsIdNotEndsWith?: string;
    medicationsIdAnyOf?: Array<string>;
    medicationsIdNotAnyOf?: Array<string>;
    medicationsDrug?: string;
    medicationsDrugNot?: string;
    medicationsDrugAnyOf?: Array<string>;
    medicationsDrugNotAnyOf?: Array<string>;
    medicationsDrugDescendantsOf?: string;
    medicationsRouteNotExists?: boolean;
    medicationsRouteExists?: boolean;
    medicationsRoute?: string;
    medicationsRouteNot?: string;
    medicationsRouteAnyOf?: Array<string>;
    medicationsRouteNotAnyOf?: Array<string>;
    medicationsRouteDescendantsOf?: string;
    medicationsUsedOfflabelNotExists?: boolean;
    medicationsUsedOfflabelExists?: boolean;
    medicationsUsedOfflabel?: boolean;
    medicationsWithinSocNotExists?: boolean;
    medicationsWithinSocExists?: boolean;
    medicationsWithinSoc?: boolean;
    medicationsDosageMassConcentrationNotExists?: boolean;
    medicationsDosageMassConcentrationExists?: boolean;
    medicationsDosageMassConcentrationLessThan?: number;
    medicationsDosageMassConcentrationLessThanOrEqual?: number;
    medicationsDosageMassConcentrationGreaterThan?: number;
    medicationsDosageMassConcentrationGreaterThanOrEqual?: number;
    medicationsDosageMassConcentrationEqual?: number;
    medicationsDosageMassConcentrationNotEqual?: number;
    medicationsDosageMassConcentrationBetween?: Array<any>;
    medicationsDosageMassConcentrationNotBetween?: Array<any>;
    medicationsDosageMassNotExists?: boolean;
    medicationsDosageMassExists?: boolean;
    medicationsDosageMassLessThan?: number;
    medicationsDosageMassLessThanOrEqual?: number;
    medicationsDosageMassGreaterThan?: number;
    medicationsDosageMassGreaterThanOrEqual?: number;
    medicationsDosageMassEqual?: number;
    medicationsDosageMassNotEqual?: number;
    medicationsDosageMassBetween?: Array<any>;
    medicationsDosageMassNotBetween?: Array<any>;
    medicationsDosageVolumeNotExists?: boolean;
    medicationsDosageVolumeExists?: boolean;
    medicationsDosageVolumeLessThan?: number;
    medicationsDosageVolumeLessThanOrEqual?: number;
    medicationsDosageVolumeGreaterThan?: number;
    medicationsDosageVolumeGreaterThanOrEqual?: number;
    medicationsDosageVolumeEqual?: number;
    medicationsDosageVolumeNotEqual?: number;
    medicationsDosageVolumeBetween?: Array<any>;
    medicationsDosageVolumeNotBetween?: Array<any>;
    medicationsDosageMassSurfaceNotExists?: boolean;
    medicationsDosageMassSurfaceExists?: boolean;
    medicationsDosageMassSurfaceLessThan?: number;
    medicationsDosageMassSurfaceLessThanOrEqual?: number;
    medicationsDosageMassSurfaceGreaterThan?: number;
    medicationsDosageMassSurfaceGreaterThanOrEqual?: number;
    medicationsDosageMassSurfaceEqual?: number;
    medicationsDosageMassSurfaceNotEqual?: number;
    medicationsDosageMassSurfaceBetween?: Array<any>;
    medicationsDosageMassSurfaceNotBetween?: Array<any>;
    medicationsDosageRateMassConcentrationNotExists?: boolean;
    medicationsDosageRateMassConcentrationExists?: boolean;
    medicationsDosageRateMassConcentrationLessThan?: number;
    medicationsDosageRateMassConcentrationLessThanOrEqual?: number;
    medicationsDosageRateMassConcentrationGreaterThan?: number;
    medicationsDosageRateMassConcentrationGreaterThanOrEqual?: number;
    medicationsDosageRateMassConcentrationEqual?: number;
    medicationsDosageRateMassConcentrationNotEqual?: number;
    medicationsDosageRateMassConcentrationBetween?: Array<any>;
    medicationsDosageRateMassConcentrationNotBetween?: Array<any>;
    medicationsDosageRateMassNotExists?: boolean;
    medicationsDosageRateMassExists?: boolean;
    medicationsDosageRateMassLessThan?: number;
    medicationsDosageRateMassLessThanOrEqual?: number;
    medicationsDosageRateMassGreaterThan?: number;
    medicationsDosageRateMassGreaterThanOrEqual?: number;
    medicationsDosageRateMassEqual?: number;
    medicationsDosageRateMassNotEqual?: number;
    medicationsDosageRateMassBetween?: Array<any>;
    medicationsDosageRateMassNotBetween?: Array<any>;
    medicationsDosageRateVolumeNotExists?: boolean;
    medicationsDosageRateVolumeExists?: boolean;
    medicationsDosageRateVolumeLessThan?: number;
    medicationsDosageRateVolumeLessThanOrEqual?: number;
    medicationsDosageRateVolumeGreaterThan?: number;
    medicationsDosageRateVolumeGreaterThanOrEqual?: number;
    medicationsDosageRateVolumeEqual?: number;
    medicationsDosageRateVolumeNotEqual?: number;
    medicationsDosageRateVolumeBetween?: Array<any>;
    medicationsDosageRateVolumeNotBetween?: Array<any>;
    medicationsDosageRateMassSurfaceNotExists?: boolean;
    medicationsDosageRateMassSurfaceExists?: boolean;
    medicationsDosageRateMassSurfaceLessThan?: number;
    medicationsDosageRateMassSurfaceLessThanOrEqual?: number;
    medicationsDosageRateMassSurfaceGreaterThan?: number;
    medicationsDosageRateMassSurfaceGreaterThanOrEqual?: number;
    medicationsDosageRateMassSurfaceEqual?: number;
    medicationsDosageRateMassSurfaceNotEqual?: number;
    medicationsDosageRateMassSurfaceBetween?: Array<any>;
    medicationsDosageRateMassSurfaceNotBetween?: Array<any>;
    medicationsAnonymized?: boolean;
    durationLessThan?: number;
    durationLessThanOrEqual?: number;
    durationGreaterThan?: number;
    durationGreaterThanOrEqual?: number;
    durationEqual?: number;
    durationNotEqual?: number;
    durationBetween?: Array<any>;
    durationNotBetween?: Array<any>;
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    idAnyOf?: Array<string>;
    idNotAnyOf?: Array<string>;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    caseIdAnyOf?: Array<string>;
    caseIdNotAnyOf?: Array<string>;
    periodOverlaps?: Array<any>;
    periodNotOverlaps?: Array<any>;
    periodContains?: Array<any>;
    periodNotContains?: Array<any>;
    periodContainedBy?: Array<any>;
    periodNotContainedBy?: Array<any>;
    cyclesLessThan?: number;
    cyclesLessThanOrEqual?: number;
    cyclesGreaterThan?: number;
    cyclesGreaterThanOrEqual?: number;
    cyclesEqual?: number;
    cyclesNotEqual?: number;
    cyclesBetween?: Array<any>;
    cyclesNotBetween?: Array<any>;
    intent?: string;
    intentNot?: string;
    intentAnyOf?: Array<'curative' | 'palliative'>;
    adjunctiveRoleNotExists?: boolean;
    adjunctiveRoleExists?: boolean;
    adjunctiveRole?: string;
    adjunctiveRoleNot?: string;
    adjunctiveRoleAnyOf?: Array<string>;
    adjunctiveRoleNotAnyOf?: Array<string>;
    adjunctiveRoleDescendantsOf?: string;
    isAdjunctive?: boolean;
    terminationReasonNotExists?: boolean;
    terminationReasonExists?: boolean;
    terminationReason?: string;
    terminationReasonNot?: string;
    terminationReasonAnyOf?: Array<string>;
    terminationReasonNotAnyOf?: Array<string>;
    terminationReasonDescendantsOf?: string;
    therapyLineIdNotExists?: boolean;
    therapyLineIdExists?: boolean;
    therapyLineId?: string;
    therapyLineIdNot?: string;
    therapyLineIdContains?: string;
    therapyLineIdNotContains?: string;
    therapyLineIdBeginsWith?: string;
    therapyLineIdNotBeginsWith?: string;
    therapyLineIdEndsWith?: string;
    therapyLineIdNotEndsWith?: string;
    therapyLineIdAnyOf?: Array<string>;
    therapyLineIdNotAnyOf?: Array<string>;
    targetedEntitiesIds?: string;
    targetedEntitiesIdsNot?: string;
    targetedEntitiesIdsContains?: string;
    targetedEntitiesIdsNotContains?: string;
    targetedEntitiesIdsBeginsWith?: string;
    targetedEntitiesIdsNotBeginsWith?: string;
    targetedEntitiesIdsEndsWith?: string;
    targetedEntitiesIdsNotEndsWith?: string;
    targetedEntitiesIdsAnyOf?: Array<string>;
    targetedEntitiesIdsNotAnyOf?: Array<string>;
    limit?: number;
    offset?: number;
}

export interface GetSystemicTherapyByIdRequestParams {
    systemicTherapyId: string;
}

export interface GetSystemicTherapyHistoryEventByIdRequestParams {
    systemicTherapyId: string;
    eventId: string;
}

export interface GetSystemicTherapyMedicationByIdRequestParams {
    systemicTherapyId: string;
    medicationId: string;
}

export interface GetSystemicTherapyMedicationHistoryEventByIdRequestParams {
    systemicTherapyId: string;
    medicationId: string;
    eventId: string;
}

export interface GetSystemicTherapyMedicationsRequestParams {
    systemicTherapyId: string;
}

export interface RevertSystemicTherapyMedicationToHistoryEventRequestParams {
    systemicTherapyId: string;
    medicationId: string;
    eventId: string;
}

export interface RevertSystemicTherapyToHistoryEventRequestParams {
    systemicTherapyId: string;
    eventId: string;
}

export interface UpdateSystemicTherapyRequestParams {
    systemicTherapyId: string;
    systemicTherapyCreate: SystemicTherapyCreate;
}

export interface UpdateSystemicTherapyMedicationRequestParams {
    systemicTherapyId: string;
    medicationId: string;
    systemicTherapyMedicationCreate: SystemicTherapyMedicationCreate;
}


export interface SystemicTherapiesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Systemic Therapy
     * 
* @param requestParameters
     */
    createSystemicTherapy(requestParameters: CreateSystemicTherapyRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Create Systemic Therapy Medication
     * 
* @param requestParameters
     */
    createSystemicTherapyMedication(requestParameters: CreateSystemicTherapyMedicationRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Systemic Therapy
     * 
* @param requestParameters
     */
    deleteSystemicTherapyById(requestParameters: DeleteSystemicTherapyByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete Systemic Therapy Medication
     * 
* @param requestParameters
     */
    deleteSystemicTherapyMedication(requestParameters: DeleteSystemicTherapyMedicationRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Systemic Therapy History Events
     * 
* @param requestParameters
     */
    getAllSystemicTherapyHistoryEvents(requestParameters: GetAllSystemicTherapyHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEventWithSchema>;

    /**
     * Get All Systemic Therapy Medication History Events
     * 
* @param requestParameters
     */
    getAllSystemicTherapyMedicationHistoryEvents(requestParameters: GetAllSystemicTherapyMedicationHistoryEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedHistoryEventWithSchema>;

    /**
     * Get All Systemic Therapies Matching The Query
     * 
* @param requestParameters
     */
    getSystemicTherapies(requestParameters: GetSystemicTherapiesRequestParams, extraHttpRequestParams?: any): Observable<PaginatedSystemicTherapy>;

    /**
     * Get Systemic Therapy By Id
     * 
* @param requestParameters
     */
    getSystemicTherapyById(requestParameters: GetSystemicTherapyByIdRequestParams, extraHttpRequestParams?: any): Observable<SystemicTherapy>;

    /**
     * Get Systemic Therapy History Event By Id
     * 
* @param requestParameters
     */
    getSystemicTherapyHistoryEventById(requestParameters: GetSystemicTherapyHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEventWithSchema>;

    /**
     * Get Systemic Therapy Medication By Id
     * 
* @param requestParameters
     */
    getSystemicTherapyMedicationById(requestParameters: GetSystemicTherapyMedicationByIdRequestParams, extraHttpRequestParams?: any): Observable<SystemicTherapyMedication>;

    /**
     * Get Systemic Therapy Medication History Event By Id
     * 
* @param requestParameters
     */
    getSystemicTherapyMedicationHistoryEventById(requestParameters: GetSystemicTherapyMedicationHistoryEventByIdRequestParams, extraHttpRequestParams?: any): Observable<HistoryEventWithSchema>;

    /**
     * Get Systemic Therapy Medications Matching The Query
     * 
* @param requestParameters
     */
    getSystemicTherapyMedications(requestParameters: GetSystemicTherapyMedicationsRequestParams, extraHttpRequestParams?: any): Observable<Array<SystemicTherapyMedication>>;

    /**
     * Revert Systemic Therapy Medication To History Event
     * 
* @param requestParameters
     */
    revertSystemicTherapyMedicationToHistoryEvent(requestParameters: RevertSystemicTherapyMedicationToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Revert Systemic Therapy To History Event
     * 
* @param requestParameters
     */
    revertSystemicTherapyToHistoryEvent(requestParameters: RevertSystemicTherapyToHistoryEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Systemic Therapy
     * 
* @param requestParameters
     */
    updateSystemicTherapy(requestParameters: UpdateSystemicTherapyRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Update Systemic Therapy Medication
     * 
* @param requestParameters
     */
    updateSystemicTherapyMedication(requestParameters: UpdateSystemicTherapyMedicationRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
