{
  "openapi": "3.1.0",
  "info": {
    "title": "POP API",
    "version": "1.0.0",
    "description": "Precision Oncology Platform API for exchange of research cancer data"
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "operationId": "auth_login_bf536594",
        "summary": "Login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTokenSchema"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainSlidingInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/auth/sliding": {
      "post": {
        "operationId": "token_obtain_sliding",
        "summary": "Obtain Token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainSlidingOutputSchema"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainSlidingInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/auth/sliding/refresh": {
      "post": {
        "operationId": "token_refresh_sliding",
        "summary": "Refresh Token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefreshSlidingOutputSchema"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshSlidingInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/cancer-patients/": {
      "post": {
        "operationId": "createCancerPatient",
        "summary": "Create Cancer Patient",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdSchema"
                }
              }
            }
          }
        },
        "tags": [
          "Cancer Patients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancerPatientCreateSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "get": {
        "operationId": "getCancerPatients",
        "summary": "Get All Cancer Patient Matching The Query",
        "parameters": [
          {
            "in": "query",
            "name": "pseudoidentifier",
            "schema": {
              "title": "Pseudoidentifier",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "deceased",
            "schema": {
              "title": "Deceased",
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "gender",
            "schema": {
              "items": {
                "enum": [
                  "male",
                  "female",
                  "unknown"
                ],
                "title": "GenderEnum",
                "type": "string"
              },
              "title": "Gender",
              "type": "array"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "born",
            "schema": {
              "format": "date",
              "title": "Born",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NinjaPaginationResponseSchema_CancerPatientSchema_"
                }
              }
            }
          }
        },
        "tags": [
          "Cancer Patients"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/cancer-patients/{patientId}": {
      "delete": {
        "operationId": "deleteCancerPatientById",
        "summary": "Delete Cancer Patient",
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "schema": {
              "title": "Patientid",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Cancer Patients"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "get": {
        "operationId": "getCancerPatientById",
        "summary": "Get Cancer Patient By Id",
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "schema": {
              "title": "Patientid",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancerPatientSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Cancer Patients"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "put": {
        "operationId": "updateCancerPatientById",
        "summary": "Update Cancer Patient",
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "schema": {
              "title": "Patientid",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Cancer Patients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancerPatientCreateSchema"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/terminologies/{terminology}/concepts": {
      "get": {
        "operationId": "getTerminologyConcepts",
        "summary": "Get Terminology Concepts",
        "parameters": [
          {
            "in": "path",
            "name": "terminology",
            "schema": {
              "title": "Terminology",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CodedConceptSchema"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Terminology"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID"
          },
          "username": {
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "maxLength": 150,
            "title": "Username",
            "type": "string"
          },
          "email": {
            "anyOf": [
              {
                "maxLength": 254,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Address"
          }
        },
        "required": [
          "username"
        ],
        "title": "UserSchema",
        "type": "object"
      },
      "UserTokenSchema": {
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserSchema"
          },
          "token_exp_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Exp Date"
          }
        },
        "required": [
          "token",
          "user",
          "token_exp_date"
        ],
        "title": "UserTokenSchema",
        "type": "object"
      },
      "TokenObtainSlidingInputSchema": {
        "properties": {
          "password": {
            "maxLength": 128,
            "title": "Password",
            "type": "string"
          },
          "username": {
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "maxLength": 150,
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ],
        "title": "TokenObtainSlidingInputSchema",
        "type": "object"
      },
      "TokenObtainSlidingOutputSchema": {
        "properties": {
          "username": {
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "maxLength": 150,
            "title": "Username",
            "type": "string"
          },
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "username",
          "token"
        ],
        "title": "TokenObtainSlidingOutputSchema",
        "type": "object"
      },
      "TokenRefreshSlidingOutputSchema": {
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token"
        ],
        "title": "TokenRefreshSlidingOutputSchema",
        "type": "object"
      },
      "TokenRefreshSlidingInputSchema": {
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token"
        ],
        "title": "TokenRefreshSlidingInputSchema",
        "type": "object"
      },
      "ResourceIdSchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "ResourceIdSchema",
        "type": "object"
      },
      "CancerPatientCreateSchema": {
        "properties": {
          "race": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CodedConceptSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Race of the patient",
            "examples": [],
            "title": "Race"
          },
          "birthsex": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CodedConceptSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Sex assigned at birth",
            "examples": [],
            "title": "Birth sex"
          },
          "genderIdentity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CodedConceptSchema"
              },
              {
                "type": "null"
              }
            ],
            "examples": [],
            "title": "Gender identity"
          },
          "gender": {
            "$ref": "#/components/schemas/CodedConceptSchema",
            "description": "Gender for administrative purposes",
            "examples": [],
            "title": "Gender"
          },
          "birthdate": {
            "description": "Date of birth",
            "examples": [],
            "format": "date",
            "title": "Date of birth",
            "type": "string"
          },
          "isDeceased": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Indicates if the individual is deceased or not",
            "examples": [],
            "title": "Is deceased"
          }
        },
        "required": [
          "gender",
          "birthdate"
        ],
        "title": "CancerPatientCreateSchema",
        "type": "object"
      },
      "CodedConceptSchema": {
        "properties": {
          "code": {
            "title": "Code",
            "type": "string"
          },
          "system": {
            "title": "System",
            "type": "string"
          },
          "display": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "synonyms": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Synonyms"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "required": [
          "code",
          "system"
        ],
        "title": "CodedConceptSchema",
        "type": "object"
      },
      "Filters": {
        "properties": {
          "pseudoidentifier": {
            "title": "Pseudoidentifier",
            "type": "string"
          },
          "deceased": {
            "title": "Deceased",
            "type": "boolean"
          },
          "gender": {
            "items": {
              "enum": [
                "male",
                "female",
                "unknown"
              ],
              "title": "GenderEnum",
              "type": "string"
            },
            "title": "Gender",
            "type": "array"
          },
          "born": {
            "format": "date",
            "title": "Born",
            "type": "string"
          }
        },
        "title": "Filters",
        "type": "object"
      },
      "GenderEnum": {
        "enum": [
          "male",
          "female",
          "unknown"
        ],
        "title": "GenderEnum",
        "type": "string"
      },
      "Input": {
        "properties": {
          "limit": {
            "default": 100,
            "minimum": 1,
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "minimum": 0,
            "title": "Offset",
            "type": "integer"
          }
        },
        "title": "Input",
        "type": "object"
      },
      "CancerPatientSchema": {
        "properties": {
          "id": {
            "examples": [],
            "maxLength": 64,
            "title": "Id",
            "type": "string"
          },
          "created_at": {
            "examples": [],
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "examples": [],
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "pseudoidentifier": {
            "description": "Pseudoidentifier of the patient",
            "examples": [],
            "maxLength": 40,
            "title": "Pseudoidentifier",
            "type": "string"
          },
          "race": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CodedConceptSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Race of the patient",
            "examples": [],
            "title": "Race"
          },
          "birthsex": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CodedConceptSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Sex assigned at birth",
            "examples": [],
            "title": "Birth sex"
          },
          "gender_identity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CodedConceptSchema"
              },
              {
                "type": "null"
              }
            ],
            "examples": [],
            "title": "Gender identity"
          },
          "gender": {
            "$ref": "#/components/schemas/CodedConceptSchema",
            "description": "Gender for administrative purposes",
            "examples": [],
            "title": "Gender"
          },
          "birthdate": {
            "description": "Date of birth",
            "examples": [],
            "format": "date",
            "title": "Date of birth",
            "type": "string"
          },
          "is_deceased": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Indicates if the individual is deceased or not",
            "examples": [],
            "title": "Is deceased"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "pseudoidentifier",
          "gender",
          "birthdate"
        ],
        "title": "CancerPatientSchema",
        "type": "object"
      },
      "NinjaPaginationResponseSchema_CancerPatientSchema_": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/CancerPatientSchema"
            },
            "title": "Items",
            "type": "array"
          }
        },
        "required": [
          "count",
          "items"
        ],
        "title": "NinjaPaginationResponseSchema[CancerPatientSchema]",
        "type": "object"
      }
    },
    "securitySchemes": {
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": []
}