{
  "openapi": "3.1.0",
  "info": {
  "title": "POP API",
  "version": "1.0.0",
  "description": "Precision Oncology Platform API for exchange of research cancer data"
  },
  "paths": {
  "/api/auth/token/pair": {
  "post": {
  "operationId": "getSlidingToken",
  "summary": "Obtain Token Pair",
  "parameters": [],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TokenPairSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Auth"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserCredentialsSchema"
  }
  }
  },
  "required": true
  }
  }
  },
  "/api/auth/token/refresh": {
  "post": {
  "operationId": "refereshSlidingToken",
  "summary": "Refresh Token Pair",
  "parameters": [],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RefreshedTokenPairSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Auth"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TokenRefreshSchema"
  }
  }
  },
  "required": true
  }
  }
  },
  "/api/auth/users": {
  "get": {
  "operationId": "getUsers",
  "summary": "Get All Users Matching The Query",
  "parameters": [],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/UserSchema"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  }
  },
  "tags": [
  "Auth"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/auth/users/{userId}": {
  "get": {
  "operationId": "getUserById",
  "summary": "Get User By Id",
  "parameters": [
  {
  "in": "path",
  "name": "userId",
  "schema": {
  "title": "Userid",
  "type": "integer"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Auth"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/patient-cases/": {
  "post": {
  "operationId": "createPatientCase",
  "summary": "Create Patient Case",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PatientCaseCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getPatientCases",
  "summary": "Get All Patient Cases Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "age_lte",
  "schema": {
  "title": "Age Lte",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "age_gte",
  "schema": {
  "title": "Age Gte",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "pseudoidentifier",
  "schema": {
  "title": "Pseudoidentifier",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "manager",
  "schema": {
  "title": "Manager",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "deceased",
  "schema": {
  "title": "Deceased",
  "type": "boolean"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "gender",
  "schema": {
  "items": {
  "enum": [
  "male",
  "female",
  "unknown"
  ],
  "title": "GenderEnum",
  "type": "string"
  },
  "title": "Gender",
  "type": "array"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "born",
  "schema": {
  "format": "date",
  "title": "Born",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_PatientCase_"
  }
  }
  }
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/patient-cases/bundle": {
  "post": {
  "operationId": "createPatientCaseBundleById",
  "summary": "Create Patient Case Bundle",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PatientCaseBundleCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/patient-cases/{caseId}/data-completion/{category}": {
  "post": {
  "operationId": "createPatientCaseDataCompletion",
  "summary": "Create Patient Case Data Completion",
  "parameters": [
  {
  "in": "path",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "category",
  "schema": {
  "enum": [
  "comorbidities-assessments",
  "family-histories",
  "genomic-signatures",
  "genomic-variants",
  "lifestyles",
  "comorbidities",
  "neoplastic-entities",
  "performance-status",
  "radiotherapies",
  "risk-assessments",
  "stagings",
  "surgeries",
  "systemic-therapies",
  "tumor-markers",
  "vitals",
  "tumor-board-reviews",
  "adverse-events",
  "therapy-responses"
  ],
  "title": "PatientCaseDataCategories",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "delete": {
  "operationId": "deletePatientCaseDataCompletion",
  "summary": "Delete Patient Case Data Completion",
  "parameters": [
  {
  "in": "path",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "category",
  "schema": {
  "enum": [
  "comorbidities-assessments",
  "family-histories",
  "genomic-signatures",
  "genomic-variants",
  "lifestyles",
  "comorbidities",
  "neoplastic-entities",
  "performance-status",
  "radiotherapies",
  "risk-assessments",
  "stagings",
  "surgeries",
  "systemic-therapies",
  "tumor-markers",
  "vitals",
  "tumor-board-reviews",
  "adverse-events",
  "therapy-responses"
  ],
  "title": "PatientCaseDataCategories",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getPatientCaseDataCompletionStatus",
  "summary": "Get Patient Case Data Completion Status",
  "parameters": [
  {
  "in": "path",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "category",
  "schema": {
  "enum": [
  "comorbidities-assessments",
  "family-histories",
  "genomic-signatures",
  "genomic-variants",
  "lifestyles",
  "comorbidities",
  "neoplastic-entities",
  "performance-status",
  "radiotherapies",
  "risk-assessments",
  "stagings",
  "surgeries",
  "systemic-therapies",
  "tumor-markers",
  "vitals",
  "tumor-board-reviews",
  "adverse-events",
  "therapy-responses"
  ],
  "title": "PatientCaseDataCategories",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PatientCaseDataCompletionStatusSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/patient-cases/{caseId}": {
  "delete": {
  "operationId": "deletePatientCaseById",
  "summary": "Delete Patient Case",
  "parameters": [
  {
  "in": "path",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getPatientCaseById",
  "summary": "Get Patient Case By Id",
  "parameters": [
  {
  "in": "path",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PatientCase"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updatePatientCaseById",
  "summary": "Update Patient Case",
  "parameters": [
  {
  "in": "path",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PatientCaseCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/patient-cases/bundle/{caseId}": {
  "get": {
  "operationId": "getPatientCaseBundleById",
  "summary": "Get Patient Case Bundle By Id",
  "parameters": [
  {
  "in": "path",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PatientCaseBundle"
  }
  }
  }
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/patient-cases/pseudo/{pseudoidentifier}": {
  "get": {
  "operationId": "getPatientCaseByPseudoidentifier",
  "summary": "Get Patient Case By Pseudoidentifier",
  "parameters": [
  {
  "in": "path",
  "name": "pseudoidentifier",
  "schema": {
  "title": "Pseudoidentifier",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PatientCase"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Patient Cases"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/neoplastic-entities/": {
  "post": {
  "operationId": "createNeoplasticEntity",
  "summary": "Create Neoplastic Entity",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Neoplastic Entities"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/NeoplasticEntityCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getNeoplasticEntities",
  "summary": "Get All Neoplastic Entities Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "type",
  "schema": {
  "items": {
  "enum": [
  "primary",
  "metastatic",
  "local_recurrence",
  "regional_recurrence"
  ],
  "title": "NeoplasticEntityRelationshipChoices",
  "type": "string"
  },
  "title": "Type",
  "type": "array"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_NeoplasticEntity_"
  }
  }
  }
  }
  },
  "tags": [
  "Neoplastic Entities"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/neoplastic-entities/{entityId}": {
  "delete": {
  "operationId": "deleteNeoplasticEntityById",
  "summary": "Delete Neoplastic Entity",
  "parameters": [
  {
  "in": "path",
  "name": "entityId",
  "schema": {
  "title": "Entityid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Neoplastic Entities"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getNeoplasticEntityById",
  "summary": "Get Neoplastic Entity By Id",
  "parameters": [
  {
  "in": "path",
  "name": "entityId",
  "schema": {
  "title": "Entityid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/NeoplasticEntity"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Neoplastic Entities"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateNeoplasticEntityById",
  "summary": "Update Neoplastic Entity",
  "parameters": [
  {
  "in": "path",
  "name": "entityId",
  "schema": {
  "title": "Entityid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Neoplastic Entities"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/NeoplasticEntityCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/stagings/": {
  "post": {
  "operationId": "createStaging",
  "summary": "Create Staging",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Stagings"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TNMStagingCreate"
  },
  {
  "$ref": "#/components/schemas/FIGOStagingCreate"
  },
  {
  "$ref": "#/components/schemas/BinetStagingCreate"
  },
  {
  "$ref": "#/components/schemas/RaiStagingCreate"
  },
  {
  "$ref": "#/components/schemas/BreslowDepthCreate"
  },
  {
  "$ref": "#/components/schemas/ClarkStagingCreate"
  },
  {
  "$ref": "#/components/schemas/ISSStagingCreate"
  },
  {
  "$ref": "#/components/schemas/RISSStagingCreate"
  },
  {
  "$ref": "#/components/schemas/GleasonGradeCreate"
  },
  {
  "$ref": "#/components/schemas/INSSStageCreate"
  },
  {
  "$ref": "#/components/schemas/INRGSSStageCreate"
  },
  {
  "$ref": "#/components/schemas/WilmsStageCreate"
  },
  {
  "$ref": "#/components/schemas/RhabdomyosarcomaClinicalGroupCreate"
  },
  {
  "$ref": "#/components/schemas/LymphomaStagingCreate"
  }
  ],
  "title": "Payload"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getStagings",
  "summary": "Get All Stagings Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "stagingDomain",
  "schema": {
  "items": {
  "enum": [
  "tnm",
  "figo",
  "binet",
  "rai",
  "breslow",
  "clark",
  "iss",
  "riss",
  "inss",
  "inrgss",
  "gleason",
  "rhabdomyosarcoma",
  "wilms",
  "lymphoma"
  ],
  "title": "StagingDomain",
  "type": "string"
  },
  "title": "Stagingdomain",
  "type": "array"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_AnyStaging_"
  }
  }
  }
  }
  },
  "tags": [
  "Stagings"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/stagings/{stagingId}": {
  "delete": {
  "operationId": "deleteStagingById",
  "summary": "Delete Staging",
  "parameters": [
  {
  "in": "path",
  "name": "stagingId",
  "schema": {
  "title": "Stagingid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Stagings"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getStagingById",
  "summary": "Get Staging By Id",
  "parameters": [
  {
  "in": "path",
  "name": "stagingId",
  "schema": {
  "title": "Stagingid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AnyStaging"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Stagings"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateStagingById",
  "summary": "Update Staging",
  "parameters": [
  {
  "in": "path",
  "name": "stagingId",
  "schema": {
  "title": "Stagingid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Stagings"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TNMStagingCreate"
  },
  {
  "$ref": "#/components/schemas/FIGOStagingCreate"
  },
  {
  "$ref": "#/components/schemas/BinetStagingCreate"
  },
  {
  "$ref": "#/components/schemas/RaiStagingCreate"
  },
  {
  "$ref": "#/components/schemas/BreslowDepthCreate"
  },
  {
  "$ref": "#/components/schemas/ClarkStagingCreate"
  },
  {
  "$ref": "#/components/schemas/ISSStagingCreate"
  },
  {
  "$ref": "#/components/schemas/RISSStagingCreate"
  },
  {
  "$ref": "#/components/schemas/GleasonGradeCreate"
  },
  {
  "$ref": "#/components/schemas/INSSStageCreate"
  },
  {
  "$ref": "#/components/schemas/INRGSSStageCreate"
  },
  {
  "$ref": "#/components/schemas/WilmsStageCreate"
  },
  {
  "$ref": "#/components/schemas/RhabdomyosarcomaClinicalGroupCreate"
  },
  {
  "$ref": "#/components/schemas/LymphomaStagingCreate"
  }
  ],
  "title": "Payload"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/risk-assessments/": {
  "post": {
  "operationId": "createRiskAssessment",
  "summary": "Create Risk Assessment",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Risk Assessments"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RiskAssessmentCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getRiskAssessments",
  "summary": "Get All Risk Assessments Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_RiskAssessment_"
  }
  }
  }
  }
  },
  "tags": [
  "Risk Assessments"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/risk-assessments/{riskAssessmentId}": {
  "delete": {
  "operationId": "deleteRiskAssessmentById",
  "summary": "Delete Risk Assessment",
  "parameters": [
  {
  "in": "path",
  "name": "riskAssessmentId",
  "schema": {
  "title": "Riskassessmentid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Risk Assessments"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getRiskAssessmentById",
  "summary": "Get Risk Assessment By Id",
  "parameters": [
  {
  "in": "path",
  "name": "riskAssessmentId",
  "schema": {
  "title": "Riskassessmentid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RiskAssessment"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Risk Assessments"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateRiskAssessmentById",
  "summary": "Update Risk Assessment",
  "parameters": [
  {
  "in": "path",
  "name": "riskAssessmentId",
  "schema": {
  "title": "Riskassessmentid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Risk Assessments"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RiskAssessmentCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/tumor-markers/": {
  "post": {
  "operationId": "createTumorMarker",
  "summary": "Create Tumor Marker",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Tumor Markers"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TumorMarkerCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getTumorMarkers",
  "summary": "Get All Tumor Markers Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_TumorMarker_"
  }
  }
  }
  }
  },
  "tags": [
  "Tumor Markers"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/tumor-markers/{tumorMarkerId}": {
  "delete": {
  "operationId": "deleteTumorMarkerById",
  "summary": "Delete Tumor Marker",
  "parameters": [
  {
  "in": "path",
  "name": "tumorMarkerId",
  "schema": {
  "title": "Tumormarkerid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Markers"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getTumorMarkerById",
  "summary": "Get Tumor Marker By Id",
  "parameters": [
  {
  "in": "path",
  "name": "tumorMarkerId",
  "schema": {
  "title": "Tumormarkerid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TumorMarker"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Markers"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateTumorMarkerById",
  "summary": "Update Neoplastic Entity",
  "parameters": [
  {
  "in": "path",
  "name": "tumorMarkerId",
  "schema": {
  "title": "Tumormarkerid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Markers"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TumorMarkerCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/tumor-markers/analytes/{analyteCode}/details": {
  "get": {
  "operationId": "getTumorMarkerAnalyteDetailsByCode",
  "summary": "Get Tumor Marker Analyte Details By Code",
  "parameters": [
  {
  "in": "path",
  "name": "analyteCode",
  "schema": {
  "title": "Analytecode",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AnalyteDetails"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Markers"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/systemic-therapies/": {
  "post": {
  "operationId": "createSystemicTherapy",
  "summary": "Create Systemic Therapy",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SystemicTherapyCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getSystemicTherapies",
  "summary": "Get All Systemic Therapies Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_SystemicTherapySchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/systemic-therapies/{systemicTherapyId}/medications/": {
  "post": {
  "operationId": "createSystemicTherapyMedication",
  "summary": "Create Systemic Therapy Medication",
  "parameters": [
  {
  "in": "path",
  "name": "systemicTherapyId",
  "schema": {
  "title": "Systemictherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SystemicTherapyMedicationCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getSystemicTherapyMedications",
  "summary": "Get Systemic Therapy Medications Matching The Query",
  "parameters": [
  {
  "in": "path",
  "name": "systemicTherapyId",
  "schema": {
  "title": "Systemictherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/SystemicTherapyMedicationSchema"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/systemic-therapies/{systemicTherapyId}": {
  "delete": {
  "operationId": "deleteSystemicTherapyById",
  "summary": "Delete Systemic Therapy",
  "parameters": [
  {
  "in": "path",
  "name": "systemicTherapyId",
  "schema": {
  "title": "Systemictherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getSystemicTherapyById",
  "summary": "Get Systemic Therapy By Id",
  "parameters": [
  {
  "in": "path",
  "name": "systemicTherapyId",
  "schema": {
  "title": "Systemictherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SystemicTherapySchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateSystemicTherapy",
  "summary": "Update Systemic Therapy",
  "parameters": [
  {
  "in": "path",
  "name": "systemicTherapyId",
  "schema": {
  "title": "Systemictherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SystemicTherapyCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/systemic-therapies/{systemicTherapyId}/medications/{medicationId}": {
  "delete": {
  "operationId": "deleteSystemicTherapyMedication",
  "summary": "Delete Systemic Therapy Medication",
  "parameters": [
  {
  "in": "path",
  "name": "systemicTherapyId",
  "schema": {
  "title": "Systemictherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "medicationId",
  "schema": {
  "title": "Medicationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getSystemicTherapyMedicationById",
  "summary": "Get Systemic Therapy Medication By Id",
  "parameters": [
  {
  "in": "path",
  "name": "systemicTherapyId",
  "schema": {
  "title": "Systemictherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "medicationId",
  "schema": {
  "title": "Medicationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SystemicTherapyMedicationSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateSystemicTherapyMedication",
  "summary": "Update Systemic Therapy Medication",
  "parameters": [
  {
  "in": "path",
  "name": "systemicTherapyId",
  "schema": {
  "title": "Systemictherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "medicationId",
  "schema": {
  "title": "Medicationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Systemic Therapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SystemicTherapyMedicationCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/surgeries/": {
  "post": {
  "operationId": "createSurgery",
  "summary": "Create Surgery",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Surgeries"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SurgeryCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getSurgeries",
  "summary": "Get All Surgeries Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_Surgery_"
  }
  }
  }
  }
  },
  "tags": [
  "Surgeries"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/surgeries/{surgeryId}": {
  "delete": {
  "operationId": "deleteSurgeryById",
  "summary": "Delete Surgery",
  "parameters": [
  {
  "in": "path",
  "name": "surgeryId",
  "schema": {
  "title": "Surgeryid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Surgeries"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getSurgeryById",
  "summary": "Get Surgery By Id",
  "parameters": [
  {
  "in": "path",
  "name": "surgeryId",
  "schema": {
  "title": "Surgeryid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Surgery"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Surgeries"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateSurgeryById",
  "summary": "Update Surgery",
  "parameters": [
  {
  "in": "path",
  "name": "surgeryId",
  "schema": {
  "title": "Surgeryid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Surgeries"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SurgeryCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/radiotherapies/": {
  "post": {
  "operationId": "createRadiotherapy",
  "summary": "Create Radiotherapy",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapyCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getRadiotherapies",
  "summary": "Get All Radiotherapies Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_RadiotherapySchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/radiotherapies/{radiotherapyId}/dosages/": {
  "post": {
  "operationId": "createRadiotherapyDosage",
  "summary": "Create Radiotherapy Dosage",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapyDosageCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getRadiotherapyDosages",
  "summary": "Get Radiotherapy Dosages Matching The Query",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/RadiotherapyDosageSchema"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/radiotherapies/{radiotherapyId}/settings/": {
  "post": {
  "operationId": "createRadiotherapySetting",
  "summary": "Create Radiotherapy Setting",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapySettingCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getRadiotherapySettings",
  "summary": "Get Radiotherapy Settings Matching The Query",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/RadiotherapySettingSchema"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/radiotherapies/{radiotherapyId}": {
  "delete": {
  "operationId": "deleteRadiotherapyById",
  "summary": "Delete Radiotherapy",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getRadiotherapyById",
  "summary": "Get Radiotherapy By Id",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapySchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateRadiotherapy",
  "summary": "Update Radiotherapy",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapyCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/radiotherapies/{radiotherapyId}/dosages/{dosageId}": {
  "delete": {
  "operationId": "deleteRadiotherapyDosage",
  "summary": "Delete Radiotherapy Dosage",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "dosageId",
  "schema": {
  "title": "Dosageid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getRadiotherapyDosageById",
  "summary": "Get Radiotherapy Dosage By Id",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "dosageId",
  "schema": {
  "title": "Dosageid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapyDosageSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateRadiotherapyDosage",
  "summary": "Update Radiotherapy Dosage",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "dosageId",
  "schema": {
  "title": "Dosageid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapyDosageCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/radiotherapies/{radiotherapyId}/settings/{settingId}": {
  "delete": {
  "operationId": "deleteRadiotherapySetting",
  "summary": "Delete Radiotherapy Setting",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "settingId",
  "schema": {
  "title": "Settingid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getRadiotherapySettingById",
  "summary": "Get Radiotherapy Setting By Id",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "settingId",
  "schema": {
  "title": "Settingid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapySettingSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateRadiotherapySetting",
  "summary": "Update Radiotherapy Setting",
  "parameters": [
  {
  "in": "path",
  "name": "radiotherapyId",
  "schema": {
  "title": "Radiotherapyid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "settingId",
  "schema": {
  "title": "Settingid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Radiotherapies"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RadiotherapySettingCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/adverse-events/": {
  "post": {
  "operationId": "createAdverseEvent",
  "summary": "Create Adverse Event",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getAdverseEvents",
  "summary": "Get All Adverse Events Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_AdverseEventSchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/adverse-events/{adverseEventId}/mitigations/": {
  "post": {
  "operationId": "createAdverseEventMitigation",
  "summary": "Create Adverse Event Mitigation",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventMitigationCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getAdverseEventMitigations",
  "summary": "Get Adverse Event Mitigations Matching The Query",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/AdverseEventMitigationSchema"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/adverse-events/{adverseEventId}/suspected-causes/": {
  "post": {
  "operationId": "createAdverseEventSuspectedCause",
  "summary": "Create Adverse Event Suspected Cause",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventSuspectedCauseCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getAdverseEventSuspectedCauses",
  "summary": "Get Adverse Event Suspected Causes Matching The Query",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/AdverseEventSuspectedCauseSchema"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/adverse-events/{adverseEventId}": {
  "delete": {
  "operationId": "deleteAdverseEventById",
  "summary": "Delete Adverse Event",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getAdverseEventById",
  "summary": "Get Adverse Event By Id",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateAdverseEvent",
  "summary": "Update Adverse Event",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/adverse-events/{adverseEventId}/mitigations/{mitigationId}": {
  "delete": {
  "operationId": "deleteAdverseEventMitigation",
  "summary": "Delete Adverse Event Mitigation",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "mitigationId",
  "schema": {
  "title": "Mitigationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getAdverseEventMitigationById",
  "summary": "Get Adverse Event Mitigation By Id",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "mitigationId",
  "schema": {
  "title": "Mitigationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventMitigationSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateAdverseEventMitigation",
  "summary": "Update Adverse Event Mitigation",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "mitigationId",
  "schema": {
  "title": "Mitigationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventMitigationCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/adverse-events/{adverseEventId}/suspected-causes/{causeId}": {
  "delete": {
  "operationId": "deleteAdverseEventSuspectedCause",
  "summary": "Delete Adverse Event Suspected Cause",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "causeId",
  "schema": {
  "title": "Causeid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getAdverseEventSuspectedCauseById",
  "summary": "Get Adverse Event Suspected Cause By Id",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "causeId",
  "schema": {
  "title": "Causeid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventSuspectedCauseSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateAdverseEventSuspectedCause",
  "summary": "Update Adverse Event Suspected Cause",
  "parameters": [
  {
  "in": "path",
  "name": "adverseEventId",
  "schema": {
  "title": "Adverseeventid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "causeId",
  "schema": {
  "title": "Causeid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Adverse Events"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AdverseEventSuspectedCauseCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/treatment-responses/": {
  "post": {
  "operationId": "createTreatmentResponse",
  "summary": "Create Treatment Response",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Treatment Responses"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TreatmentResponseCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getTreatmentResponses",
  "summary": "Get All Treatment Responses Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_TreatmentResponseSchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Treatment Responses"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/treatment-responses/{treatmentRresponseId}": {
  "delete": {
  "operationId": "deleteTreatmentResponse",
  "summary": "Delete Treatment Response",
  "parameters": [
  {
  "in": "path",
  "name": "treatmentRresponseId",
  "schema": {
  "title": "Treatmentrresponseid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Treatment Responses"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getTreatmentResponseById",
  "summary": "Get Treatment Response By Id",
  "parameters": [
  {
  "in": "path",
  "name": "treatmentRresponseId",
  "schema": {
  "title": "Treatmentrresponseid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TreatmentResponseSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Treatment Responses"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateTreatmentResponse",
  "summary": "Update Treatment Response",
  "parameters": [
  {
  "in": "path",
  "name": "treatmentRresponseId",
  "schema": {
  "title": "Treatmentrresponseid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Treatment Responses"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TreatmentResponseCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/tumor-boards/": {
  "post": {
  "operationId": "createTumorBoard",
  "summary": "Create Tumor Board",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/UnspecifiedTumorBoardCreateSchema"
  },
  {
  "$ref": "#/components/schemas/MolecularTumorBoardCreateSchema"
  }
  ],
  "title": "Payload"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getTumorBoards",
  "summary": "Get All Tumor Boards Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "stagingDomain",
  "schema": {
  "items": {
  "enum": [
  "unspecified",
  "molecular"
  ],
  "title": "TumorBoardSpecialties",
  "type": "string"
  },
  "title": "Stagingdomain",
  "type": "array"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_AnyTumorBoard_"
  }
  }
  }
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/tumor-boards/{tumorBoardId}": {
  "delete": {
  "operationId": "deleteTumorBoardById",
  "summary": "Delete Tumor Board",
  "parameters": [
  {
  "in": "path",
  "name": "tumorBoardId",
  "schema": {
  "title": "Tumorboardid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getTumorBoardById",
  "summary": "Get Tumor Board By Id",
  "parameters": [
  {
  "in": "path",
  "name": "tumorBoardId",
  "schema": {
  "title": "Tumorboardid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AnyTumorBoard"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateTumorBoardById",
  "summary": "Update Tumor Board",
  "parameters": [
  {
  "in": "path",
  "name": "tumorBoardId",
  "schema": {
  "title": "Tumorboardid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/UnspecifiedTumorBoardCreateSchema"
  },
  {
  "$ref": "#/components/schemas/MolecularTumorBoardCreateSchema"
  }
  ],
  "title": "Payload"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/molecular-tumor-boards/{tumorBoardId}/therapeutic-recommendations/": {
  "post": {
  "operationId": "createMolecularTherapeuticRecommendation",
  "summary": "Create Molecular Tumor Board Therapeutic Recommendation",
  "parameters": [
  {
  "in": "path",
  "name": "tumorBoardId",
  "schema": {
  "title": "Tumorboardid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MolecularTherapeuticRecommendationCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getMolecularTherapeuticRecommendations",
  "summary": "Get Molecular Tumor Board Therapeutic Recommendations Matching The Query",
  "parameters": [
  {
  "in": "path",
  "name": "tumorBoardId",
  "schema": {
  "title": "Tumorboardid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/MolecularTherapeuticRecommendationSchema"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/molecular-tumor-boards/{tumorBoardId}/therapeutic-recommendations/{recommendationId}": {
  "delete": {
  "operationId": "deleteMolecularTherapeuticRecommendation",
  "summary": "Delete Molecular Tumor Board Therapeutic Recommendation",
  "parameters": [
  {
  "in": "path",
  "name": "tumorBoardId",
  "schema": {
  "title": "Tumorboardid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "recommendationId",
  "schema": {
  "title": "Recommendationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getMOlecularTherapeuticRecommendationById",
  "summary": "Get Molecular Tumor Board Therapeutic Recommendation By Id",
  "parameters": [
  {
  "in": "path",
  "name": "tumorBoardId",
  "schema": {
  "title": "Tumorboardid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "recommendationId",
  "schema": {
  "title": "Recommendationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MolecularTherapeuticRecommendationSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateMolecularTherapeuticRecommendation",
  "summary": "Update Molecular Tumor Board Therapeutic Recommendation",
  "parameters": [
  {
  "in": "path",
  "name": "tumorBoardId",
  "schema": {
  "title": "Tumorboardid",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "path",
  "name": "recommendationId",
  "schema": {
  "title": "Recommendationid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Tumor Boards"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MolecularTherapeuticRecommendationCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/performance-status/": {
  "post": {
  "operationId": "createPerformanceStatus",
  "summary": "Create Performance Status",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Performance Status"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PerformanceStatusCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getPerformanceStatus",
  "summary": "Get All Performance Status Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_PerformanceStatus_"
  }
  }
  }
  }
  },
  "tags": [
  "Performance Status"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/performance-status/{performanceStatusId}": {
  "delete": {
  "operationId": "deletePerformanceStatus",
  "summary": "Delete Performance Status",
  "parameters": [
  {
  "in": "path",
  "name": "performanceStatusId",
  "schema": {
  "title": "Performancestatusid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Performance Status"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getPerformanceStatusById",
  "summary": "Get Performance Status By Id",
  "parameters": [
  {
  "in": "path",
  "name": "performanceStatusId",
  "schema": {
  "title": "Performancestatusid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PerformanceStatus"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Performance Status"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updatePerformanceStatusById",
  "summary": "Update Performance Status",
  "parameters": [
  {
  "in": "path",
  "name": "performanceStatusId",
  "schema": {
  "title": "Performancestatusid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Performance Status"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PerformanceStatusCreate"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/genomic-variants/": {
  "post": {
  "operationId": "createGenomicVariant",
  "summary": "Create Genomic Variant",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Genomic Variants"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/GenomicVariantCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getGenomicVariants",
  "summary": "Get All Genomic Variants Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_GenomicVariantSchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Genomic Variants"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/genomic-variants/{genomicVariantId}": {
  "delete": {
  "operationId": "deleteGenomicVariant",
  "summary": "Delete Genomic Variant",
  "parameters": [
  {
  "in": "path",
  "name": "genomicVariantId",
  "schema": {
  "title": "Genomicvariantid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Genomic Variants"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getGenomicVariantById",
  "summary": "Get Genomic Variant By Id",
  "parameters": [
  {
  "in": "path",
  "name": "genomicVariantId",
  "schema": {
  "title": "Genomicvariantid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/GenomicVariantSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Genomic Variants"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateGenomicVariant",
  "summary": "Update Genomic Variant",
  "parameters": [
  {
  "in": "path",
  "name": "genomicVariantId",
  "schema": {
  "title": "Genomicvariantid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Genomic Variants"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/GenomicVariantCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/genomic-signatures/": {
  "post": {
  "operationId": "createGenomicSignature",
  "summary": "Create Genomic Signature",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Genomic Signatures"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMutationalBurdenCreateSchema"
  },
  {
  "$ref": "#/components/schemas/MicrosatelliteInstabilityCreateSchema"
  },
  {
  "$ref": "#/components/schemas/LossOfHeterozygosityCreateSchema"
  },
  {
  "$ref": "#/components/schemas/HomologousRecombinationDeficiencyCreateSchema"
  },
  {
  "$ref": "#/components/schemas/TumorNeoantigenBurdenCreateSchema"
  },
  {
  "$ref": "#/components/schemas/AneuploidScoreCreateSchema"
  }
  ],
  "title": "Payload"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getGenomicSignatures",
  "summary": "Get All Genomic Signatures Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "stagingDomain",
  "schema": {
  "items": {
  "enum": [
  "tumor_mutational_burden",
  "loss_of_heterozygosity",
  "microsatellite_instability",
  "homologous_recombination_deficiency",
  "tumor_neoantigen_burden",
  "aneuploid_score"
  ],
  "title": "GenomicSignatureTypes",
  "type": "string"
  },
  "title": "Stagingdomain",
  "type": "array"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_AnyGenomicSignature_"
  }
  }
  }
  }
  },
  "tags": [
  "Genomic Signatures"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/genomic-signatures/{genomicSignatureId}": {
  "delete": {
  "operationId": "deleteGenomicSignatureById",
  "summary": "Delete Genomic Signature",
  "parameters": [
  {
  "in": "path",
  "name": "genomicSignatureId",
  "schema": {
  "title": "Genomicsignatureid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Genomic Signatures"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getGenomicSignatureById",
  "summary": "Get Genomic Signature By Id",
  "parameters": [
  {
  "in": "path",
  "name": "genomicSignatureId",
  "schema": {
  "title": "Genomicsignatureid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AnyGenomicSignature"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Genomic Signatures"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateGenomicSignatureById",
  "summary": "Update Genomic Signature",
  "parameters": [
  {
  "in": "path",
  "name": "genomicSignatureId",
  "schema": {
  "title": "Genomicsignatureid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Genomic Signatures"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMutationalBurdenCreateSchema"
  },
  {
  "$ref": "#/components/schemas/MicrosatelliteInstabilityCreateSchema"
  },
  {
  "$ref": "#/components/schemas/LossOfHeterozygosityCreateSchema"
  },
  {
  "$ref": "#/components/schemas/HomologousRecombinationDeficiencyCreateSchema"
  },
  {
  "$ref": "#/components/schemas/TumorNeoantigenBurdenCreateSchema"
  },
  {
  "$ref": "#/components/schemas/AneuploidScoreCreateSchema"
  }
  ],
  "title": "Payload"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/lifestyles/": {
  "post": {
  "operationId": "createLifestyle",
  "summary": "Create Lifestyle",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Lifestyles"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/LifestyleCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getLifestyles",
  "summary": "Get All Lifestyles Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_LifestyleSchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Lifestyles"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/lifestyles/{lifestyleId}": {
  "delete": {
  "operationId": "deleteLifestyleById",
  "summary": "Delete Lifestyle",
  "parameters": [
  {
  "in": "path",
  "name": "lifestyleId",
  "schema": {
  "title": "Lifestyleid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Lifestyles"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getLifestyleById",
  "summary": "Get Lifestyle By Id",
  "parameters": [
  {
  "in": "path",
  "name": "lifestyleId",
  "schema": {
  "title": "Lifestyleid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/LifestyleSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Lifestyles"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateLifestyleById",
  "summary": "Update Lifestyle",
  "parameters": [
  {
  "in": "path",
  "name": "lifestyleId",
  "schema": {
  "title": "Lifestyleid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Lifestyles"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/LifestyleCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/family-histories/": {
  "post": {
  "operationId": "createFamilyHistory",
  "summary": "Create Family History",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Family Histories"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/FamilyHistoryCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getFamilyHistories",
  "summary": "Get All Family Member Histories Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_FamilyHistorySchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Family Histories"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/family-histories/{familyHistoryId}": {
  "delete": {
  "operationId": "deleteFamilyHistoryById",
  "summary": "Delete Family History",
  "parameters": [
  {
  "in": "path",
  "name": "familyHistoryId",
  "schema": {
  "title": "Familyhistoryid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Family Histories"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getFamilyHistoryById",
  "summary": "Get Family History By Id",
  "parameters": [
  {
  "in": "path",
  "name": "familyHistoryId",
  "schema": {
  "title": "Familyhistoryid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/FamilyHistorySchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Family Histories"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateFamilyHistory",
  "summary": "Update Family History",
  "parameters": [
  {
  "in": "path",
  "name": "familyHistoryId",
  "schema": {
  "title": "Familyhistoryid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Family Histories"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/FamilyHistoryCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/comorbidities-assessments/": {
  "post": {
  "operationId": "createComorbiditiesAssessment",
  "summary": "Create Comorbidities Assessment",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Comorbidities Assessments"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ComorbiditiesAssessmentCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getComorbiditiesAssessments",
  "summary": "Get All Comorbidities Assessments Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_ComorbiditiesAssessmentSchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Comorbidities Assessments"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/comorbidities-assessments/{comorbiditiesAssessmentId}": {
  "delete": {
  "operationId": "deleteComorbiditiesAssessment",
  "summary": "Delete Comorbidities Assessment",
  "parameters": [
  {
  "in": "path",
  "name": "comorbiditiesAssessmentId",
  "schema": {
  "title": "Comorbiditiesassessmentid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Comorbidities Assessments"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getComorbiditiesAssessmentById",
  "summary": "Get Comorbidities Assessment By Id",
  "parameters": [
  {
  "in": "path",
  "name": "comorbiditiesAssessmentId",
  "schema": {
  "title": "Comorbiditiesassessmentid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ComorbiditiesAssessmentSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Comorbidities Assessments"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateComorbiditiesAssessment",
  "summary": "Update Comorbidities Assessment",
  "parameters": [
  {
  "in": "path",
  "name": "comorbiditiesAssessmentId",
  "schema": {
  "title": "Comorbiditiesassessmentid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Comorbidities Assessments"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ComorbiditiesAssessmentCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/comorbidities-panels/": {
  "get": {
  "operationId": "getComorbiditiesPanels",
  "summary": "Get All Comorbidities Panels",
  "parameters": [],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/ComorbiditiesPanelSchema"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  }
  },
  "tags": [
  "Comorbidities Assessments"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/comorbidities-panels/{panel}": {
  "get": {
  "operationId": "getComorbiditiesPanelsByName",
  "summary": "Get Comorbidities Panel By Name",
  "parameters": [
  {
  "in": "path",
  "name": "panel",
  "schema": {
  "enum": [
  "Charlson",
  "Elixhauser",
  "NCI"
  ],
  "title": "ComorbiditiesPanel",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ComorbiditiesPanelSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Comorbidities Assessments"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/vitals/": {
  "post": {
  "operationId": "createVitals",
  "summary": "Create Vitals",
  "parameters": [],
  "responses": {
  "201": {
  "description": "Created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ResourceIdSchema"
  }
  }
  }
  }
  },
  "tags": [
  "Vitals"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/VitalsCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getVitals",
  "summary": "Get All Vitals Matching The Query",
  "parameters": [
  {
  "in": "query",
  "name": "caseId",
  "schema": {
  "title": "Caseid",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_VitalsSchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Vitals"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/vitals/{vitalsId}": {
  "delete": {
  "operationId": "deleteVitalsById",
  "summary": "Delete Vitals",
  "parameters": [
  {
  "in": "path",
  "name": "vitalsId",
  "schema": {
  "title": "Vitalsid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Vitals"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "get": {
  "operationId": "getVitalsById",
  "summary": "Get Vitals By Id",
  "parameters": [
  {
  "in": "path",
  "name": "vitalsId",
  "schema": {
  "title": "Vitalsid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/VitalsSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Vitals"
  ],
  "security": [
  {
  "JWTAuth": []
  }
  ]
  },
  "put": {
  "operationId": "updateVitalsById",
  "summary": "Update Vitals",
  "parameters": [
  {
  "in": "path",
  "name": "vitalsId",
  "schema": {
  "title": "Vitalsid",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "204": {
  "description": "No Content"
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Vitals"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/VitalsCreateSchema"
  }
  }
  },
  "required": true
  },
  "security": [
  {
  "JWTAuth": []
  }
  ]
  }
  },
  "/api/measures/{measureName}/units/conversion": {
  "post": {
  "operationId": "convertUnits",
  "summary": "Convert Units",
  "parameters": [
  {
  "in": "path",
  "name": "measureName",
  "schema": {
  "title": "Measurename",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MeasureSchema"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Measures"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MeasureConversionSchema"
  }
  }
  },
  "required": true
  }
  }
  },
  "/api/measures/{measureName}/units/default": {
  "get": {
  "operationId": "getMeasureDefaultUnits",
  "summary": "Get Measure Default Units",
  "parameters": [
  {
  "in": "path",
  "name": "measureName",
  "schema": {
  "title": "Measurename",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "title": "Response",
  "type": "string"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Measures"
  ]
  }
  },
  "/api/measures/{measureName}/units": {
  "get": {
  "operationId": "getMeasureUnits",
  "summary": "Get Measure Units",
  "parameters": [
  {
  "in": "path",
  "name": "measureName",
  "schema": {
  "title": "Measurename",
  "type": "string"
  },
  "required": true
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "type": "string"
  },
  "title": "Response",
  "type": "array"
  }
  }
  }
  },
  "404": {
  "description": "Not Found"
  }
  },
  "tags": [
  "Measures"
  ]
  }
  },
  "/api/terminologies/{terminologyName}/concepts": {
  "get": {
  "operationId": "getTerminologyConcepts",
  "summary": "Get Terminology Concepts",
  "parameters": [
  {
  "in": "path",
  "name": "terminologyName",
  "schema": {
  "title": "Terminologyname",
  "type": "string"
  },
  "required": true
  },
  {
  "in": "query",
  "name": "query",
  "schema": {
  "title": "Query",
  "type": "string"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "codes",
  "schema": {
  "items": {
  "type": "string"
  },
  "title": "Codes",
  "type": "array"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "limit",
  "schema": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "required": false
  },
  {
  "in": "query",
  "name": "offset",
  "schema": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  },
  "required": false
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Paginated_CodedConceptSchema_"
  }
  }
  }
  }
  },
  "tags": [
  "Terminology"
  ]
  }
  }
  },
  "components": {
  "schemas": {
  "TokenPairSchema": {
  "properties": {
  "username": {
  "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
  "maxLength": 150,
  "title": "Username",
  "type": "string"
  },
  "refresh": {
  "title": "Refresh",
  "type": "string"
  },
  "access": {
  "title": "Access",
  "type": "string"
  }
  },
  "required": [
  "username",
  "refresh",
  "access"
  ],
  "title": "TokenPair",
  "type": "object"
  },
  "UserCredentialsSchema": {
  "properties": {
  "password": {
  "format": "password",
  "title": "Password",
  "type": "string",
  "writeOnly": true
  },
  "username": {
  "title": "Username",
  "type": "string"
  }
  },
  "required": [
  "password",
  "username"
  ],
  "title": "UserCredentials",
  "type": "object"
  },
  "RefreshedTokenPairSchema": {
  "properties": {
  "refresh": {
  "title": "Refresh",
  "type": "string"
  },
  "access": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Access"
  }
  },
  "required": [
  "refresh",
  "access"
  ],
  "title": "RefreshedTokenPair",
  "type": "object"
  },
  "TokenRefreshSchema": {
  "properties": {
  "refresh": {
  "title": "Refresh",
  "type": "string"
  }
  },
  "required": [
  "refresh"
  ],
  "title": "TokenRefresh",
  "type": "object"
  },
  "UserSchema": {
  "properties": {
  "id": {
  "title": "Id",
  "type": "integer"
  },
  "username": {
  "title": "Username",
  "type": "string"
  },
  "email": {
  "title": "Email",
  "type": "string"
  },
  "firstName": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Firstname"
  },
  "lastName": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Lastname"
  }
  },
  "required": [
  "id",
  "username",
  "email"
  ],
  "title": "User",
  "type": "object"
  },
  "ResourceIdSchema": {
  "properties": {
  "id": {
  "title": "Id",
  "type": "string"
  }
  },
  "required": [
  "id"
  ],
  "title": "ResourceId",
  "type": "object"
  },
  "CodedConceptSchema": {
  "properties": {
  "code": {
  "title": "Code",
  "type": "string"
  },
  "system": {
  "title": "System",
  "type": "string"
  },
  "display": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Display"
  },
  "version": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Version"
  },
  "synonyms": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "title": "Synonyms"
  },
  "properties": {
  "anyOf": [
  {
  "type": "object"
  },
  {
  "type": "null"
  }
  ],
  "title": "Properties"
  }
  },
  "required": [
  "code",
  "system"
  ],
  "title": "CodedConcept",
  "type": "object"
  },
  "PatientCaseCreate": {
  "properties": {
  "gender": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Gender for administrative purposes",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gender",
  "terminology": "AdministrativeGender",
  "title": "Gender"
  },
  "race": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Race of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "race",
  "terminology": "RaceCategory",
  "title": "Race"
  },
  "sexAtBirth": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Sex assigned at birth",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "sex_at_birth",
  "terminology": "BirthSex",
  "title": "Birth sex"
  },
  "genderIdentity": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gender_identity",
  "terminology": "GenderIdentity",
  "title": "Gender identity"
  },
  "dateOfBirth": {
  "description": "Anonymized date of birth (year/month). The day is set to the first day of the month by convention.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_of_birth",
  "title": "Date of birth",
  "type": "string"
  },
  "dateOfDeath": {
  "anyOf": [
  {
  "format": "date",
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Anonymized date of death (year/month). The day is set to the first day of the month by convention.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_of_death",
  "title": "Date of death"
  },
  "causeOfDeath": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the cause of death.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "cause_of_death",
  "terminology": "CauseOfDeath",
  "title": "Cause of death"
  }
  },
  "required": [
  "gender",
  "dateOfBirth"
  ],
  "title": "PatientCaseCreate",
  "type": "object"
  },
  "GenderEnum": {
  "enum": [
  "male",
  "female",
  "unknown"
  ],
  "title": "GenderEnum",
  "type": "string"
  },
  "Input": {
  "properties": {
  "limit": {
  "default": 100,
  "minimum": 1,
  "title": "Limit",
  "type": "integer"
  },
  "offset": {
  "default": 0,
  "minimum": 0,
  "title": "Offset",
  "type": "integer"
  }
  },
  "title": "Input",
  "type": "object"
  },
  "QueryParameters": {
  "properties": {
  "query": {
  "title": "Query",
  "type": "string"
  },
  "codes": {
  "items": {
  "type": "string"
  },
  "title": "Codes",
  "type": "array"
  }
  },
  "title": "QueryParameters",
  "type": "object"
  },
  "Paginated_PatientCase_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/PatientCase"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[PatientCase]",
  "type": "object"
  },
  "PatientCase": {
  "properties": {
  "age": {
  "description": "Approximate age of the patient in years",
  "title": "Age",
  "type": "integer"
  },
  "dataCompletionRate": {
  "description": "Percentage indicating the completeness of a case in terms of its data.",
  "title": "Datacompletionrate",
  "type": "number"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "pseudoidentifier": {
  "description": "Pseudoidentifier of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 40,
  "one_to_many": false,
  "orm_name": "pseudoidentifier",
  "title": "Pseudoidentifier",
  "type": "string"
  },
  "gender": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Gender for administrative purposes",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gender",
  "terminology": "AdministrativeGender",
  "title": "Gender"
  },
  "race": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Race of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "race",
  "terminology": "RaceCategory",
  "title": "Race"
  },
  "sexAtBirth": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Sex assigned at birth",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "sex_at_birth",
  "terminology": "BirthSex",
  "title": "Birth sex"
  },
  "genderIdentity": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gender_identity",
  "terminology": "GenderIdentity",
  "title": "Gender identity"
  },
  "dateOfBirth": {
  "description": "Anonymized date of birth (year/month). The day is set to the first day of the month by convention.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_of_birth",
  "title": "Date of birth",
  "type": "string"
  },
  "isDeceased": {
  "description": "Indicates if the individual is deceased or not (determined automatically based on existence of a date of death)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "is_deceased",
  "title": "Is deceased",
  "type": "boolean"
  },
  "dateOfDeath": {
  "anyOf": [
  {
  "format": "date",
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Anonymized date of death (year/month). The day is set to the first day of the month by convention.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_of_death",
  "title": "Date of death"
  },
  "causeOfDeath": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the cause of death.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "cause_of_death",
  "terminology": "CauseOfDeath",
  "title": "Cause of death"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  }
  },
  "required": [
  "age",
  "dataCompletionRate",
  "id",
  "createdAt",
  "updatedAt",
  "pseudoidentifier",
  "gender",
  "dateOfBirth",
  "isDeceased"
  ],
  "title": "PatientCase",
  "type": "object"
  },
  "NeoplasticEntityCreate": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's neoplasm(s) are recorded",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "relationship": {
  "$ref": "#/components/schemas/NeoplasticEntityRelationshipChoices",
  "description": "Relationship linking secondary and recurrent tumors to their primary origin or for distinguishing between different phases of the disease.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 30,
  "one_to_many": false,
  "orm_name": "relationship",
  "title": "Neoplastic relationship"
  },
  "relatedPrimaryId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Reference to the primary neoplasm of which the neoplasm(s) originated from.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "related_primary",
  "title": "Related primary neoplasm"
  },
  "assertionDate": {
  "description": "The date on which the existence of the neoplasm(s) was first asserted or acknowledged",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "assertion_date",
  "title": "Assertion date",
  "type": "string"
  },
  "topography": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Anatomical location of the neoplasm(s)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "topography",
  "terminology": "CancerTopography",
  "title": "Topography"
  },
  "morphology": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Describes the cell type of the tumor and its biologic activity, in other words, the characteristics of the tumor itself",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "morphology",
  "terminology": "CancerMorphology",
  "title": "Morphology"
  },
  "differentitation": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Morphologic differentitation characteristics of the neoplasm(s)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "differentitation",
  "terminology": "HistologyDifferentiation",
  "title": "Differentiation"
  },
  "laterality": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Laterality qualifier for the location of the neoplasm(s)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "laterality",
  "terminology": "LateralityQualifier",
  "title": "Laterality"
  }
  },
  "required": [
  "caseId",
  "relationship",
  "assertionDate",
  "topography",
  "morphology"
  ],
  "title": "NeoplasticEntityCreate",
  "type": "object"
  },
  "NeoplasticEntityRelationshipChoices": {
  "enum": [
  "primary",
  "metastatic",
  "local_recurrence",
  "regional_recurrence"
  ],
  "title": "NeoplasticEntityRelationshipChoices",
  "type": "string"
  },
  "PatientCaseBundleCreate": {
  "properties": {
  "neoplasticEntities": {
  "description": "Neoplastic entities",
  "items": {
  "$ref": "#/components/schemas/NeoplasticEntityCreate"
  },
  "title": "Neoplasticentities",
  "type": "array"
  },
  "pseudoidentifier": {
  "description": "Pseudoidentifier of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 40,
  "one_to_many": false,
  "orm_name": "pseudoidentifier",
  "title": "Pseudoidentifier",
  "type": "string"
  },
  "gender": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Gender for administrative purposes",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gender",
  "terminology": "AdministrativeGender",
  "title": "Gender"
  },
  "race": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Race of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "race",
  "terminology": "RaceCategory",
  "title": "Race"
  },
  "sexAtBirth": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Sex assigned at birth",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "sex_at_birth",
  "terminology": "BirthSex",
  "title": "Birth sex"
  },
  "genderIdentity": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gender_identity",
  "terminology": "GenderIdentity",
  "title": "Gender identity"
  },
  "dateOfBirth": {
  "description": "Anonymized date of birth (year/month). The day is set to the first day of the month by convention.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_of_birth",
  "title": "Date of birth",
  "type": "string"
  },
  "dateOfDeath": {
  "anyOf": [
  {
  "format": "date",
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Anonymized date of death (year/month). The day is set to the first day of the month by convention.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_of_death",
  "title": "Date of death"
  },
  "causeOfDeath": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the cause of death.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "cause_of_death",
  "terminology": "CauseOfDeath",
  "title": "Cause of death"
  }
  },
  "required": [
  "neoplasticEntities",
  "pseudoidentifier",
  "gender",
  "dateOfBirth"
  ],
  "title": "PatientCaseBundleCreate",
  "type": "object"
  },
  "PatientCaseDataCategories": {
  "enum": [
  "comorbidities-assessments",
  "family-histories",
  "genomic-signatures",
  "genomic-variants",
  "lifestyles",
  "comorbidities",
  "neoplastic-entities",
  "performance-status",
  "radiotherapies",
  "risk-assessments",
  "stagings",
  "surgeries",
  "systemic-therapies",
  "tumor-markers",
  "vitals",
  "tumor-board-reviews",
  "adverse-events",
  "therapy-responses"
  ],
  "title": "PatientCaseDataCategories",
  "type": "string"
  },
  "PatientCaseDataCompletionStatusSchema": {
  "properties": {
  "status": {
  "description": "Boolean indicating whether the data category has been marked as completed",
  "title": "Status",
  "type": "boolean"
  },
  "username": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Username of the person who marked the category as completed",
  "title": "Username"
  },
  "timestamp": {
  "anyOf": [
  {
  "format": "date-time",
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Username of the person who marked the category as completed",
  "title": "Timestamp"
  }
  },
  "required": [
  "status"
  ],
  "title": "PatientCaseDataCompletionStatusSchema",
  "type": "object"
  },
  "NeoplasticEntity": {
  "properties": {
  "description": {
  "description": "Human-readable description of the neoplastic entity",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's neoplasm(s) are recorded",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "relationship": {
  "$ref": "#/components/schemas/NeoplasticEntityRelationshipChoices",
  "description": "Relationship linking secondary and recurrent tumors to their primary origin or for distinguishing between different phases of the disease.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 30,
  "one_to_many": false,
  "orm_name": "relationship",
  "title": "Neoplastic relationship"
  },
  "relatedPrimaryId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Reference to the primary neoplasm of which the neoplasm(s) originated from.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "related_primary",
  "title": "Related primary neoplasm"
  },
  "assertionDate": {
  "description": "The date on which the existence of the neoplasm(s) was first asserted or acknowledged",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "assertion_date",
  "title": "Assertion date",
  "type": "string"
  },
  "topography": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Anatomical location of the neoplasm(s)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "topography",
  "terminology": "CancerTopography",
  "title": "Topography"
  },
  "morphology": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Describes the cell type of the tumor and its biologic activity, in other words, the characteristics of the tumor itself",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "morphology",
  "terminology": "CancerMorphology",
  "title": "Morphology"
  },
  "differentitation": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Morphologic differentitation characteristics of the neoplasm(s)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "differentitation",
  "terminology": "HistologyDifferentiation",
  "title": "Differentiation"
  },
  "laterality": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Laterality qualifier for the location of the neoplasm(s)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "laterality",
  "terminology": "LateralityQualifier",
  "title": "Laterality"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "relationship",
  "assertionDate",
  "topography",
  "morphology"
  ],
  "title": "NeoplasticEntity",
  "type": "object"
  },
  "PatientCaseBundle": {
  "properties": {
  "age": {
  "description": "Approximate age of the patient in years",
  "title": "Age",
  "type": "integer"
  },
  "neoplasticEntities": {
  "description": "Neoplastic entities",
  "items": {
  "$ref": "#/components/schemas/NeoplasticEntity"
  },
  "title": "Neoplasticentities",
  "type": "array"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "pseudoidentifier": {
  "description": "Pseudoidentifier of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 40,
  "one_to_many": false,
  "orm_name": "pseudoidentifier",
  "title": "Pseudoidentifier",
  "type": "string"
  },
  "gender": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Gender for administrative purposes",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gender",
  "terminology": "AdministrativeGender",
  "title": "Gender"
  },
  "race": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Race of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "race",
  "terminology": "RaceCategory",
  "title": "Race"
  },
  "sexAtBirth": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Sex assigned at birth",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "sex_at_birth",
  "terminology": "BirthSex",
  "title": "Birth sex"
  },
  "genderIdentity": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gender_identity",
  "terminology": "GenderIdentity",
  "title": "Gender identity"
  },
  "dateOfBirth": {
  "description": "Anonymized date of birth (year/month). The day is set to the first day of the month by convention.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_of_birth",
  "title": "Date of birth",
  "type": "string"
  },
  "isDeceased": {
  "description": "Indicates if the individual is deceased or not (determined automatically based on existence of a date of death)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "is_deceased",
  "title": "Is deceased",
  "type": "boolean"
  },
  "dateOfDeath": {
  "anyOf": [
  {
  "format": "date",
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Anonymized date of death (year/month). The day is set to the first day of the month by convention.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_of_death",
  "title": "Date of death"
  },
  "causeOfDeath": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the cause of death.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "cause_of_death",
  "terminology": "CauseOfDeath",
  "title": "Cause of death"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  }
  },
  "required": [
  "age",
  "id",
  "createdAt",
  "updatedAt",
  "pseudoidentifier",
  "gender",
  "dateOfBirth",
  "isDeceased"
  ],
  "title": "PatientCaseBundle",
  "type": "object"
  },
  "Paginated_NeoplasticEntity_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/NeoplasticEntity"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[NeoplasticEntity]",
  "type": "object"
  },
  "BinetStagingCreate": {
  "properties": {
  "stagingDomain": {
  "const": "binet",
  "default": "binet",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Binet stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "BinetStage",
  "title": "Binet Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "BinetStagingCreate",
  "type": "object"
  },
  "BreslowDepthCreate": {
  "properties": {
  "stagingDomain": {
  "const": "breslow",
  "default": "breslow",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "depth": {
  "description": "Breslow depth given in milimeters",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "depth",
  "title": "Breslow depth",
  "type": "number"
  },
  "isUlcered": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the primary tumour presents ulceration",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "is_ulcered",
  "title": "Ulcered"
  }
  },
  "required": [
  "caseId",
  "date",
  "depth"
  ],
  "title": "BreslowDepthCreate",
  "type": "object"
  },
  "ClarkStagingCreate": {
  "properties": {
  "stagingDomain": {
  "const": "clark",
  "default": "clark",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Clark level stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "ClarkLevel",
  "title": "Clark Level Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "ClarkStagingCreate",
  "type": "object"
  },
  "FIGOStagingCreate": {
  "properties": {
  "stagingDomain": {
  "const": "figo",
  "default": "figo",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the FIGO stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "FIGOStage",
  "title": "FIGO Stage"
  },
  "methodology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Methodology used for the FIGO staging",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "FIGOStagingMethod",
  "title": "FIGO staging methodology"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "FIGOStagingCreate",
  "type": "object"
  },
  "GleasonGradeCreate": {
  "properties": {
  "stagingDomain": {
  "const": "gleason",
  "default": "gleason",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Gleason grade stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "GleasonGradeGroupStage",
  "title": "Gleason grade Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "GleasonGradeCreate",
  "type": "object"
  },
  "INRGSSStageCreate": {
  "properties": {
  "stagingDomain": {
  "const": "inrgss",
  "default": "inrgss",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the INRGSS stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "NeuroblastomaINRGSSStage",
  "title": "INRGSS Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "INRGSSStageCreate",
  "type": "object"
  },
  "INSSStageCreate": {
  "properties": {
  "stagingDomain": {
  "const": "inss",
  "default": "inss",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the INSS stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "NeuroblastomaINSSStage",
  "title": "INSS Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "INSSStageCreate",
  "type": "object"
  },
  "ISSStagingCreate": {
  "properties": {
  "stagingDomain": {
  "const": "iss",
  "default": "iss",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of theISS stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "MyelomaISSStage",
  "title": "ISS Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "ISSStagingCreate",
  "type": "object"
  },
  "LymphomaStagingCreate": {
  "properties": {
  "stagingDomain": {
  "const": "lymphoma",
  "default": "lymphoma",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Lymphoma stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "LymphomaStage",
  "title": "Lymphoma Stage"
  },
  "methodology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Methodology used for the Lymphoma staging",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "LymphomaStagingMethod",
  "title": "Lymphoma staging methodology"
  },
  "bulky": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Bulky modifier indicating if the lymphoma has the presence of bulky disease.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "bulky",
  "title": "Bulky disease modifier"
  },
  "pathological": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the staging was based on clinical or pathologic evidence.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "pathological",
  "title": "Pathological staging"
  },
  "modifiers": {
  "default": [],
  "description": "Qualifier acting as modifier for the lymphoma stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "modifiers",
  "terminology": "LymphomaStageValueModifier",
  "title": "Lymphoma stage modifier",
  "type": "array"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "LymphomaStagingCreate",
  "type": "object"
  },
  "RISSStagingCreate": {
  "properties": {
  "stagingDomain": {
  "const": "riss",
  "default": "riss",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the RISS stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "MyelomaRISSStage",
  "title": "RISS Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "RISSStagingCreate",
  "type": "object"
  },
  "RaiStagingCreate": {
  "properties": {
  "stagingDomain": {
  "const": "rai",
  "default": "rai",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Rai stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "RaiStage",
  "title": "Rai Stage"
  },
  "methodology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Methodology used for the Rai staging",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "RaiStagingMethod",
  "title": "Rai staging methodology"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "RaiStagingCreate",
  "type": "object"
  },
  "RhabdomyosarcomaClinicalGroupCreate": {
  "properties": {
  "stagingDomain": {
  "const": "rhabdomyosarcoma",
  "default": "rhabdomyosarcoma",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the rhabdomyosarcoma clinical group",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "RhabdomyosarcomaClinicalGroup",
  "title": "Rhabdomyosarcoma clinical group"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "RhabdomyosarcomaClinicalGroupCreate",
  "type": "object"
  },
  "TNMStagingCreate": {
  "properties": {
  "stagingDomain": {
  "const": "tnm",
  "default": "tnm",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The information determined as a result of making the observation, if the information has a simple value",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "TNMStage",
  "title": "TNM Stage"
  },
  "methodology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Methodology used for TNM staging",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "TNMStagingMethod",
  "title": "TNM Staging methodology"
  },
  "pathological": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the staging was based on pathological (true) or clinical (false) evidence.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "pathological",
  "title": "Pathological staging"
  },
  "primaryTumor": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "T stage (extent of the primary tumor)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "primaryTumor",
  "terminology": "TNMPrimaryTumorCategory",
  "title": "T Stage"
  },
  "regionalNodes": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "N stage (degree of spread to regional lymph nodes)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "regionalNodes",
  "terminology": "TNMRegionalNodesCategory",
  "title": "N Stage"
  },
  "distantMetastases": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "M stage (presence of distant metastasis)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "distantMetastases",
  "terminology": "TNMDistantMetastasesCategory",
  "title": "M Stage"
  },
  "grade": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "G stage (grade of the cancer cells)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "grade",
  "terminology": "TNMGradeCategory",
  "title": "G Stage"
  },
  "residualTumor": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "R stage (extent of residual tumor cells after operation)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "residualTumor",
  "terminology": "TNMResidualTumorCategory",
  "title": "R Stage"
  },
  "lymphaticInvasion": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "L stage (invasion into lymphatic vessels)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "lymphaticInvasion",
  "terminology": "TNMLymphaticInvasionCategory",
  "title": "L Stage"
  },
  "venousInvasion": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "V stage (invasion into venous vessels)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "venousInvasion",
  "terminology": "TNMVenousInvasionCategory",
  "title": "V Stage"
  },
  "perineuralInvasion": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Pn stage (invasion into adjunct nerves)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "perineuralInvasion",
  "terminology": "TNMPerineuralInvasionCategory",
  "title": "Pn Stage"
  },
  "serumTumorMarkerLevel": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "S stage (serum tumor marker level)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "serumTumorMarkerLevel",
  "terminology": "TNMSerumTumorMarkerLevelCategory",
  "title": "S Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "TNMStagingCreate",
  "type": "object"
  },
  "WilmsStageCreate": {
  "properties": {
  "stagingDomain": {
  "const": "wilms",
  "default": "wilms",
  "title": "Stagingdomain",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Wilms stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "WilmsTumorStage",
  "title": "Wilms Stage"
  }
  },
  "required": [
  "caseId",
  "date",
  "stage"
  ],
  "title": "WilmsStageCreate",
  "type": "object"
  },
  "StagingDomain": {
  "enum": [
  "tnm",
  "figo",
  "binet",
  "rai",
  "breslow",
  "clark",
  "iss",
  "riss",
  "inss",
  "inrgss",
  "gleason",
  "rhabdomyosarcoma",
  "wilms",
  "lymphoma"
  ],
  "title": "StagingDomain",
  "type": "string"
  },
  "AnyStaging": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TNMStaging"
  },
  {
  "$ref": "#/components/schemas/FIGOStaging"
  },
  {
  "$ref": "#/components/schemas/BinetStaging"
  },
  {
  "$ref": "#/components/schemas/RaiStaging"
  },
  {
  "$ref": "#/components/schemas/BreslowDepth"
  },
  {
  "$ref": "#/components/schemas/ClarkStaging"
  },
  {
  "$ref": "#/components/schemas/ISSStaging"
  },
  {
  "$ref": "#/components/schemas/RISSStaging"
  },
  {
  "$ref": "#/components/schemas/GleasonGrade"
  },
  {
  "$ref": "#/components/schemas/INSSStage"
  },
  {
  "$ref": "#/components/schemas/INRGSSStage"
  },
  {
  "$ref": "#/components/schemas/WilmsStage"
  },
  {
  "$ref": "#/components/schemas/RhabdomyosarcomaClinicalGroup"
  },
  {
  "$ref": "#/components/schemas/LymphomaStaging"
  }
  ]
  },
  "BinetStaging": {
  "properties": {
  "stagingDomain": {
  "const": "binet",
  "default": "binet",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Binet stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "BinetStage",
  "title": "Binet Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "BinetStaging",
  "type": "object"
  },
  "BreslowDepth": {
  "properties": {
  "stagingDomain": {
  "const": "breslow",
  "default": "breslow",
  "title": "Stagingdomain",
  "type": "string"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "depth": {
  "description": "Breslow depth given in milimeters",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "depth",
  "title": "Breslow depth",
  "type": "number"
  },
  "isUlcered": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the primary tumour presents ulceration",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "is_ulcered",
  "title": "Ulcered"
  }
  },
  "required": [
  "stage",
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "depth"
  ],
  "title": "BreslowDepth",
  "type": "object"
  },
  "ClarkStaging": {
  "properties": {
  "stagingDomain": {
  "const": "clark",
  "default": "clark",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Clark level stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "ClarkLevel",
  "title": "Clark Level Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "ClarkStaging",
  "type": "object"
  },
  "FIGOStaging": {
  "properties": {
  "stagingDomain": {
  "const": "figo",
  "default": "figo",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the FIGO stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "FIGOStage",
  "title": "FIGO Stage"
  },
  "methodology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Methodology used for the FIGO staging",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "FIGOStagingMethod",
  "title": "FIGO staging methodology"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "FIGOStaging",
  "type": "object"
  },
  "GleasonGrade": {
  "properties": {
  "stagingDomain": {
  "const": "gleason",
  "default": "gleason",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Gleason grade stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "GleasonGradeGroupStage",
  "title": "Gleason grade Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "GleasonGrade",
  "type": "object"
  },
  "INRGSSStage": {
  "properties": {
  "stagingDomain": {
  "const": "inrgss",
  "default": "inrgss",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the INRGSS stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "NeuroblastomaINRGSSStage",
  "title": "INRGSS Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "INRGSSStage",
  "type": "object"
  },
  "INSSStage": {
  "properties": {
  "stagingDomain": {
  "const": "inss",
  "default": "inss",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the INSS stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "NeuroblastomaINSSStage",
  "title": "INSS Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "INSSStage",
  "type": "object"
  },
  "ISSStaging": {
  "properties": {
  "stagingDomain": {
  "const": "iss",
  "default": "iss",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of theISS stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "MyelomaISSStage",
  "title": "ISS Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "ISSStaging",
  "type": "object"
  },
  "LymphomaStaging": {
  "properties": {
  "stagingDomain": {
  "const": "lymphoma",
  "default": "lymphoma",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Lymphoma stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "LymphomaStage",
  "title": "Lymphoma Stage"
  },
  "methodology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Methodology used for the Lymphoma staging",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "LymphomaStagingMethod",
  "title": "Lymphoma staging methodology"
  },
  "bulky": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Bulky modifier indicating if the lymphoma has the presence of bulky disease.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "bulky",
  "title": "Bulky disease modifier"
  },
  "pathological": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the staging was based on clinical or pathologic evidence.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "pathological",
  "title": "Pathological staging"
  },
  "modifiers": {
  "default": [],
  "description": "Qualifier acting as modifier for the lymphoma stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "modifiers",
  "terminology": "LymphomaStageValueModifier",
  "title": "Lymphoma stage modifier",
  "type": "array"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "LymphomaStaging",
  "type": "object"
  },
  "Paginated_AnyStaging_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/AnyStaging"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[AnyStaging]",
  "type": "object"
  },
  "RISSStaging": {
  "properties": {
  "stagingDomain": {
  "const": "riss",
  "default": "riss",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the RISS stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "MyelomaRISSStage",
  "title": "RISS Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "RISSStaging",
  "type": "object"
  },
  "RaiStaging": {
  "properties": {
  "stagingDomain": {
  "const": "rai",
  "default": "rai",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Rai stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "RaiStage",
  "title": "Rai Stage"
  },
  "methodology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Methodology used for the Rai staging",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "RaiStagingMethod",
  "title": "Rai staging methodology"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "RaiStaging",
  "type": "object"
  },
  "RhabdomyosarcomaClinicalGroup": {
  "properties": {
  "stagingDomain": {
  "const": "rhabdomyosarcoma",
  "default": "rhabdomyosarcoma",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the rhabdomyosarcoma clinical group",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "RhabdomyosarcomaClinicalGroup",
  "title": "Rhabdomyosarcoma clinical group"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "RhabdomyosarcomaClinicalGroup",
  "type": "object"
  },
  "TNMStaging": {
  "properties": {
  "stagingDomain": {
  "const": "tnm",
  "default": "tnm",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The information determined as a result of making the observation, if the information has a simple value",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "TNMStage",
  "title": "TNM Stage"
  },
  "methodology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Methodology used for TNM staging",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "TNMStagingMethod",
  "title": "TNM Staging methodology"
  },
  "pathological": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the staging was based on pathological (true) or clinical (false) evidence.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "pathological",
  "title": "Pathological staging"
  },
  "primaryTumor": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "T stage (extent of the primary tumor)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "primaryTumor",
  "terminology": "TNMPrimaryTumorCategory",
  "title": "T Stage"
  },
  "regionalNodes": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "N stage (degree of spread to regional lymph nodes)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "regionalNodes",
  "terminology": "TNMRegionalNodesCategory",
  "title": "N Stage"
  },
  "distantMetastases": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "M stage (presence of distant metastasis)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "distantMetastases",
  "terminology": "TNMDistantMetastasesCategory",
  "title": "M Stage"
  },
  "grade": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "G stage (grade of the cancer cells)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "grade",
  "terminology": "TNMGradeCategory",
  "title": "G Stage"
  },
  "residualTumor": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "R stage (extent of residual tumor cells after operation)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "residualTumor",
  "terminology": "TNMResidualTumorCategory",
  "title": "R Stage"
  },
  "lymphaticInvasion": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "L stage (invasion into lymphatic vessels)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "lymphaticInvasion",
  "terminology": "TNMLymphaticInvasionCategory",
  "title": "L Stage"
  },
  "venousInvasion": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "V stage (invasion into venous vessels)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "venousInvasion",
  "terminology": "TNMVenousInvasionCategory",
  "title": "V Stage"
  },
  "perineuralInvasion": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Pn stage (invasion into adjunct nerves)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "perineuralInvasion",
  "terminology": "TNMPerineuralInvasionCategory",
  "title": "Pn Stage"
  },
  "serumTumorMarkerLevel": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "S stage (serum tumor marker level)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "serumTumorMarkerLevel",
  "terminology": "TNMSerumTumorMarkerLevelCategory",
  "title": "S Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "TNMStaging",
  "type": "object"
  },
  "WilmsStage": {
  "properties": {
  "stagingDomain": {
  "const": "wilms",
  "default": "wilms",
  "title": "Stagingdomain",
  "type": "string"
  },
  "description": {
  "description": "Human-readable description of the staging",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer is staged",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the staging was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Staging date",
  "type": "string"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "stagedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the staging.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "staged_entities",
  "title": "Staged neoplastic entities",
  "type": "array"
  },
  "stage": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The value of the Wilms stage",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "stage",
  "terminology": "WilmsTumorStage",
  "title": "Wilms Stage"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "stage"
  ],
  "title": "WilmsStage",
  "type": "object"
  },
  "RiskAssessmentCreate": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's cancer risk is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the risk assessment was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "methodology": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Indicates the method or type of risk assessment",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "CancerRiskAssessmentMethod",
  "title": "Assessment methodology"
  },
  "risk": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Assessed risk",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "risk",
  "terminology": "CancerRiskAssessmentClassification",
  "title": "Risk"
  },
  "score": {
  "anyOf": [
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "Quantitative score used to classify the risk",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "score",
  "title": "Score"
  },
  "assessedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were assessed to estimate the risk.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "assessed_entities",
  "title": "Assessed neoplastic entities",
  "type": "array"
  }
  },
  "required": [
  "caseId",
  "date",
  "methodology",
  "risk"
  ],
  "title": "RiskAssessmentCreate",
  "type": "object"
  },
  "Paginated_RiskAssessment_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/RiskAssessment"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[RiskAssessment]",
  "type": "object"
  },
  "RiskAssessment": {
  "properties": {
  "description": {
  "description": "Human-readable description of the tumor marker",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's cancer risk is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the risk assessment was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "methodology": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Indicates the method or type of risk assessment",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "CancerRiskAssessmentMethod",
  "title": "Assessment methodology"
  },
  "risk": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Assessed risk",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "risk",
  "terminology": "CancerRiskAssessmentClassification",
  "title": "Risk"
  },
  "score": {
  "anyOf": [
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "Quantitative score used to classify the risk",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "score",
  "title": "Score"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "assessedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were assessed to estimate the risk.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "assessed_entities",
  "title": "Assessed neoplastic entities",
  "type": "array"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "methodology",
  "risk"
  ],
  "title": "RiskAssessment",
  "type": "object"
  },
  "MeasureSchema": {
  "properties": {
  "value": {
  "title": "Value",
  "type": "number"
  },
  "unit": {
  "title": "Unit",
  "type": "string"
  }
  },
  "required": [
  "value",
  "unit"
  ],
  "title": "Measure",
  "type": "object"
  },
  "TumorMarkerCreate": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient related to the tumor marker result",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the tumor marker was analyzed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Date",
  "type": "string"
  },
  "analyte": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The chemical or biological substance/agent that is analyzed.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "analyte",
  "terminology": "TumorMarkerAnalyte",
  "title": "Analyte"
  },
  "massConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Mass concentration of the analyte (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "mass_concentration",
  "title": "Mass concentration"
  },
  "arbitraryConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Arbitrary concentration of the analyte (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "arbitrary_concentration",
  "title": "Arbitrary concentration"
  },
  "substanceConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Substance concentration of the analyte (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "substance_concentration",
  "title": "Substance concentration"
  },
  "fraction": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Analyte fraction (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "fraction",
  "title": "Fraction"
  },
  "multipleOfMedian": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Multiples of the median analyte (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "multiple_of_median",
  "title": "Multiples of the median"
  },
  "tumorProportionScore": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerTumorProportionScoreChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Categorization of the percentage of cells in a tumor that express PD-L1",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "tumor_proportion_score",
  "title": "Immune Cells Score (ICS)"
  },
  "immuneCellScore": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerImmuneCellScoreChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Categorization of the percentage of PD-L1 positive immune cells",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "immune_cell_score",
  "title": "Immune Cells Score (ICS)"
  },
  "combinedPositiveScore": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The number of PD-L1 positive cells, including tumor cells, lymphocytes, and macrophages divided by the total number of viable tumor cells multiplied by 100",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "combined_positive_score",
  "title": "Combined Positive Score (CPS)"
  },
  "immunohistochemicalScore": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerImmunohistochemicalScoreChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Categorization of the number of analyte-positive cells in a sample",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "immunohistochemical_score",
  "title": "Immunohistochemical Score"
  },
  "presence": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerPresenceChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether an analyte has tested positive or negative.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "presence",
  "title": "Presence"
  },
  "nuclearExpressionStatus": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerNuclearExpressionStatusChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Categorization of the status of expression of the analyte",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "nuclear_expression_status",
  "title": "Nuclear expression status"
  },
  "relatedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that are related or the focus of the tumor marker analysis.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "related_entities",
  "title": "Related neoplastic entities",
  "type": "array"
  }
  },
  "required": [
  "caseId",
  "date",
  "analyte"
  ],
  "title": "TumorMarkerCreate",
  "type": "object"
  },
  "TumorMarkerImmuneCellScoreChoices": {
  "enum": [
  "IC0",
  "IC1",
  "IC2",
  "IC3"
  ],
  "title": "TumorMarkerImmuneCellScoreChoices",
  "type": "string"
  },
  "TumorMarkerImmunohistochemicalScoreChoices": {
  "enum": [
  "0",
  "1+",
  "2+",
  "3+",
  "indeterminate"
  ],
  "title": "TumorMarkerImmunohistochemicalScoreChoices",
  "type": "string"
  },
  "TumorMarkerNuclearExpressionStatusChoices": {
  "enum": [
  "intact",
  "loss",
  "indeterminate"
  ],
  "title": "TumorMarkerNuclearExpressionStatusChoices",
  "type": "string"
  },
  "TumorMarkerPresenceChoices": {
  "enum": [
  "positive",
  "negative",
  "indeterminate"
  ],
  "title": "TumorMarkerPresenceChoices",
  "type": "string"
  },
  "TumorMarkerTumorProportionScoreChoices": {
  "enum": [
  "TC0",
  "TC1",
  "TC2",
  "TC3"
  ],
  "title": "TumorMarkerTumorProportionScoreChoices",
  "type": "string"
  },
  "Paginated_TumorMarker_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/TumorMarker"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[TumorMarker]",
  "type": "object"
  },
  "TumorMarker": {
  "properties": {
  "description": {
  "description": "Human-readable description of the tumor marker",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient related to the tumor marker result",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the tumor marker was analyzed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Date",
  "type": "string"
  },
  "analyte": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The chemical or biological substance/agent that is analyzed.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "analyte",
  "terminology": "TumorMarkerAnalyte",
  "title": "Analyte"
  },
  "massConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Mass concentration of the analyte (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "mass_concentration",
  "title": "Mass concentration"
  },
  "arbitraryConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Arbitrary concentration of the analyte (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "arbitrary_concentration",
  "title": "Arbitrary concentration"
  },
  "substanceConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Substance concentration of the analyte (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "substance_concentration",
  "title": "Substance concentration"
  },
  "fraction": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Analyte fraction (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "fraction",
  "title": "Fraction"
  },
  "multipleOfMedian": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Multiples of the median analyte (if revelant/measured)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "multiple_of_median",
  "title": "Multiples of the median"
  },
  "tumorProportionScore": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerTumorProportionScoreChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Categorization of the percentage of cells in a tumor that express PD-L1",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "tumor_proportion_score",
  "title": "Immune Cells Score (ICS)"
  },
  "immuneCellScore": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerImmuneCellScoreChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Categorization of the percentage of PD-L1 positive immune cells",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "immune_cell_score",
  "title": "Immune Cells Score (ICS)"
  },
  "combinedPositiveScore": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The number of PD-L1 positive cells, including tumor cells, lymphocytes, and macrophages divided by the total number of viable tumor cells multiplied by 100",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "combined_positive_score",
  "title": "Combined Positive Score (CPS)"
  },
  "immunohistochemicalScore": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerImmunohistochemicalScoreChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Categorization of the number of analyte-positive cells in a sample",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "immunohistochemical_score",
  "title": "Immunohistochemical Score"
  },
  "presence": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerPresenceChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether an analyte has tested positive or negative.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "presence",
  "title": "Presence"
  },
  "nuclearExpressionStatus": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMarkerNuclearExpressionStatusChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Categorization of the status of expression of the analyte",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "nuclear_expression_status",
  "title": "Nuclear expression status"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "relatedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that are related or the focus of the tumor marker analysis.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "related_entities",
  "title": "Related neoplastic entities",
  "type": "array"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "analyte"
  ],
  "title": "TumorMarker",
  "type": "object"
  },
  "AnalyteDetails": {
  "properties": {
  "acronym": {
  "title": "Acronym",
  "type": "string"
  },
  "display": {
  "title": "Display",
  "type": "string"
  },
  "valueTypes": {
  "items": {
  "$ref": "#/components/schemas/AnalyteResultType"
  },
  "title": "Valuetypes",
  "type": "array"
  }
  },
  "required": [
  "acronym",
  "display",
  "valueTypes"
  ],
  "title": "AnalyteDetails",
  "type": "object"
  },
  "AnalyteResultType": {
  "enum": [
  "MassConcentration",
  "ArbitraryConcentration",
  "SubstanceConcentration",
  "MultipleOfMedian",
  "Fraction",
  "Presence",
  "CombinedPositiveScore",
  "ImmuneCellsScore",
  "TumorProportionScore",
  "ImmunoHistoChemicalScore",
  "NuclearExpressionStatus"
  ],
  "title": "AnalyteResultType",
  "type": "string"
  },
  "PeriodSchema": {
  "properties": {
  "start": {
  "format": "date",
  "title": "Start",
  "type": "string"
  },
  "end": {
  "anyOf": [
  {
  "format": "date",
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "End"
  }
  },
  "required": [
  "start"
  ],
  "title": "Period",
  "type": "object"
  },
  "SystemicTherapyCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who received the systemic therapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "period": {
  "$ref": "#/components/schemas/PeriodSchema",
  "description": "Clinically-relevant period during which the therapy was administered to the patient.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "period",
  "title": "Treatment period"
  },
  "cycles": {
  "description": "The total number of treatment cycles during the treatment period.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "cycles",
  "title": "Cycles",
  "type": "integer"
  },
  "intent": {
  "$ref": "#/components/schemas/SystemicTherapyIntentChoices",
  "description": "Treatment intent of the system therapy",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 30,
  "one_to_many": false,
  "orm_name": "intent",
  "title": "Intent"
  },
  "role": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates the role of this therapy in the overall treatment strategy.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "role",
  "terminology": "TreatmentCategory",
  "title": "Treatment Role"
  },
  "terminationReason": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Explanation for the premature or planned termination of the systemic therapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "termination_reason",
  "terminology": "TreatmentTerminationReason",
  "title": "Termination reason"
  },
  "targetedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were targeted by the systemic therapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "targeted_entities",
  "title": "Targeted neoplastic entities",
  "type": "array"
  }
  },
  "required": [
  "caseId",
  "period",
  "cycles",
  "intent"
  ],
  "title": "SystemicTherapyCreate",
  "type": "object"
  },
  "SystemicTherapyIntentChoices": {
  "enum": [
  "curative",
  "palliative"
  ],
  "title": "SystemicTherapyIntentChoices",
  "type": "string"
  },
  "Paginated_SystemicTherapySchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/SystemicTherapySchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[SystemicTherapySchema]",
  "type": "object"
  },
  "SystemicTherapyMedicationSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "drug": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Antineoplastic drug/medication administered to the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "drug",
  "terminology": "AntineoplasticAgent",
  "title": "Antineoplastic Drug"
  },
  "route": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Drug administration route",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "route",
  "terminology": "DosageRoute",
  "title": "Route"
  },
  "usedOfflabel": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates whether a medication was used off-label at the time of administration",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "used_offlabel",
  "title": "Off-label use"
  },
  "withinSoc": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates whether a medication was within standard of care (SOC) at the time of administration.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "within_soc",
  "title": "Within SOC"
  },
  "dosageMassConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage of the medication expressed in mass concentration (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_mass_concentration",
  "title": "Dosage - Mass concentration"
  },
  "dosageMass": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage of the medication expressed in a fixed mass (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_mass",
  "title": "Dosage - Fixed Mass"
  },
  "dosageVolume": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage of the medication expressed in a volume (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_volume",
  "title": "Dosage - Volume"
  },
  "dosageMassSurface": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage of the medication expressed in a mass per body surface area (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_mass_surface",
  "title": "Dosage - Mass per body surface"
  },
  "dosageRateMassConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage rate of the medication expressed in mass concentration (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_rate_mass_concentration",
  "title": "Dosage rate - Mass concentration"
  },
  "dosageRateMass": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage rate of the medication expressed in a fixed mass (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_rate_mass",
  "title": "Dosage rate - Fixed Mass"
  },
  "dosageRateVolume": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage rate of the medication expressed in a volume (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_rate_volume",
  "title": "Dosage rate - Volume"
  },
  "dosageRateMassSurface": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage rate of the medication expressed in a mass per body surface area (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_rate_mass_surface",
  "title": "Dosage rate - Mass per body surface"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "drug"
  ],
  "title": "SystemicTherapyMedication",
  "type": "object"
  },
  "SystemicTherapySchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who received the systemic therapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "period": {
  "$ref": "#/components/schemas/PeriodSchema",
  "description": "Clinically-relevant period during which the therapy was administered to the patient.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "period",
  "title": "Treatment period"
  },
  "cycles": {
  "description": "The total number of treatment cycles during the treatment period.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "cycles",
  "title": "Cycles",
  "type": "integer"
  },
  "intent": {
  "$ref": "#/components/schemas/SystemicTherapyIntentChoices",
  "description": "Treatment intent of the system therapy",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 30,
  "one_to_many": false,
  "orm_name": "intent",
  "title": "Intent"
  },
  "role": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates the role of this therapy in the overall treatment strategy.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "role",
  "terminology": "TreatmentCategory",
  "title": "Treatment Role"
  },
  "terminationReason": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Explanation for the premature or planned termination of the systemic therapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "termination_reason",
  "terminology": "TreatmentTerminationReason",
  "title": "Termination reason"
  },
  "targetedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were targeted by the systemic therapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "targeted_entities",
  "title": "Targeted neoplastic entities",
  "type": "array"
  },
  "medications": {
  "description": "Medications administered during the systemic therapy",
  "items": {
  "$ref": "#/components/schemas/SystemicTherapyMedicationSchema"
  },
  "title": "Medications",
  "type": "array"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "period",
  "cycles",
  "intent",
  "medications"
  ],
  "title": "SystemicTherapy",
  "type": "object"
  },
  "SystemicTherapyMedicationCreateSchema": {
  "properties": {
  "drug": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Antineoplastic drug/medication administered to the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "drug",
  "terminology": "AntineoplasticAgent",
  "title": "Antineoplastic Drug"
  },
  "route": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Drug administration route",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "route",
  "terminology": "DosageRoute",
  "title": "Route"
  },
  "usedOfflabel": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates whether a medication was used off-label at the time of administration",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "used_offlabel",
  "title": "Off-label use"
  },
  "withinSoc": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates whether a medication was within standard of care (SOC) at the time of administration.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "within_soc",
  "title": "Within SOC"
  },
  "dosageMassConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage of the medication expressed in mass concentration (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_mass_concentration",
  "title": "Dosage - Mass concentration"
  },
  "dosageMass": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage of the medication expressed in a fixed mass (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_mass",
  "title": "Dosage - Fixed Mass"
  },
  "dosageVolume": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage of the medication expressed in a volume (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_volume",
  "title": "Dosage - Volume"
  },
  "dosageMassSurface": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage of the medication expressed in a mass per body surface area (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_mass_surface",
  "title": "Dosage - Mass per body surface"
  },
  "dosageRateMassConcentration": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage rate of the medication expressed in mass concentration (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_rate_mass_concentration",
  "title": "Dosage rate - Mass concentration"
  },
  "dosageRateMass": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage rate of the medication expressed in a fixed mass (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_rate_mass",
  "title": "Dosage rate - Fixed Mass"
  },
  "dosageRateVolume": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage rate of the medication expressed in a volume (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_rate_volume",
  "title": "Dosage rate - Volume"
  },
  "dosageRateMassSurface": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Dosage rate of the medication expressed in a mass per body surface area (if revelant/appliccable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dosage_rate_mass_surface",
  "title": "Dosage rate - Mass per body surface"
  }
  },
  "required": [
  "drug"
  ],
  "title": "SystemicTherapyMedicationCreate",
  "type": "object"
  },
  "SurgeryCreate": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who received the surgical procedure",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date of the surgical procedure.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "procedure": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The specific surgical procedure that was performed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "procedure",
  "terminology": "SurgicalProcedure",
  "title": "Surgical procedure"
  },
  "intent": {
  "$ref": "#/components/schemas/SurgeryIntentChoices",
  "description": "Therapeutic intent of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 30,
  "one_to_many": false,
  "orm_name": "intent",
  "title": "Intent"
  },
  "bodysite": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Anatomical location of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "bodysite",
  "terminology": "CancerTopography",
  "title": "Anatomical location"
  },
  "bodysiteQualifier": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "General qualifier for the anatomical location of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "bodysite_qualifier",
  "terminology": "BodyLocationQualifier",
  "title": "Anatomical location qualifier"
  },
  "bodysiteLaterality": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Laterality for the anatomical location of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "bodysite_laterality",
  "terminology": "LateralityQualifier",
  "title": "Anatomical location laterality"
  },
  "outcome": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The outcome of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "outcome",
  "terminology": "ProcedureOutcome",
  "title": "Outcome"
  },
  "targetedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were targeted by the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "targeted_entities",
  "title": "Targeted neoplastic entities",
  "type": "array"
  }
  },
  "required": [
  "caseId",
  "date",
  "procedure",
  "intent"
  ],
  "title": "SurgeryCreate",
  "type": "object"
  },
  "SurgeryIntentChoices": {
  "enum": [
  "curative",
  "palliative"
  ],
  "title": "SurgeryIntentChoices",
  "type": "string"
  },
  "Paginated_Surgery_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/Surgery"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[Surgery]",
  "type": "object"
  },
  "Surgery": {
  "properties": {
  "description": {
  "description": "Human-readable description of the surgery",
  "title": "Description",
  "type": "string"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who received the surgical procedure",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date of the surgical procedure.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "procedure": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The specific surgical procedure that was performed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "procedure",
  "terminology": "SurgicalProcedure",
  "title": "Surgical procedure"
  },
  "intent": {
  "$ref": "#/components/schemas/SurgeryIntentChoices",
  "description": "Therapeutic intent of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 30,
  "one_to_many": false,
  "orm_name": "intent",
  "title": "Intent"
  },
  "bodysite": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Anatomical location of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "bodysite",
  "terminology": "CancerTopography",
  "title": "Anatomical location"
  },
  "bodysiteQualifier": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "General qualifier for the anatomical location of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "bodysite_qualifier",
  "terminology": "BodyLocationQualifier",
  "title": "Anatomical location qualifier"
  },
  "bodysiteLaterality": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Laterality for the anatomical location of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "bodysite_laterality",
  "terminology": "LateralityQualifier",
  "title": "Anatomical location laterality"
  },
  "outcome": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The outcome of the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "outcome",
  "terminology": "ProcedureOutcome",
  "title": "Outcome"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "targetedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were targeted by the surgery",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "targeted_entities",
  "title": "Targeted neoplastic entities",
  "type": "array"
  }
  },
  "required": [
  "description",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date",
  "procedure",
  "intent"
  ],
  "title": "Surgery",
  "type": "object"
  },
  "RadiotherapyCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who received the radiotherapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "period": {
  "$ref": "#/components/schemas/PeriodSchema",
  "description": "Clinically-relevant period during which the radiotherapy was administered to the patient.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "period",
  "title": "Treatment period"
  },
  "sessions": {
  "description": "The total number of radiotherapy sessions over the treatment period.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "sessions",
  "title": "Total sessions",
  "type": "integer"
  },
  "intent": {
  "$ref": "#/components/schemas/RadiotherapyIntentChoices",
  "description": "Treatment intent of the system therapy",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 30,
  "one_to_many": false,
  "orm_name": "intent",
  "title": "Intent"
  },
  "terminationReason": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Explanation for the premature or planned termination of the radiotherapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "termination_reason",
  "terminology": "TreatmentTerminationReason",
  "title": "Termination reason"
  },
  "targetedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were targeted by the radiotherapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "targeted_entities",
  "title": "Targeted neoplastic entities",
  "type": "array"
  }
  },
  "required": [
  "caseId",
  "period",
  "sessions",
  "intent"
  ],
  "title": "RadiotherapyCreate",
  "type": "object"
  },
  "RadiotherapyIntentChoices": {
  "enum": [
  "curative",
  "palliative"
  ],
  "title": "RadiotherapyIntentChoices",
  "type": "string"
  },
  "Paginated_RadiotherapySchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/RadiotherapySchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[RadiotherapySchema]",
  "type": "object"
  },
  "RadiotherapyDosageSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "fractions": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The total number of radiotherapy fractions delivered over the treatment period.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "fractions",
  "title": "Total fractions"
  },
  "dose": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Total radiation dose delivered over the full radiotherapy course",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dose",
  "title": "Total radiation dose"
  },
  "irradiatedVolume": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Anatomical location of the irradiated volume",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "irradiated_volume",
  "terminology": "RadiotherapyTreatmentLocation",
  "title": "Irradiated volume"
  },
  "irradiatedVolumeMorphology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Morphology of the anatomical location of the irradiated volume",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "irradiated_volume_morphology",
  "terminology": "RadiotherapyVolumeType",
  "title": "Irradiated volume morphology"
  },
  "irradiatedVolumeQualifier": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "General qualifier for the anatomical location of the irradiated volume",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "irradiated_volume_qualifier",
  "terminology": "RadiotherapyTreatmentLocationQualifier",
  "title": "Irradiated volume qualifier"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "irradiatedVolume"
  ],
  "title": "RadiotherapyDosage",
  "type": "object"
  },
  "RadiotherapySchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who received the radiotherapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "period": {
  "$ref": "#/components/schemas/PeriodSchema",
  "description": "Clinically-relevant period during which the radiotherapy was administered to the patient.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "period",
  "title": "Treatment period"
  },
  "sessions": {
  "description": "The total number of radiotherapy sessions over the treatment period.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "sessions",
  "title": "Total sessions",
  "type": "integer"
  },
  "intent": {
  "$ref": "#/components/schemas/RadiotherapyIntentChoices",
  "description": "Treatment intent of the system therapy",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 30,
  "one_to_many": false,
  "orm_name": "intent",
  "title": "Intent"
  },
  "terminationReason": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Explanation for the premature or planned termination of the radiotherapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "termination_reason",
  "terminology": "TreatmentTerminationReason",
  "title": "Termination reason"
  },
  "targetedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were targeted by the radiotherapy",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "targeted_entities",
  "title": "Targeted neoplastic entities",
  "type": "array"
  },
  "dosages": {
  "description": "Radiation doses administered during the radiotherapy",
  "items": {
  "$ref": "#/components/schemas/RadiotherapyDosageSchema"
  },
  "title": "Dosages",
  "type": "array"
  },
  "settings": {
  "description": "Settings of the radiotherapy irradiation procedure",
  "items": {
  "$ref": "#/components/schemas/RadiotherapySettingSchema"
  },
  "title": "Settings",
  "type": "array"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "period",
  "sessions",
  "intent",
  "dosages",
  "settings"
  ],
  "title": "Radiotherapy",
  "type": "object"
  },
  "RadiotherapySettingSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "modality": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Modality of external beam or brachytherapy radiation procedures",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "modality",
  "terminology": "RadiotherapyModality",
  "title": "Modality"
  },
  "technique": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Technique of external beam or brachytherapy radiation procedures",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "technique",
  "terminology": "RadiotherapyTechnique",
  "title": "Technique"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "modality",
  "technique"
  ],
  "title": "RadiotherapySetting",
  "type": "object"
  },
  "RadiotherapyDosageCreateSchema": {
  "properties": {
  "fractions": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The total number of radiotherapy fractions delivered over the treatment period.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "fractions",
  "title": "Total fractions"
  },
  "dose": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Total radiation dose delivered over the full radiotherapy course",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dose",
  "title": "Total radiation dose"
  },
  "irradiatedVolume": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Anatomical location of the irradiated volume",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "irradiated_volume",
  "terminology": "RadiotherapyTreatmentLocation",
  "title": "Irradiated volume"
  },
  "irradiatedVolumeMorphology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Morphology of the anatomical location of the irradiated volume",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "irradiated_volume_morphology",
  "terminology": "RadiotherapyVolumeType",
  "title": "Irradiated volume morphology"
  },
  "irradiatedVolumeQualifier": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "General qualifier for the anatomical location of the irradiated volume",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "irradiated_volume_qualifier",
  "terminology": "RadiotherapyTreatmentLocationQualifier",
  "title": "Irradiated volume qualifier"
  }
  },
  "required": [
  "irradiatedVolume"
  ],
  "title": "RadiotherapyDosageCreate",
  "type": "object"
  },
  "RadiotherapySettingCreateSchema": {
  "properties": {
  "modality": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Modality of external beam or brachytherapy radiation procedures",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "modality",
  "terminology": "RadiotherapyModality",
  "title": "Modality"
  },
  "technique": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Technique of external beam or brachytherapy radiation procedures",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "technique",
  "terminology": "RadiotherapyTechnique",
  "title": "Technique"
  }
  },
  "required": [
  "modality",
  "technique"
  ],
  "title": "RadiotherapySettingCreate",
  "type": "object"
  },
  "AdverseEventCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who had the adverse event being recorded",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the adverse event ocurred.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Event date",
  "type": "string"
  },
  "event": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Classification of the adverse event using CTCAE criteria",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "event",
  "terminology": "AdverseEventTerm",
  "title": "Adverse event"
  },
  "grade": {
  "description": "The grade associated with the severity of an adverse event, using CTCAE criteria.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "grade",
  "title": "Grade",
  "type": "integer"
  },
  "outcome": {
  "$ref": "#/components/schemas/AdverseEventOutcomeChoices",
  "description": "The date when the adverse event ended or returned to baseline.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 50,
  "one_to_many": false,
  "orm_name": "outcome",
  "title": "Date resolved"
  },
  "dateResolved": {
  "anyOf": [
  {
  "format": "date",
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "The date when the adverse event ended or returned to baseline.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_resolved",
  "title": "Date resolved"
  }
  },
  "required": [
  "caseId",
  "date",
  "event",
  "grade",
  "outcome"
  ],
  "title": "AdverseEventCreate",
  "type": "object"
  },
  "AdverseEventOutcomeChoices": {
  "enum": [
  "resolved",
  "resolved-with-sequelae",
  "recovering",
  "ongoing",
  "fatal",
  "unknown"
  ],
  "title": "AdverseEventOutcomeChoices",
  "type": "string"
  },
  "AdverseEventMitigationCategoryChoices": {
  "enum": [
  "adjustment",
  "pharmacological",
  "procedure"
  ],
  "title": "AdverseEventMitigationCategoryChoices",
  "type": "string"
  },
  "AdverseEventMitigationSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "category": {
  "$ref": "#/components/schemas/AdverseEventMitigationCategoryChoices",
  "description": "Type of mitigation employed",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 50,
  "one_to_many": false,
  "orm_name": "category",
  "title": "Mitigation category"
  },
  "adjustment": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the adjustment of systemic anti-cancer treatment used to mitigate the adverse event (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "adjustment",
  "terminology": "AdverseEventMitigationTreatmentAdjustment",
  "title": "Treatment Adjustment"
  },
  "drug": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the pharmacological treatment used to mitigate the adverse event (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "drug",
  "terminology": "AdverseEventMitigationDrug",
  "title": "Pharmacological drug"
  },
  "procedure": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the non-pharmacological procedure used to mitigate the adverse event (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "procedure",
  "terminology": "AdverseEventMitigationProcedure",
  "title": "Procedure"
  },
  "management": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Management type of the adverse event mitigation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "management",
  "terminology": "AdverseEventMitigationManagement",
  "title": "Management"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "category"
  ],
  "title": "AdverseEventMitigation",
  "type": "object"
  },
  "AdverseEventSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who had the adverse event being recorded",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the adverse event ocurred.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Event date",
  "type": "string"
  },
  "event": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Classification of the adverse event using CTCAE criteria",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "event",
  "terminology": "AdverseEventTerm",
  "title": "Adverse event"
  },
  "grade": {
  "description": "The grade associated with the severity of an adverse event, using CTCAE criteria.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "grade",
  "title": "Grade",
  "type": "integer"
  },
  "outcome": {
  "$ref": "#/components/schemas/AdverseEventOutcomeChoices",
  "description": "The date when the adverse event ended or returned to baseline.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 50,
  "one_to_many": false,
  "orm_name": "outcome",
  "title": "Date resolved"
  },
  "dateResolved": {
  "anyOf": [
  {
  "format": "date",
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "The date when the adverse event ended or returned to baseline.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date_resolved",
  "title": "Date resolved"
  },
  "suspectedCauses": {
  "description": "Suspected causes of the adverse event",
  "items": {
  "$ref": "#/components/schemas/AdverseEventSuspectedCauseSchema"
  },
  "title": "Suspectedcauses",
  "type": "array",
  "validation_aliases": {
  "choices": [
  "suspected_causes",
  "suspectedCauses"
  ]
  }
  },
  "mitigations": {
  "description": "Mitigations of the adverse event",
  "items": {
  "$ref": "#/components/schemas/AdverseEventMitigationSchema"
  },
  "title": "Mitigations",
  "type": "array"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "event",
  "grade",
  "outcome",
  "suspectedCauses",
  "mitigations"
  ],
  "title": "AdverseEvent",
  "type": "object"
  },
  "AdverseEventSuspectedCauseCausalityChoices": {
  "enum": [
  "unrelated",
  "unlikely-related",
  "possibly-related",
  "probably-related",
  "definitely-related",
  "conditionally-related"
  ],
  "title": "AdverseEventSuspectedCauseCausalityChoices",
  "type": "string"
  },
  "AdverseEventSuspectedCauseSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "systemicTherapyId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Systemic therapy suspected to be the cause of the adverse event",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "systemic_therapy",
  "title": "Suspected systemic therapy"
  },
  "medicationId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Systemic therapy medication suspected to be the cause of the adverse event",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "medication",
  "title": "Suspected systemic therapy medication"
  },
  "radiotherapyId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Radiotherapy suspected to be the cause of the adverse event",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "radiotherapy",
  "title": "Suspected radiotherapy"
  },
  "surgeryId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Surgery suspected to be the cause of the adverse event",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "surgery",
  "title": "Suspected surgery"
  },
  "causality": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/AdverseEventSuspectedCauseCausalityChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Assessment of the potential causality",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "causality",
  "title": "Causality"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description"
  ],
  "title": "AdverseEventSuspectedCause",
  "type": "object"
  },
  "Paginated_AdverseEventSchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/AdverseEventSchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[AdverseEventSchema]",
  "type": "object"
  },
  "AdverseEventMitigationCreateSchema": {
  "properties": {
  "category": {
  "$ref": "#/components/schemas/AdverseEventMitigationCategoryChoices",
  "description": "Type of mitigation employed",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 50,
  "one_to_many": false,
  "orm_name": "category",
  "title": "Mitigation category"
  },
  "adjustment": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the adjustment of systemic anti-cancer treatment used to mitigate the adverse event (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "adjustment",
  "terminology": "AdverseEventMitigationTreatmentAdjustment",
  "title": "Treatment Adjustment"
  },
  "drug": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the pharmacological treatment used to mitigate the adverse event (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "drug",
  "terminology": "AdverseEventMitigationDrug",
  "title": "Pharmacological drug"
  },
  "procedure": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the non-pharmacological procedure used to mitigate the adverse event (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "procedure",
  "terminology": "AdverseEventMitigationProcedure",
  "title": "Procedure"
  },
  "management": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Management type of the adverse event mitigation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "management",
  "terminology": "AdverseEventMitigationManagement",
  "title": "Management"
  }
  },
  "required": [
  "category"
  ],
  "title": "AdverseEventMitigationCreate",
  "type": "object"
  },
  "AdverseEventSuspectedCauseCreateSchema": {
  "properties": {
  "systemicTherapyId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Systemic therapy suspected to be the cause of the adverse event",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "systemic_therapy",
  "title": "Suspected systemic therapy"
  },
  "medicationId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Systemic therapy medication suspected to be the cause of the adverse event",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "medication",
  "title": "Suspected systemic therapy medication"
  },
  "radiotherapyId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Radiotherapy suspected to be the cause of the adverse event",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "radiotherapy",
  "title": "Suspected radiotherapy"
  },
  "surgeryId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Surgery suspected to be the cause of the adverse event",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "surgery",
  "title": "Suspected surgery"
  },
  "causality": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/AdverseEventSuspectedCauseCausalityChoices",
  "maxLength": 50
  },
  {
  "type": "null"
  }
  ],
  "description": "Assessment of the potential causality",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "causality",
  "title": "Causality"
  }
  },
  "title": "AdverseEventSuspectedCauseCreate",
  "type": "object"
  },
  "TreatmentResponseCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's treatment response is asseessed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date of the treatment response assessment",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "recist": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The classification of the treatment response according to RECIST",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "recist",
  "terminology": "CancerTreatmentResponse",
  "title": "RECIST"
  },
  "recistInterpreted": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates whether the RECIST value was interpreted or taken from the radiology report",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "recist_interpreted",
  "title": "RECIST Interpreted?"
  },
  "methodology": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Method used to assess and classify the treatment response",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "CancerTreatmentResponseObservationMethod",
  "title": "Assessment method"
  },
  "assessedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were assesed for treatment response",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "assessed_entities",
  "title": "Assessed neoplastic entities",
  "type": "array"
  },
  "assessedBodysites": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Anatomical location assessed to determine the treatment response",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "assessed_bodysites",
  "terminology": "ObservationBodySite",
  "title": "Assessed anatomical location"
  }
  },
  "required": [
  "caseId",
  "date",
  "recist",
  "methodology"
  ],
  "title": "TreatmentResponseCreate",
  "type": "object"
  },
  "Paginated_TreatmentResponseSchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/TreatmentResponseSchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[TreatmentResponseSchema]",
  "type": "object"
  },
  "TreatmentResponseSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's treatment response is asseessed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date of the treatment response assessment",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "recist": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "The classification of the treatment response according to RECIST",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "recist",
  "terminology": "CancerTreatmentResponse",
  "title": "RECIST"
  },
  "recistInterpreted": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates whether the RECIST value was interpreted or taken from the radiology report",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "recist_interpreted",
  "title": "RECIST Interpreted?"
  },
  "methodology": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Method used to assess and classify the treatment response",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "methodology",
  "terminology": "CancerTreatmentResponseObservationMethod",
  "title": "Assessment method"
  },
  "assessedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were assesed for treatment response",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "assessed_entities",
  "title": "Assessed neoplastic entities",
  "type": "array"
  },
  "assessedBodysites": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Anatomical location assessed to determine the treatment response",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "assessed_bodysites",
  "terminology": "ObservationBodySite",
  "title": "Assessed anatomical location"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "recist",
  "methodology"
  ],
  "title": "TreatmentResponse",
  "type": "object"
  },
  "MolecularTumorBoardCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient which was discussed at the tumor board",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Date at which the tumor board took place and/or when the board provided a recommendation.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Date",
  "type": "string"
  },
  "relatedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the tumor board.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "related_entities",
  "title": "Related neoplastic entities",
  "type": "array"
  },
  "recommendations": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Recommendation(s) provided by the board regarding the patient's care",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "recommendations",
  "terminology": "TumorBoardRecommendation",
  "title": "Recommendations"
  },
  "conductedMolecularComparison": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates whether a molecular comparison was conducted during the molecular tumor board",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "conducted_molecular_comparison",
  "title": "Conducted molecular comparison?"
  },
  "molecularComparisonMatchId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "The neoplastic entity that was matched during the molecular comparison",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "molecular_comparison_match",
  "title": "Molecular comparison match"
  },
  "conductedCupCharacterization": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether there was a cancer of unknown primary (CUP) characterization during the molecular tumor board.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "conducted_cup_characterization",
  "title": "Conducted CUP characterization?"
  },
  "characterizedCup": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the cancer of unknown primary (CUP) characterization was successful.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "characterized_cup",
  "title": "Successful CUP characterization?"
  },
  "reviewedReports": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "items": {
  "type": "string"
  },
  "many_to_many": false,
  "maxItems": 500,
  "one_to_many": false,
  "orm_name": "reviewed_reports",
  "title": "Reviewed Reports",
  "type": "array"
  },
  "category": {
  "const": "molecular",
  "default": "molecular",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "caseId",
  "date",
  "reviewedReports"
  ],
  "title": "MolecularTumorBoardCreate",
  "type": "object"
  },
  "UnspecifiedTumorBoardCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient which was discussed at the tumor board",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Date at which the tumor board took place and/or when the board provided a recommendation.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Date",
  "type": "string"
  },
  "relatedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the tumor board.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "related_entities",
  "title": "Related neoplastic entities",
  "type": "array"
  },
  "recommendations": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Recommendation(s) provided by the board regarding the patient's care",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "recommendations",
  "terminology": "TumorBoardRecommendation",
  "title": "Recommendations"
  },
  "category": {
  "const": "unspecified",
  "default": "unspecified",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "caseId",
  "date"
  ],
  "title": "UnspecifiedTumorBoardCreate",
  "type": "object"
  },
  "TumorBoardSpecialties": {
  "enum": [
  "unspecified",
  "molecular"
  ],
  "title": "TumorBoardSpecialties",
  "type": "string"
  },
  "AnyTumorBoard": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/UnspecifiedTumorBoardSchema"
  },
  {
  "$ref": "#/components/schemas/MolecularTumorBoardSchema"
  }
  ]
  },
  "MolecularTherapeuticRecommendationSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "expectedEffect": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the expected effect of the drug",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "expected_effect",
  "terminology": "ExpectedDrugAction",
  "title": "Expected medication action"
  },
  "clinicalTrial": {
  "anyOf": [
  {
  "maxLength": 15,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Clinical trial (NCT-Iddentifier) recommended by the board for enrollment",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "clinical_trial",
  "title": "Recommended clinical trial"
  },
  "offLabelUse": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the medication(s) recommended were off-label",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "off_label_use",
  "title": "Off-label use"
  },
  "withinSoc": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the medication(s) recommended were within standard of care",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "within_soc",
  "title": "Within SOC"
  },
  "drugs": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Drugs(s) being recommended",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "drugs",
  "terminology": "AntineoplasticAgent",
  "title": "Drug(s)"
  },
  "supportingGenomicVariantsIds": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Genomic variants that support the recommendation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "supporting_genomic_variants",
  "title": "Supporting genomic variants"
  },
  "supportingGenomicSignaturesIds": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Genomic signatures that support the recommendation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "supporting_genomic_signatures",
  "title": "Supporting genomic signatures"
  },
  "supportingTumorMarkersIds": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Tumor markers that support the recommendation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "supporting_tumor_markers",
  "title": "Supporting tumor markers"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description"
  ],
  "title": "MolecularTherapeuticRecommendation",
  "type": "object"
  },
  "MolecularTumorBoardSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient which was discussed at the tumor board",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Date at which the tumor board took place and/or when the board provided a recommendation.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Date",
  "type": "string"
  },
  "relatedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the tumor board.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "related_entities",
  "title": "Related neoplastic entities",
  "type": "array"
  },
  "recommendations": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Recommendation(s) provided by the board regarding the patient's care",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "recommendations",
  "terminology": "TumorBoardRecommendation",
  "title": "Recommendations"
  },
  "conductedMolecularComparison": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Indicates whether a molecular comparison was conducted during the molecular tumor board",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "conducted_molecular_comparison",
  "title": "Conducted molecular comparison?"
  },
  "molecularComparisonMatchId": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "The neoplastic entity that was matched during the molecular comparison",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "molecular_comparison_match",
  "title": "Molecular comparison match"
  },
  "conductedCupCharacterization": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether there was a cancer of unknown primary (CUP) characterization during the molecular tumor board.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "conducted_cup_characterization",
  "title": "Conducted CUP characterization?"
  },
  "characterizedCup": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the cancer of unknown primary (CUP) characterization was successful.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "characterized_cup",
  "title": "Successful CUP characterization?"
  },
  "reviewedReports": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "items": {
  "type": "string"
  },
  "many_to_many": false,
  "maxItems": 500,
  "one_to_many": false,
  "orm_name": "reviewed_reports",
  "title": "Reviewed Reports",
  "type": "array"
  },
  "category": {
  "const": "molecular",
  "default": "molecular",
  "title": "Category",
  "type": "string"
  },
  "therapeuticRecommendations": {
  "description": "Therapeutic recommendations of the molecular tumor board",
  "items": {
  "$ref": "#/components/schemas/MolecularTherapeuticRecommendationSchema"
  },
  "title": "Therapeuticrecommendations",
  "type": "array",
  "validation_aliases": {
  "choices": [
  "therapeutic_recommendations",
  "therapeuticRecommendations"
  ]
  }
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "reviewedReports",
  "therapeuticRecommendations"
  ],
  "title": "MolecularTumorBoard",
  "type": "object"
  },
  "Paginated_AnyTumorBoard_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/AnyTumorBoard"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[AnyTumorBoard]",
  "type": "object"
  },
  "UnspecifiedTumorBoardSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient which was discussed at the tumor board",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Date at which the tumor board took place and/or when the board provided a recommendation.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Date",
  "type": "string"
  },
  "relatedEntitiesIds": {
  "default": [],
  "description": "References to the neoplastic entities that were the focus of the tumor board.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "string"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "related_entities",
  "title": "Related neoplastic entities",
  "type": "array"
  },
  "recommendations": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Recommendation(s) provided by the board regarding the patient's care",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "recommendations",
  "terminology": "TumorBoardRecommendation",
  "title": "Recommendations"
  },
  "category": {
  "const": "unspecified",
  "default": "unspecified",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date"
  ],
  "title": "UnspecifiedTumorBoard",
  "type": "object"
  },
  "MolecularTherapeuticRecommendationCreateSchema": {
  "properties": {
  "expectedEffect": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the expected effect of the drug",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "expected_effect",
  "terminology": "ExpectedDrugAction",
  "title": "Expected medication action"
  },
  "clinicalTrial": {
  "anyOf": [
  {
  "maxLength": 15,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Clinical trial (NCT-Iddentifier) recommended by the board for enrollment",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "clinical_trial",
  "title": "Recommended clinical trial"
  },
  "offLabelUse": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the medication(s) recommended were off-label",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "off_label_use",
  "title": "Off-label use"
  },
  "withinSoc": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the medication(s) recommended were within standard of care",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "within_soc",
  "title": "Within SOC"
  },
  "drugs": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Drugs(s) being recommended",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "drugs",
  "terminology": "AntineoplasticAgent",
  "title": "Drug(s)"
  },
  "supportingGenomicVariantsIds": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Genomic variants that support the recommendation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "supporting_genomic_variants",
  "title": "Supporting genomic variants"
  },
  "supportingGenomicSignaturesIds": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Genomic signatures that support the recommendation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "supporting_genomic_signatures",
  "title": "Supporting genomic signatures"
  },
  "supportingTumorMarkersIds": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Tumor markers that support the recommendation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "supporting_tumor_markers",
  "title": "Supporting tumor markers"
  }
  },
  "title": "MolecularTherapeuticRecommendationCreate",
  "type": "object"
  },
  "PerformanceStatusCreate": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's performance status is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the performance score was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "ecogScore": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "ECOG Performance Status Score",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "ecog_score",
  "title": "ECOG Score"
  },
  "karnofskyScore": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "Karnofsky Performance Status Score",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "karnofsky_score",
  "title": "Karnofsky Score"
  }
  },
  "required": [
  "caseId",
  "date"
  ],
  "title": "PerformanceStatusCreate",
  "type": "object"
  },
  "Paginated_PerformanceStatus_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/PerformanceStatus"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[PerformanceStatus]",
  "type": "object"
  },
  "PerformanceStatus": {
  "properties": {
  "description": {
  "description": "Human-readable description of the performance status",
  "title": "Description",
  "type": "string"
  },
  "ecogInterpretation": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Official interpretation of the ECOG score"
  },
  "karnofskyInterpretation": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Official interpretation of the Karnofsky score"
  },
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's performance status is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the performance score was performed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "ecogScore": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "ECOG Performance Status Score",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "ecog_score",
  "title": "ECOG Score"
  },
  "karnofskyScore": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "Karnofsky Performance Status Score",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "karnofsky_score",
  "title": "Karnofsky Score"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  }
  },
  "required": [
  "description",
  "ecogInterpretation",
  "karnofskyInterpretation",
  "id",
  "createdAt",
  "updatedAt",
  "caseId",
  "date"
  ],
  "title": "PerformanceStatus",
  "type": "object"
  },
  "GenomicVariantAssessmentChoices": {
  "enum": [
  "present",
  "absent",
  "no-call",
  "indeterminate"
  ],
  "title": "GenomicVariantAssessmentChoices",
  "type": "string"
  },
  "GenomicVariantClinicalRelevanceChoices": {
  "enum": [
  "pathogenic",
  "likely_pathogenic",
  "uncertain_significance",
  "ambiguous",
  "likely_benign",
  "benign"
  ],
  "title": "GenomicVariantClinicalRelevanceChoices",
  "type": "string"
  },
  "GenomicVariantConfidenceChoices": {
  "enum": [
  "low",
  "high",
  "indeterminate"
  ],
  "title": "GenomicVariantConfidenceChoices",
  "type": "string"
  },
  "GenomicVariantCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who' genomic variant is described",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the genomic variant was detected and/or reported.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "genePanel": {
  "anyOf": [
  {
  "maxLength": 200,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Commercial or official name of the gene panel tested to identify the variant",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gene_panel",
  "title": "Gene panel"
  },
  "assessment": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/GenomicVariantAssessmentChoices",
  "maxLength": 15
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of whether the variant is present or absent in the analysis results. Relevant for genomic studies that report presence and absence of variants.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "assessment",
  "title": "Assessment"
  },
  "confidence": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/GenomicVariantConfidenceChoices",
  "maxLength": 15
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the confidence for a true positive variant call based e.g. calling thresholds or phred-scaled confidence scores.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "confidence",
  "title": "Confidence"
  },
  "analysisMethod": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Analysis method used to detect the variant",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "analysis_method",
  "terminology": "StructuralVariantAnalysisMethod",
  "title": "Analysis method"
  },
  "clinicalRelevance": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/GenomicVariantClinicalRelevanceChoices"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the clinical relevance or pathogenicity of the variant.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "clinical_relevance",
  "title": "Clinical relevance"
  },
  "cytogeneticLocation": {
  "anyOf": [
  {
  "maxLength": 60,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "The genetic address of the variant specifying the relevant chromosomal region.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "cytogenetic_location",
  "title": "Cytogenetic location"
  },
  "genomeAssemblyVersion": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The reference genome assembly versionused in this analysis.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "genome_assembly_version",
  "terminology": "ReferenceGenomeBuild",
  "title": "Genome assembly version"
  },
  "genomicRefseq": {
  "anyOf": [
  {
  "maxLength": 200,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "\n            Identifier the transcript reference sequence, which includes transcribed and non transcribed stretches. \n            Can be an NCBI's RefSeq ('NC_...' or 'NG...'), and LRG ('LRG...')",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "genomic_refseq",
  "title": "Genomic RefSeq"
  },
  "transcriptRefseq": {
  "anyOf": [
  {
  "maxLength": 200,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "\n            Identifier the transcript reference sequence, which includes transcribed and non transcribed stretches. \n            Can be an NCBI's RefSeq ('NM_...' or 'NG...'), Ensembl ('ENST...'), and LRG ('LRG...' plus 't1' to indicate transcript)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "transcript_refseq",
  "title": "Transcript RefSeq"
  },
  "codingHgvs": {
  "anyOf": [
  {
  "maxLength": 500,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Description of the coding (cDNA) sequence change using a valid HGVS-formatted expression, e.g. NM_005228.5:c.2369C>T",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "coding_hgvs",
  "title": "Coding DNA change expression (cHGVS)"
  },
  "proteinHgvs": {
  "anyOf": [
  {
  "maxLength": 500,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Description of the protein (aminoacid) sequence change using a valid HGVS-formatted expression, e.g. NP_000050.2:p.(Asn1836Lys)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "protein_hgvs",
  "title": "Protein/aminoacid change expression (pHGVS)"
  },
  "genomicHgvs": {
  "anyOf": [
  {
  "maxLength": 500,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Description of the genomic (gDNA) sequence change using a valid HGVS-formatted expression, e.g. NC_000016.9:g.2124200_2138612dup",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "genomic_hgvs",
  "title": "Genomic change expression (gHGVS)"
  },
  "dnaChangeType": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the DNA change type of the variant.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dna_change_type",
  "terminology": "DnaChangeType",
  "title": "Coding DNA change type"
  },
  "aminoacidChangeType": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the amino acid change type",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "aminoacid_change_type",
  "terminology": "AminoAcidChangeType",
  "title": "Aminoacid change type"
  },
  "molecularConsequence": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The calculated or observed effect of a variant on its downstream transcript and, if applicable, ensuing protein sequence.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "molecular_consequence",
  "terminology": "MolecularConsequence",
  "title": "Molecular consequence"
  },
  "copyNumber": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "Genomic structural variant copy number. It is a unit-less value. Note that a copy number of 1 can imply a deletion.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "copy_number",
  "title": "Copy number"
  },
  "alleleFrequency": {
  "anyOf": [
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "The relative frequency (value in range [0,1]) of the allele at a given locus in the sample.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "allele_frequency",
  "title": "Allele frequency"
  },
  "alleleDepth": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "Specifies the number of reads that identified the allele in question whether it consists of one or a small sequence of contiguous nucleotides.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "allele_depth",
  "title": "Allele depth (reads)"
  },
  "zygosity": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The observed level of occurrence of the variant in the set of chromosomes.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "zygosity",
  "terminology": "Zygosity",
  "title": "Zygosity"
  },
  "inheritance": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Variant inheritance origin (if known).",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "inheritance",
  "terminology": "VariantInheritance",
  "title": "Inheritance"
  },
  "coordinateSystem": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Genomic coordinate system used for identifying nucleotides or amino acids within a sequence.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "coordinate_system",
  "terminology": "GenomicCoordinateSystem",
  "title": "Coordinate system"
  },
  "exactGenomicCoordinates": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/RangeSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The exact integer-based genomic coordinates of the start and end of the variant region. \"High\" can be omitted for single nucleotide variants.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "exact_genomic_coordinates",
  "title": "Exact genomic coordinates"
  },
  "innerGenomicCoordinates": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/RangeSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The genomic coordinates of the narrowest genomic range in which the variant might reside. Used when the exact boundaries of the variant are not clear.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "inner_genomic_coordinates",
  "title": "Inner genomic coordinates"
  },
  "outerGenomicCoordinates": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/RangeSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The genomic coordinates of the widest genomic range in which the variant might reside. Used when the exact boundaries of the variant are not clear.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "outer_genomic_coordinates",
  "title": "Outer genomic coordinates"
  },
  "clinvar": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Accession number in the ClinVar variant database, given for cross-reference.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "clinvar",
  "title": "ClinVar accession number"
  },
  "genes": {
  "default": [],
  "description": "Gene(s) affected by this variant",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "genes",
  "terminology": "Gene",
  "title": "Gene(s)",
  "type": "array"
  },
  "chromosomes": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Chromosome(s) affected by this variant",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "chromosomes",
  "terminology": "ChromosomeIdentifier",
  "title": "Chromosome(s)"
  }
  },
  "required": [
  "caseId",
  "date"
  ],
  "title": "GenomicVariantCreate",
  "type": "object"
  },
  "RangeSchema": {
  "properties": {
  "start": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "number"
  }
  ],
  "title": "Start"
  },
  "end": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "title": "End"
  }
  },
  "required": [
  "start"
  ],
  "title": "Range",
  "type": "object"
  },
  "GenomicVariantSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who' genomic variant is described",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the genomic variant was detected and/or reported.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "genePanel": {
  "anyOf": [
  {
  "maxLength": 200,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Commercial or official name of the gene panel tested to identify the variant",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "gene_panel",
  "title": "Gene panel"
  },
  "assessment": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/GenomicVariantAssessmentChoices",
  "maxLength": 15
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of whether the variant is present or absent in the analysis results. Relevant for genomic studies that report presence and absence of variants.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "assessment",
  "title": "Assessment"
  },
  "confidence": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/GenomicVariantConfidenceChoices",
  "maxLength": 15
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the confidence for a true positive variant call based e.g. calling thresholds or phred-scaled confidence scores.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "confidence",
  "title": "Confidence"
  },
  "analysisMethod": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Analysis method used to detect the variant",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "analysis_method",
  "terminology": "StructuralVariantAnalysisMethod",
  "title": "Analysis method"
  },
  "clinicalRelevance": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/GenomicVariantClinicalRelevanceChoices"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the clinical relevance or pathogenicity of the variant.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "clinical_relevance",
  "title": "Clinical relevance"
  },
  "cytogeneticLocation": {
  "anyOf": [
  {
  "maxLength": 60,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "The genetic address of the variant specifying the relevant chromosomal region.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "cytogenetic_location",
  "title": "Cytogenetic location"
  },
  "genomeAssemblyVersion": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The reference genome assembly versionused in this analysis.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "genome_assembly_version",
  "terminology": "ReferenceGenomeBuild",
  "title": "Genome assembly version"
  },
  "genomicRefseq": {
  "anyOf": [
  {
  "maxLength": 200,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "\n            Identifier the transcript reference sequence, which includes transcribed and non transcribed stretches. \n            Can be an NCBI's RefSeq ('NC_...' or 'NG...'), and LRG ('LRG...')",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "genomic_refseq",
  "title": "Genomic RefSeq"
  },
  "transcriptRefseq": {
  "anyOf": [
  {
  "maxLength": 200,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "\n            Identifier the transcript reference sequence, which includes transcribed and non transcribed stretches. \n            Can be an NCBI's RefSeq ('NM_...' or 'NG...'), Ensembl ('ENST...'), and LRG ('LRG...' plus 't1' to indicate transcript)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "transcript_refseq",
  "title": "Transcript RefSeq"
  },
  "codingHgvs": {
  "anyOf": [
  {
  "maxLength": 500,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Description of the coding (cDNA) sequence change using a valid HGVS-formatted expression, e.g. NM_005228.5:c.2369C>T",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "coding_hgvs",
  "title": "Coding DNA change expression (cHGVS)"
  },
  "proteinHgvs": {
  "anyOf": [
  {
  "maxLength": 500,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Description of the protein (aminoacid) sequence change using a valid HGVS-formatted expression, e.g. NP_000050.2:p.(Asn1836Lys)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "protein_hgvs",
  "title": "Protein/aminoacid change expression (pHGVS)"
  },
  "genomicHgvs": {
  "anyOf": [
  {
  "maxLength": 500,
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Description of the genomic (gDNA) sequence change using a valid HGVS-formatted expression, e.g. NC_000016.9:g.2124200_2138612dup",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "genomic_hgvs",
  "title": "Genomic change expression (gHGVS)"
  },
  "dnaChangeType": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the DNA change type of the variant.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "dna_change_type",
  "terminology": "DnaChangeType",
  "title": "Coding DNA change type"
  },
  "aminoacidChangeType": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Classification of the amino acid change type",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "aminoacid_change_type",
  "terminology": "AminoAcidChangeType",
  "title": "Aminoacid change type"
  },
  "molecularConsequence": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The calculated or observed effect of a variant on its downstream transcript and, if applicable, ensuing protein sequence.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "molecular_consequence",
  "terminology": "MolecularConsequence",
  "title": "Molecular consequence"
  },
  "copyNumber": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "Genomic structural variant copy number. It is a unit-less value. Note that a copy number of 1 can imply a deletion.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "copy_number",
  "title": "Copy number"
  },
  "alleleFrequency": {
  "anyOf": [
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "The relative frequency (value in range [0,1]) of the allele at a given locus in the sample.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "allele_frequency",
  "title": "Allele frequency"
  },
  "alleleDepth": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "Specifies the number of reads that identified the allele in question whether it consists of one or a small sequence of contiguous nucleotides.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "allele_depth",
  "title": "Allele depth (reads)"
  },
  "zygosity": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The observed level of occurrence of the variant in the set of chromosomes.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "zygosity",
  "terminology": "Zygosity",
  "title": "Zygosity"
  },
  "inheritance": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Variant inheritance origin (if known).",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "inheritance",
  "terminology": "VariantInheritance",
  "title": "Inheritance"
  },
  "coordinateSystem": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Genomic coordinate system used for identifying nucleotides or amino acids within a sequence.",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "coordinate_system",
  "terminology": "GenomicCoordinateSystem",
  "title": "Coordinate system"
  },
  "exactGenomicCoordinates": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/RangeSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The exact integer-based genomic coordinates of the start and end of the variant region. \"High\" can be omitted for single nucleotide variants.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "exact_genomic_coordinates",
  "title": "Exact genomic coordinates"
  },
  "innerGenomicCoordinates": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/RangeSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The genomic coordinates of the narrowest genomic range in which the variant might reside. Used when the exact boundaries of the variant are not clear.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "inner_genomic_coordinates",
  "title": "Inner genomic coordinates"
  },
  "outerGenomicCoordinates": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/RangeSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "The genomic coordinates of the widest genomic range in which the variant might reside. Used when the exact boundaries of the variant are not clear.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "outer_genomic_coordinates",
  "title": "Outer genomic coordinates"
  },
  "clinvar": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "description": "Accession number in the ClinVar variant database, given for cross-reference.",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "clinvar",
  "title": "ClinVar accession number"
  },
  "genes": {
  "default": [],
  "description": "Gene(s) affected by this variant",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "genes",
  "terminology": "Gene",
  "title": "Gene(s)",
  "type": "array"
  },
  "chromosomes": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Chromosome(s) affected by this variant",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "chromosomes",
  "terminology": "ChromosomeIdentifier",
  "title": "Chromosome(s)"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date"
  ],
  "title": "GenomicVariant",
  "type": "object"
  },
  "Paginated_GenomicVariantSchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/GenomicVariantSchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[GenomicVariantSchema]",
  "type": "object"
  },
  "AneuploidScoreCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "description": "The actual aneuploid score (AS) value in total altered arms",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value",
  "type": "integer"
  },
  "category": {
  "const": "aneuploid_score",
  "default": "aneuploid_score",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "caseId",
  "date",
  "value"
  ],
  "title": "AneuploidScoreCreate",
  "type": "object"
  },
  "HomologousRecombinationDeficiencyCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "anyOf": [
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "Homologous recombination deficiency (HRD) score value",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value"
  },
  "interpretation": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/HomologousRecombinationDeficiencyInterpretationChoices"
  },
  {
  "type": "null"
  }
  ],
  "description": "Homologous recombination deficiency (HRD) interpretation",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "interpretation",
  "title": "Interpretation"
  },
  "category": {
  "const": "homologous_recombination_deficiency",
  "default": "homologous_recombination_deficiency",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "caseId",
  "date"
  ],
  "title": "HomologousRecombinationDeficiencyCreate",
  "type": "object"
  },
  "HomologousRecombinationDeficiencyInterpretationChoices": {
  "enum": [
  "positive",
  "negative",
  "indeterminate"
  ],
  "title": "HomologousRecombinationDeficiencyInterpretationChoices",
  "type": "string"
  },
  "LossOfHeterozygosityCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "description": "Loss of heterozygosity (LOH) as a percentage",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value",
  "type": "number"
  },
  "category": {
  "const": "loss_of_heterozygosity",
  "default": "loss_of_heterozygosity",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "caseId",
  "date",
  "value"
  ],
  "title": "LossOfHeterozygosityCreate",
  "type": "object"
  },
  "MicrosatelliteInstabilityCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Microsatellite instability (MSI) classification",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "terminology": "MicrosatelliteInstabilityState",
  "title": "Value"
  },
  "category": {
  "const": "microsatellite_instability",
  "default": "microsatellite_instability",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "caseId",
  "date",
  "value"
  ],
  "title": "MicrosatelliteInstabilityCreate",
  "type": "object"
  },
  "TumorMutationalBurdenCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "description": "The actual tumor mutational burden (TMB) value in mutations/Mb",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value",
  "type": "number"
  },
  "status": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMutationalBurdenStatusChoices"
  },
  {
  "type": "null"
  }
  ],
  "description": "Cclassification of the tumor mutational burden (TMB) status",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "status",
  "title": "Status"
  },
  "category": {
  "const": "tumor_mutational_burden",
  "default": "tumor_mutational_burden",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "caseId",
  "date",
  "value"
  ],
  "title": "TumorMutationalBurdenCreate",
  "type": "object"
  },
  "TumorMutationalBurdenStatusChoices": {
  "enum": [
  "low",
  "high",
  "intermediate",
  "indeterminate"
  ],
  "title": "TumorMutationalBurdenStatusChoices",
  "type": "string"
  },
  "TumorNeoantigenBurdenCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "description": "The actual tumor neoantigen burden (TNB) value in neoantigens/Mb",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value",
  "type": "number"
  },
  "category": {
  "const": "tumor_neoantigen_burden",
  "default": "tumor_neoantigen_burden",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "caseId",
  "date",
  "value"
  ],
  "title": "TumorNeoantigenBurdenCreate",
  "type": "object"
  },
  "GenomicSignatureTypes": {
  "enum": [
  "tumor_mutational_burden",
  "loss_of_heterozygosity",
  "microsatellite_instability",
  "homologous_recombination_deficiency",
  "tumor_neoantigen_burden",
  "aneuploid_score"
  ],
  "title": "GenomicSignatureTypes",
  "type": "string"
  },
  "AneuploidScoreSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "description": "The actual aneuploid score (AS) value in total altered arms",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value",
  "type": "integer"
  },
  "category": {
  "const": "aneuploid_score",
  "default": "aneuploid_score",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "value"
  ],
  "title": "AneuploidScore",
  "type": "object"
  },
  "AnyGenomicSignature": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MicrosatelliteInstabilitySchema"
  },
  {
  "$ref": "#/components/schemas/TumorMutationalBurdenSchema"
  },
  {
  "$ref": "#/components/schemas/LossOfHeterozygositySchema"
  },
  {
  "$ref": "#/components/schemas/HomologousRecombinationDeficiencySchema"
  },
  {
  "$ref": "#/components/schemas/TumorNeoantigenBurdenSchema"
  },
  {
  "$ref": "#/components/schemas/AneuploidScoreSchema"
  }
  ]
  },
  "HomologousRecombinationDeficiencySchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "anyOf": [
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "Homologous recombination deficiency (HRD) score value",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value"
  },
  "interpretation": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/HomologousRecombinationDeficiencyInterpretationChoices"
  },
  {
  "type": "null"
  }
  ],
  "description": "Homologous recombination deficiency (HRD) interpretation",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "interpretation",
  "title": "Interpretation"
  },
  "category": {
  "const": "homologous_recombination_deficiency",
  "default": "homologous_recombination_deficiency",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date"
  ],
  "title": "HomologousRecombinationDeficiency",
  "type": "object"
  },
  "LossOfHeterozygositySchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "description": "Loss of heterozygosity (LOH) as a percentage",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value",
  "type": "number"
  },
  "category": {
  "const": "loss_of_heterozygosity",
  "default": "loss_of_heterozygosity",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "value"
  ],
  "title": "LossOfHeterozygosity",
  "type": "object"
  },
  "MicrosatelliteInstabilitySchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Microsatellite instability (MSI) classification",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "terminology": "MicrosatelliteInstabilityState",
  "title": "Value"
  },
  "category": {
  "const": "microsatellite_instability",
  "default": "microsatellite_instability",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "value"
  ],
  "title": "MicrosatelliteInstability",
  "type": "object"
  },
  "Paginated_AnyGenomicSignature_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/AnyGenomicSignature"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[AnyGenomicSignature]",
  "type": "object"
  },
  "TumorMutationalBurdenSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "description": "The actual tumor mutational burden (TMB) value in mutations/Mb",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value",
  "type": "number"
  },
  "status": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/TumorMutationalBurdenStatusChoices"
  },
  {
  "type": "null"
  }
  ],
  "description": "Cclassification of the tumor mutational burden (TMB) status",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "status",
  "title": "Status"
  },
  "category": {
  "const": "tumor_mutational_burden",
  "default": "tumor_mutational_burden",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "value"
  ],
  "title": "TumorMutationalBurden",
  "type": "object"
  },
  "TumorNeoantigenBurdenSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's genomic signature was assessed.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "value": {
  "description": "The actual tumor neoantigen burden (TNB) value in neoantigens/Mb",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "value",
  "title": "Value",
  "type": "number"
  },
  "category": {
  "const": "tumor_neoantigen_burden",
  "default": "tumor_neoantigen_burden",
  "title": "Category",
  "type": "string"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "value"
  ],
  "title": "TumorNeoantigenBurden",
  "type": "object"
  },
  "LifestyleCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's lifetyle was assessed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "smokingStatus": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Frequency of alcohol consumption",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "smoking_status",
  "terminology": "SmokingStatus",
  "title": "Alcohol consumption"
  },
  "smokingPackyears": {
  "anyOf": [
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "Smoking pack-years (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "smoking_packyears",
  "title": "Smoking packyears"
  },
  "smokingQuited": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Estimated time since quitting smoking (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "smoking_quited",
  "title": "Time since quitted smoking"
  },
  "alcoholConsumption": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Frequency of alcohol consumption",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "alcohol_consumption",
  "terminology": "AlcoholConsumptionFrequency",
  "title": "Alcohol consumption"
  },
  "nightSleep": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Estimated average sleep time per night",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "night_sleep",
  "title": "Night sleep"
  },
  "recreationalDrugs": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Any recreational drug(s) used by the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "recreational_drugs",
  "terminology": "RecreationalDrug",
  "title": "Recreational drugs"
  },
  "exposures": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Environmental or occupational exposures to hazards or carcinogenic agents",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "exposures",
  "terminology": "ExposureAgent",
  "title": "Exposures"
  }
  },
  "required": [
  "caseId",
  "date"
  ],
  "title": "LifestyleCreate",
  "type": "object"
  },
  "LifestyleSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's lifestyle is assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's lifetyle was assessed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "smokingStatus": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Frequency of alcohol consumption",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "smoking_status",
  "terminology": "SmokingStatus",
  "title": "Alcohol consumption"
  },
  "smokingPackyears": {
  "anyOf": [
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "Smoking pack-years (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "smoking_packyears",
  "title": "Smoking packyears"
  },
  "smokingQuited": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Estimated time since quitting smoking (if applicable)",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "smoking_quited",
  "title": "Time since quitted smoking"
  },
  "alcoholConsumption": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Frequency of alcohol consumption",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "alcohol_consumption",
  "terminology": "AlcoholConsumptionFrequency",
  "title": "Alcohol consumption"
  },
  "nightSleep": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Estimated average sleep time per night",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "night_sleep",
  "title": "Night sleep"
  },
  "recreationalDrugs": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Any recreational drug(s) used by the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "recreational_drugs",
  "terminology": "RecreationalDrug",
  "title": "Recreational drugs"
  },
  "exposures": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Environmental or occupational exposures to hazards or carcinogenic agents",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "exposures",
  "terminology": "ExposureAgent",
  "title": "Exposures"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date"
  ],
  "title": "Lifestyle",
  "type": "object"
  },
  "Paginated_LifestyleSchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/LifestyleSchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[LifestyleSchema]",
  "type": "object"
  },
  "FamilyHistoryCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's family's history is being recorded",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's family history was assessed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "relationship": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Relationship to the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "relationship",
  "terminology": "FamilyMemberType",
  "title": "Relationship"
  },
  "hadCancer": {
  "description": "Whether the family member has a history of cancer",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "had_cancer",
  "title": "Had cancer",
  "type": "boolean"
  },
  "contributedToDeath": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the cancer contributed to the cause of death of the family member",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "contributed_to_death",
  "title": "Contributed to death"
  },
  "onsetAge": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "Age at which the family member's cancer manifested",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "onset_age",
  "title": "Onset age"
  },
  "topography": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Estimated or actual topography of the family member's cancer",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "topography",
  "terminology": "CancerTopography",
  "title": "Topography"
  },
  "morphology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Morphology of the family member's cancer (if known)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "morphology",
  "terminology": "CancerMorphology",
  "title": "Morphology"
  }
  },
  "required": [
  "caseId",
  "date",
  "relationship",
  "hadCancer"
  ],
  "title": "FamilyHistoryCreate",
  "type": "object"
  },
  "FamilyHistorySchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's family's history is being recorded",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's family history was assessed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "relationship": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Relationship to the patient",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "relationship",
  "terminology": "FamilyMemberType",
  "title": "Relationship"
  },
  "hadCancer": {
  "description": "Whether the family member has a history of cancer",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "had_cancer",
  "title": "Had cancer",
  "type": "boolean"
  },
  "contributedToDeath": {
  "anyOf": [
  {
  "type": "boolean"
  },
  {
  "type": "null"
  }
  ],
  "description": "Whether the cancer contributed to the cause of death of the family member",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "contributed_to_death",
  "title": "Contributed to death"
  },
  "onsetAge": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "Age at which the family member's cancer manifested",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "onset_age",
  "title": "Onset age"
  },
  "topography": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Estimated or actual topography of the family member's cancer",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "topography",
  "terminology": "CancerTopography",
  "title": "Topography"
  },
  "morphology": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Morphology of the family member's cancer (if known)",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "morphology",
  "terminology": "CancerMorphology",
  "title": "Morphology"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "relationship",
  "hadCancer"
  ],
  "title": "FamilyHistory",
  "type": "object"
  },
  "Paginated_FamilyHistorySchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/FamilyHistorySchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[FamilyHistorySchema]",
  "type": "object"
  },
  "ComorbiditiesAssessmentCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's comorbidities are being recorded",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's comorbidities were assessed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "indexConditionId": {
  "description": "The primary neoplastic entity against which comorbidities are assessed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "indexCondition",
  "title": "Index neoplastic entity",
  "type": "string"
  },
  "panel": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/ComorbiditiesAssessmentPanelChoices",
  "maxLength": 30
  },
  {
  "type": "null"
  }
  ],
  "description": "Comorbidities panel",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "panel",
  "title": "Panel"
  },
  "presentConditions": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Present comorbid conditions",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "present_conditions",
  "terminology": "ICD10Condition",
  "title": "Present comorbid conditions"
  },
  "absentConditions": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Absent comorbid conditions",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "absent_conditions",
  "terminology": "ICD10Condition",
  "title": "Absent comorbid conditions"
  }
  },
  "required": [
  "caseId",
  "date",
  "indexConditionId"
  ],
  "title": "ComorbiditiesAssessmentCreate",
  "type": "object"
  },
  "ComorbiditiesAssessmentPanelChoices": {
  "enum": [
  "Charlson",
  "Elixhauser",
  "NCI"
  ],
  "title": "ComorbiditiesAssessmentPanelChoices",
  "type": "string"
  },
  "ComorbiditiesAssessmentSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's comorbidities are being recorded",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the patient's comorbidities were assessed and recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "indexConditionId": {
  "description": "The primary neoplastic entity against which comorbidities are assessed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "indexCondition",
  "title": "Index neoplastic entity",
  "type": "string"
  },
  "panel": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/ComorbiditiesAssessmentPanelChoices",
  "maxLength": 30
  },
  {
  "type": "null"
  }
  ],
  "description": "Comorbidities panel",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "panel",
  "title": "Panel"
  },
  "presentConditions": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Present comorbid conditions",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "present_conditions",
  "terminology": "ICD10Condition",
  "title": "Present comorbid conditions"
  },
  "absentConditions": {
  "anyOf": [
  {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "default": [],
  "description": "Absent comorbid conditions",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "absent_conditions",
  "terminology": "ICD10Condition",
  "title": "Absent comorbid conditions"
  },
  "index": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "number"
  },
  {
  "type": "null"
  }
  ],
  "description": "Comorbidity score",
  "title": "Index"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "indexConditionId"
  ],
  "title": "ComorbiditiesAssessment",
  "type": "object"
  },
  "Paginated_ComorbiditiesAssessmentSchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/ComorbiditiesAssessmentSchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[ComorbiditiesAssessmentSchema]",
  "type": "object"
  },
  "ComorbiditiesPanelSchema": {
  "properties": {
  "name": {
  "description": "Comorbidity panel name",
  "title": "Name",
  "type": "string"
  },
  "categories": {
  "description": "Comorbidity panel categories",
  "items": {
  "$ref": "#/components/schemas/ComorbidityPanelCategory"
  },
  "title": "Categories",
  "type": "array"
  }
  },
  "required": [
  "name"
  ],
  "title": "ComorbiditiesPanel",
  "type": "object"
  },
  "ComorbidityPanelCategory": {
  "properties": {
  "label": {
  "title": "Label",
  "type": "string"
  },
  "default": {
  "$ref": "#/components/schemas/CodedConceptSchema",
  "description": "Default choice for category"
  },
  "conditions": {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "title": "Conditions",
  "type": "array"
  }
  },
  "required": [
  "label",
  "default",
  "conditions"
  ],
  "title": "ComorbidityPanelCategory",
  "type": "object"
  },
  "ComorbiditiesPanel": {
  "enum": [
  "Charlson",
  "Elixhauser",
  "NCI"
  ],
  "title": "ComorbiditiesPanel",
  "type": "string"
  },
  "VitalsCreateSchema": {
  "properties": {
  "caseId": {
  "description": "Indicates the case of the patient who's vitals are assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the vitals were recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "height": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Height of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "height",
  "title": "Height"
  },
  "weight": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Weight of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "weight",
  "title": "Weight"
  },
  "bloodPressureSystolic": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Systolic blood pressure of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "blood_pressure_systolic",
  "title": "Systolic blood pressure"
  },
  "bloodPressureDiastolic": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Diastolic blood pressure of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "blood_pressure_diastolic",
  "title": "Diastolic blood pressure"
  },
  "temperature": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Temperature of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "temperature",
  "title": "Temperature"
  }
  },
  "required": [
  "caseId",
  "date"
  ],
  "title": "VitalsCreate",
  "type": "object"
  },
  "Paginated_VitalsSchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/VitalsSchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[VitalsSchema]",
  "type": "object"
  },
  "VitalsSchema": {
  "properties": {
  "id": {
  "description": "",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "maxLength": 64,
  "one_to_many": false,
  "orm_name": "id",
  "title": "Id",
  "type": "string"
  },
  "createdAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_at",
  "title": "Created At",
  "type": "string"
  },
  "updatedAt": {
  "description": "",
  "examples": [],
  "expanded": null,
  "format": "date-time",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "updated_at",
  "title": "Updated At",
  "type": "string"
  },
  "createdById": {
  "anyOf": [
  {
  "type": "integer"
  },
  {
  "type": "null"
  }
  ],
  "description": "The user who created the original data",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "created_by",
  "title": "Created By"
  },
  "updatedByIds": {
  "default": [],
  "description": "The user(s) who updated the data since its creation",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "items": {
  "type": "integer"
  },
  "many_to_many": true,
  "one_to_many": false,
  "orm_name": "updated_by",
  "title": "Updated By",
  "type": "array"
  },
  "description": {
  "description": "Human-readable description",
  "title": "Description",
  "type": "string"
  },
  "caseId": {
  "description": "Indicates the case of the patient who's vitals are assesed",
  "examples": [],
  "expanded": null,
  "is_relation": true,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "case",
  "title": "Patient case",
  "type": "string"
  },
  "date": {
  "description": "Clinically-relevant date at which the vitals were recorded.",
  "examples": [],
  "expanded": null,
  "format": "date",
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "date",
  "title": "Assessment date",
  "type": "string"
  },
  "height": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Height of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "height",
  "title": "Height"
  },
  "weight": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Weight of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "weight",
  "title": "Weight"
  },
  "bloodPressureSystolic": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Systolic blood pressure of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "blood_pressure_systolic",
  "title": "Systolic blood pressure"
  },
  "bloodPressureDiastolic": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Diastolic blood pressure of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "blood_pressure_diastolic",
  "title": "Diastolic blood pressure"
  },
  "temperature": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/MeasureSchema"
  },
  {
  "type": "null"
  }
  ],
  "description": "Temperature of the patient",
  "examples": [],
  "expanded": null,
  "is_relation": false,
  "many_to_many": false,
  "one_to_many": false,
  "orm_name": "temperature",
  "title": "Temperature"
  },
  "body_mass_index": {
  "$ref": "#/components/schemas/MeasureSchema",
  "description": "Bodymass index of the patient"
  }
  },
  "required": [
  "id",
  "createdAt",
  "updatedAt",
  "description",
  "caseId",
  "date",
  "body_mass_index"
  ],
  "title": "Vitals",
  "type": "object"
  },
  "MeasureConversionSchema": {
  "properties": {
  "value": {
  "title": "Value",
  "type": "number"
  },
  "unit": {
  "title": "Unit",
  "type": "string"
  },
  "new_unit": {
  "title": "New Unit",
  "type": "string"
  }
  },
  "required": [
  "value",
  "unit",
  "new_unit"
  ],
  "title": "MeasureConversion",
  "type": "object"
  },
  "Paginated_CodedConceptSchema_": {
  "properties": {
  "count": {
  "title": "Count",
  "type": "integer"
  },
  "items": {
  "items": {
  "$ref": "#/components/schemas/CodedConceptSchema"
  },
  "title": "Items",
  "type": "array"
  }
  },
  "required": [
  "count",
  "items"
  ],
  "title": "Paginated[CodedConceptSchema]",
  "type": "object"
  }
  },
  "securitySchemes": {
  "JWTAuth": {
  "type": "http",
  "scheme": "bearer"
  }
  }
  },
  "servers": []
  }