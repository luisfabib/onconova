/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface PerformanceStatusFilters { 
    /**
     * None - Filter for entries without a value
     */
    'ecogInterpretation.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'ecogInterpretation.exists'?: boolean;
    /**
     * None - Filter for a matching concept code
     */
    ecogInterpretation?: string;
    /**
     * None - Filter for a mismatching concept code
     */
    'ecogInterpretation.not'?: string;
    /**
     * None - Filter for a matching set of concept codes
     */
    'ecogInterpretation.anyOf'?: Array<string>;
    /**
     * None - Filter for a mismmatching set of concept codes
     */
    'ecogInterpretation.not.anyOf'?: Array<string>;
    /**
     * None - Filter for all child concepts of a given concepts code
     */
    'ecogInterpretation.descendantsOf'?: string;
    /**
     * None - Filter for entries without a value
     */
    'karnofskyInterpretation.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'karnofskyInterpretation.exists'?: boolean;
    /**
     * None - Filter for a matching concept code
     */
    karnofskyInterpretation?: string;
    /**
     * None - Filter for a mismatching concept code
     */
    'karnofskyInterpretation.not'?: string;
    /**
     * None - Filter for a matching set of concept codes
     */
    'karnofskyInterpretation.anyOf'?: Array<string>;
    /**
     * None - Filter for a mismmatching set of concept codes
     */
    'karnofskyInterpretation.not.anyOf'?: Array<string>;
    /**
     * None - Filter for all child concepts of a given concepts code
     */
    'karnofskyInterpretation.descendantsOf'?: string;
    /**
     * Id - Filter for full text matches
     */
    id?: string;
    /**
     * Id - Filter for full text mismatches
     */
    'id.not'?: string;
    /**
     * Id - Filter for partial text matches
     */
    'id.contains'?: string;
    /**
     * Id - Filter for partial text mismatches
     */
    'id.not.contains'?: string;
    /**
     * Id - Filter for entries starting with the text
     */
    'id.beginsWith'?: string;
    /**
     * Id - Filter for entries not starting with the text
     */
    'id.not.beginsWith'?: string;
    /**
     * Id - Filter for entries ending with the text
     */
    'id.endsWith'?: string;
    /**
     * Id - Filter for entries not ending with the text
     */
    'id.not.endsWith'?: string;
    /**
     * Patient case - Filter for reference matches
     */
    caseId?: string;
    /**
     * Patient case - Filter for reference mismatches
     */
    'caseId.not'?: string;
    /**
     * Patient case - Filter for partial text matches
     */
    'caseId.contains'?: string;
    /**
     * Patient case - Filter for partial text mismatches
     */
    'caseId.not.contains'?: string;
    /**
     * Patient case - Filter for entries starting with the text
     */
    'caseId.beginsWith'?: string;
    /**
     * Patient case - Filter for entries not starting with the text
     */
    'caseId.not.beginsWith'?: string;
    /**
     * Patient case - Filter for entries ending with the text
     */
    'caseId.endsWith'?: string;
    /**
     * Patient case - Filter for entries not ending with the text
     */
    'caseId.not.endsWith'?: string;
    /**
     * Assessment date - Filter for entries with dates before the specified value
     */
    'date.before'?: string;
    /**
     * Assessment date - Filter for entries with dates after the specified value
     */
    'date.after'?: string;
    /**
     * Assessment date - Filter for entries with dates on or before the specified value
     */
    'date.onOrBefore'?: string;
    /**
     * Assessment date - Filter for entries with dates on or after the specified value
     */
    'date.onOrAfter'?: string;
    /**
     * Assessment date - Filter for entries with dates exactly matching the specified value
     */
    'date.on'?: string;
    /**
     * Assessment date - Filter for entries with dates not matching the specified value
     */
    'date.not.on'?: string;
    /**
     * Assessment date - Filter for entries with dates between two specified values (inclusive)
     */
    'date.between'?: Array<any>;
    /**
     * Assessment date - Filter for entries with dates not between two specified values (inclusive)
     */
    'date.not.between'?: Array<any>;
    /**
     * ECOG Score - Filter for entries without a value
     */
    'ecogScore.not.exists'?: boolean;
    /**
     * ECOG Score - Filter for entries with a value
     */
    'ecogScore.exists'?: boolean;
    /**
     * ECOG Score - Filter for entries with values less than the specified value
     */
    'ecogScore.lessThan'?: number;
    /**
     * ECOG Score - Filter for entries with values less than or equal to the specified value
     */
    'ecogScore.lessThanOrEqual'?: number;
    /**
     * ECOG Score - Filter for entries with values greater than the specified value
     */
    'ecogScore.greaterThan'?: number;
    /**
     * ECOG Score - Filter for entries with values greater than or equal to the specified value
     */
    'ecogScore.greaterThanOrEqual'?: number;
    /**
     * ECOG Score - Filter for entries with values exactly equal to the specified value
     */
    'ecogScore.equal'?: number;
    /**
     * ECOG Score - Filter for entries with values not equal to the specified value
     */
    'ecogScore.not.equal'?: number;
    /**
     * ECOG Score - Filter for entries with values between two specified values (inclusive)
     */
    'ecogScore.between'?: Array<any>;
    /**
     * ECOG Score - Filter for entries with values between two specified values (inclusive)
     */
    'ecogScore.not.between'?: Array<any>;
    /**
     * Karnofsky Score - Filter for entries without a value
     */
    'karnofskyScore.not.exists'?: boolean;
    /**
     * Karnofsky Score - Filter for entries with a value
     */
    'karnofskyScore.exists'?: boolean;
    /**
     * Karnofsky Score - Filter for entries with values less than the specified value
     */
    'karnofskyScore.lessThan'?: number;
    /**
     * Karnofsky Score - Filter for entries with values less than or equal to the specified value
     */
    'karnofskyScore.lessThanOrEqual'?: number;
    /**
     * Karnofsky Score - Filter for entries with values greater than the specified value
     */
    'karnofskyScore.greaterThan'?: number;
    /**
     * Karnofsky Score - Filter for entries with values greater than or equal to the specified value
     */
    'karnofskyScore.greaterThanOrEqual'?: number;
    /**
     * Karnofsky Score - Filter for entries with values exactly equal to the specified value
     */
    'karnofskyScore.equal'?: number;
    /**
     * Karnofsky Score - Filter for entries with values not equal to the specified value
     */
    'karnofskyScore.not.equal'?: number;
    /**
     * Karnofsky Score - Filter for entries with values between two specified values (inclusive)
     */
    'karnofskyScore.between'?: Array<any>;
    /**
     * Karnofsky Score - Filter for entries with values between two specified values (inclusive)
     */
    'karnofskyScore.not.between'?: Array<any>;
}

