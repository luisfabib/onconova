/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface TumorBoardFilters { 
    /**
     * Id - Filter for full text matches
     */
    id?: string;
    /**
     * Id - Filter for full text mismatches
     */
    'id.not'?: string;
    /**
     * Id - Filter for partial text matches
     */
    'id.contains'?: string;
    /**
     * Id - Filter for partial text mismatches
     */
    'id.not.contains'?: string;
    /**
     * Id - Filter for entries starting with the text
     */
    'id.beginsWith'?: string;
    /**
     * Id - Filter for entries not starting with the text
     */
    'id.not.beginsWith'?: string;
    /**
     * Id - Filter for entries ending with the text
     */
    'id.endsWith'?: string;
    /**
     * Id - Filter for entries not ending with the text
     */
    'id.not.endsWith'?: string;
    /**
     * Created At - Filter for entries with dates before the specified value
     */
    'createdAt.before'?: string;
    /**
     * Created At - Filter for entries with dates after the specified value
     */
    'createdAt.after'?: string;
    /**
     * Created At - Filter for entries with dates on or before the specified value
     */
    'createdAt.onOrBefore'?: string;
    /**
     * Created At - Filter for entries with dates on or after the specified value
     */
    'createdAt.onOrAfter'?: string;
    /**
     * Created At - Filter for entries with dates exactly matching the specified value
     */
    'createdAt.on'?: string;
    /**
     * Created At - Filter for entries with dates not matching the specified value
     */
    'createdAt.not.on'?: string;
    /**
     * Created At - Filter for entries with dates between two specified values (inclusive)
     */
    'createdAt.between'?: Array<any>;
    /**
     * Created At - Filter for entries with dates not between two specified values (inclusive)
     */
    'createdAt.not.between'?: Array<any>;
    /**
     * Updated At - Filter for entries with dates before the specified value
     */
    'updatedAt.before'?: string;
    /**
     * Updated At - Filter for entries with dates after the specified value
     */
    'updatedAt.after'?: string;
    /**
     * Updated At - Filter for entries with dates on or before the specified value
     */
    'updatedAt.onOrBefore'?: string;
    /**
     * Updated At - Filter for entries with dates on or after the specified value
     */
    'updatedAt.onOrAfter'?: string;
    /**
     * Updated At - Filter for entries with dates exactly matching the specified value
     */
    'updatedAt.on'?: string;
    /**
     * Updated At - Filter for entries with dates not matching the specified value
     */
    'updatedAt.not.on'?: string;
    /**
     * Updated At - Filter for entries with dates between two specified values (inclusive)
     */
    'updatedAt.between'?: Array<any>;
    /**
     * Updated At - Filter for entries with dates not between two specified values (inclusive)
     */
    'updatedAt.not.between'?: Array<any>;
    /**
     * Created By - Filter for entries without a value
     */
    'createdBy.not.exists'?: boolean;
    /**
     * Created By - Filter for entries with a value
     */
    'createdBy.exists'?: boolean;
    /**
     * None - Filter for entries with values less than the specified value
     */
    'updatedBys.id.lessThan'?: number;
    /**
     * None - Filter for entries with values less than or equal to the specified value
     */
    'updatedBys.id.lessThanOrEqual'?: number;
    /**
     * None - Filter for entries with values greater than the specified value
     */
    'updatedBys.id.greaterThan'?: number;
    /**
     * None - Filter for entries with values greater than or equal to the specified value
     */
    'updatedBys.id.greaterThanOrEqual'?: number;
    /**
     * None - Filter for entries with values exactly equal to the specified value
     */
    'updatedBys.id.equal'?: number;
    /**
     * None - Filter for entries with values not equal to the specified value
     */
    'updatedBys.id.not.equal'?: number;
    /**
     * None - Filter for entries with values between two specified values (inclusive)
     */
    'updatedBys.id.between'?: Array<any>;
    /**
     * None - Filter for entries with values between two specified values (inclusive)
     */
    'updatedBys.id.not.between'?: Array<any>;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.username'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.username.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.username.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.username.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.username.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.username.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.username.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.username.not.endsWith'?: string;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.email'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.email.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.email.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.email.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.email.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.email.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.email.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.email.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'updatedBys.firstName.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'updatedBys.firstName.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.firstName'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.firstName.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.firstName.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.firstName.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.firstName.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.firstName.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.firstName.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.firstName.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'updatedBys.lastName.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'updatedBys.lastName.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.lastName'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.lastName.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.lastName.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.lastName.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.lastName.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.lastName.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.lastName.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.lastName.not.endsWith'?: string;
    /**
     * Patient case - Filter for full text matches
     */
    caseId?: string;
    /**
     * Patient case - Filter for full text mismatches
     */
    'caseId.not'?: string;
    /**
     * Patient case - Filter for partial text matches
     */
    'caseId.contains'?: string;
    /**
     * Patient case - Filter for partial text mismatches
     */
    'caseId.not.contains'?: string;
    /**
     * Patient case - Filter for entries starting with the text
     */
    'caseId.beginsWith'?: string;
    /**
     * Patient case - Filter for entries not starting with the text
     */
    'caseId.not.beginsWith'?: string;
    /**
     * Patient case - Filter for entries ending with the text
     */
    'caseId.endsWith'?: string;
    /**
     * Patient case - Filter for entries not ending with the text
     */
    'caseId.not.endsWith'?: string;
    /**
     * Date - Filter for entries with dates before the specified value
     */
    'date.before'?: string;
    /**
     * Date - Filter for entries with dates after the specified value
     */
    'date.after'?: string;
    /**
     * Date - Filter for entries with dates on or before the specified value
     */
    'date.onOrBefore'?: string;
    /**
     * Date - Filter for entries with dates on or after the specified value
     */
    'date.onOrAfter'?: string;
    /**
     * Date - Filter for entries with dates exactly matching the specified value
     */
    'date.on'?: string;
    /**
     * Date - Filter for entries with dates not matching the specified value
     */
    'date.not.on'?: string;
    /**
     * Date - Filter for entries with dates between two specified values (inclusive)
     */
    'date.between'?: Array<any>;
    /**
     * Date - Filter for entries with dates not between two specified values (inclusive)
     */
    'date.not.between'?: Array<any>;
    /**
     * Related neoplastic entities - Filter for full text matches
     */
    relatedEntitiesIds?: string;
    /**
     * Related neoplastic entities - Filter for full text mismatches
     */
    'relatedEntitiesIds.not'?: string;
    /**
     * Related neoplastic entities - Filter for partial text matches
     */
    'relatedEntitiesIds.contains'?: string;
    /**
     * Related neoplastic entities - Filter for partial text mismatches
     */
    'relatedEntitiesIds.not.contains'?: string;
    /**
     * Related neoplastic entities - Filter for entries starting with the text
     */
    'relatedEntitiesIds.beginsWith'?: string;
    /**
     * Related neoplastic entities - Filter for entries not starting with the text
     */
    'relatedEntitiesIds.not.beginsWith'?: string;
    /**
     * Related neoplastic entities - Filter for entries ending with the text
     */
    'relatedEntitiesIds.endsWith'?: string;
    /**
     * Related neoplastic entities - Filter for entries not ending with the text
     */
    'relatedEntitiesIds.not.endsWith'?: string;
    /**
     * None - Filter for full text matches
     */
    'recommendations.code'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'recommendations.code.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'recommendations.code.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'recommendations.code.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'recommendations.code.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'recommendations.code.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'recommendations.code.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'recommendations.code.not.endsWith'?: string;
    /**
     * None - Filter for full text matches
     */
    'recommendations.system'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'recommendations.system.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'recommendations.system.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'recommendations.system.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'recommendations.system.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'recommendations.system.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'recommendations.system.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'recommendations.system.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'recommendations.display.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'recommendations.display.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'recommendations.display'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'recommendations.display.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'recommendations.display.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'recommendations.display.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'recommendations.display.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'recommendations.display.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'recommendations.display.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'recommendations.display.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'recommendations.version.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'recommendations.version.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'recommendations.version'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'recommendations.version.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'recommendations.version.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'recommendations.version.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'recommendations.version.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'recommendations.version.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'recommendations.version.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'recommendations.version.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'recommendations.synonyms.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'recommendations.synonyms.exists'?: boolean;
    /**
     * None - Filter for entries without a value
     */
    'recommendations.properties.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'recommendations.properties.exists'?: boolean;
}

