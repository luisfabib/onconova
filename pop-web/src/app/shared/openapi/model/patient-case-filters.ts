/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface PatientCaseFilters { 
    /**
     * Age - Filter for entries with values less than the specified value
     */
    'age.lessThan'?: number;
    /**
     * Age - Filter for entries with values less than or equal to the specified value
     */
    'age.lessThanOrEqual'?: number;
    /**
     * Age - Filter for entries with values greater than the specified value
     */
    'age.greaterThan'?: number;
    /**
     * Age - Filter for entries with values greater than or equal to the specified value
     */
    'age.greaterThanOrEqual'?: number;
    /**
     * Age - Filter for entries with values exactly equal to the specified value
     */
    'age.equal'?: number;
    /**
     * Age - Filter for entries with values not equal to the specified value
     */
    'age.not.equal'?: number;
    /**
     * Age - Filter for entries with values between two specified values (inclusive)
     */
    'age.between'?: Array<any>;
    /**
     * Age - Filter for entries with values between two specified values (inclusive)
     */
    'age.not.between'?: Array<any>;
    /**
     * Data completion rate - Filter for entries with values less than the specified value
     */
    'dataCompletionRate.lessThan'?: number;
    /**
     * Data completion rate - Filter for entries with values less than or equal to the specified value
     */
    'dataCompletionRate.lessThanOrEqual'?: number;
    /**
     * Data completion rate - Filter for entries with values greater than the specified value
     */
    'dataCompletionRate.greaterThan'?: number;
    /**
     * Data completion rate - Filter for entries with values greater than or equal to the specified value
     */
    'dataCompletionRate.greaterThanOrEqual'?: number;
    /**
     * Data completion rate - Filter for entries with values exactly equal to the specified value
     */
    'dataCompletionRate.equal'?: number;
    /**
     * Data completion rate - Filter for entries with values not equal to the specified value
     */
    'dataCompletionRate.not.equal'?: number;
    /**
     * Data completion rate - Filter for entries with values between two specified values (inclusive)
     */
    'dataCompletionRate.between'?: Array<any>;
    /**
     * Data completion rate - Filter for entries with values between two specified values (inclusive)
     */
    'dataCompletionRate.not.between'?: Array<any>;
    /**
     * Id - Filter for full text matches
     */
    id?: string;
    /**
     * Id - Filter for full text mismatches
     */
    'id.not'?: string;
    /**
     * Id - Filter for partial text matches
     */
    'id.contains'?: string;
    /**
     * Id - Filter for partial text mismatches
     */
    'id.not.contains'?: string;
    /**
     * Id - Filter for entries starting with the text
     */
    'id.beginsWith'?: string;
    /**
     * Id - Filter for entries not starting with the text
     */
    'id.not.beginsWith'?: string;
    /**
     * Id - Filter for entries ending with the text
     */
    'id.endsWith'?: string;
    /**
     * Id - Filter for entries not ending with the text
     */
    'id.not.endsWith'?: string;
    /**
     * Created At - Filter for entries with dates before the specified value
     */
    'createdAt.before'?: string;
    /**
     * Created At - Filter for entries with dates after the specified value
     */
    'createdAt.after'?: string;
    /**
     * Created At - Filter for entries with dates on or before the specified value
     */
    'createdAt.onOrBefore'?: string;
    /**
     * Created At - Filter for entries with dates on or after the specified value
     */
    'createdAt.onOrAfter'?: string;
    /**
     * Created At - Filter for entries with dates exactly matching the specified value
     */
    'createdAt.on'?: string;
    /**
     * Created At - Filter for entries with dates not matching the specified value
     */
    'createdAt.not.on'?: string;
    /**
     * Created At - Filter for entries with dates between two specified values (inclusive)
     */
    'createdAt.between'?: Array<any>;
    /**
     * Created At - Filter for entries with dates not between two specified values (inclusive)
     */
    'createdAt.not.between'?: Array<any>;
    /**
     * Updated At - Filter for entries with dates before the specified value
     */
    'updatedAt.before'?: string;
    /**
     * Updated At - Filter for entries with dates after the specified value
     */
    'updatedAt.after'?: string;
    /**
     * Updated At - Filter for entries with dates on or before the specified value
     */
    'updatedAt.onOrBefore'?: string;
    /**
     * Updated At - Filter for entries with dates on or after the specified value
     */
    'updatedAt.onOrAfter'?: string;
    /**
     * Updated At - Filter for entries with dates exactly matching the specified value
     */
    'updatedAt.on'?: string;
    /**
     * Updated At - Filter for entries with dates not matching the specified value
     */
    'updatedAt.not.on'?: string;
    /**
     * Updated At - Filter for entries with dates between two specified values (inclusive)
     */
    'updatedAt.between'?: Array<any>;
    /**
     * Updated At - Filter for entries with dates not between two specified values (inclusive)
     */
    'updatedAt.not.between'?: Array<any>;
    /**
     * Created By - Filter for entries without a value
     */
    'createdBy.not.exists'?: boolean;
    /**
     * Created By - Filter for entries with a value
     */
    'createdBy.exists'?: boolean;
    /**
     * Pseudoidentifier - Filter for full text matches
     */
    pseudoidentifier?: string;
    /**
     * Pseudoidentifier - Filter for full text mismatches
     */
    'pseudoidentifier.not'?: string;
    /**
     * Pseudoidentifier - Filter for partial text matches
     */
    'pseudoidentifier.contains'?: string;
    /**
     * Pseudoidentifier - Filter for partial text mismatches
     */
    'pseudoidentifier.not.contains'?: string;
    /**
     * Pseudoidentifier - Filter for entries starting with the text
     */
    'pseudoidentifier.beginsWith'?: string;
    /**
     * Pseudoidentifier - Filter for entries not starting with the text
     */
    'pseudoidentifier.not.beginsWith'?: string;
    /**
     * Pseudoidentifier - Filter for entries ending with the text
     */
    'pseudoidentifier.endsWith'?: string;
    /**
     * Pseudoidentifier - Filter for entries not ending with the text
     */
    'pseudoidentifier.not.endsWith'?: string;
    /**
     * Gender - Filter for a matching concept code
     */
    gender?: string;
    /**
     * Gender - Filter for a mismatching concept code
     */
    'gender.not'?: string;
    /**
     * Gender - Filter for a matching set of concept codes
     */
    'gender.anyOf'?: Array<string>;
    /**
     * Gender - Filter for a mismmatching set of concept codes
     */
    'gender.not.anyOf'?: Array<string>;
    /**
     * Gender - Filter for all child concepts of a given concepts code
     */
    'gender.descendantsOf'?: string;
    /**
     * Race - Filter for entries without a value
     */
    'race.not.exists'?: boolean;
    /**
     * Race - Filter for entries with a value
     */
    'race.exists'?: boolean;
    /**
     * Race - Filter for a matching concept code
     */
    race?: string;
    /**
     * Race - Filter for a mismatching concept code
     */
    'race.not'?: string;
    /**
     * Race - Filter for a matching set of concept codes
     */
    'race.anyOf'?: Array<string>;
    /**
     * Race - Filter for a mismmatching set of concept codes
     */
    'race.not.anyOf'?: Array<string>;
    /**
     * Race - Filter for all child concepts of a given concepts code
     */
    'race.descendantsOf'?: string;
    /**
     * Birth sex - Filter for entries without a value
     */
    'sexAtBirth.not.exists'?: boolean;
    /**
     * Birth sex - Filter for entries with a value
     */
    'sexAtBirth.exists'?: boolean;
    /**
     * Birth sex - Filter for a matching concept code
     */
    sexAtBirth?: string;
    /**
     * Birth sex - Filter for a mismatching concept code
     */
    'sexAtBirth.not'?: string;
    /**
     * Birth sex - Filter for a matching set of concept codes
     */
    'sexAtBirth.anyOf'?: Array<string>;
    /**
     * Birth sex - Filter for a mismmatching set of concept codes
     */
    'sexAtBirth.not.anyOf'?: Array<string>;
    /**
     * Birth sex - Filter for all child concepts of a given concepts code
     */
    'sexAtBirth.descendantsOf'?: string;
    /**
     * Gender identity - Filter for entries without a value
     */
    'genderIdentity.not.exists'?: boolean;
    /**
     * Gender identity - Filter for entries with a value
     */
    'genderIdentity.exists'?: boolean;
    /**
     * Gender identity - Filter for a matching concept code
     */
    genderIdentity?: string;
    /**
     * Gender identity - Filter for a mismatching concept code
     */
    'genderIdentity.not'?: string;
    /**
     * Gender identity - Filter for a matching set of concept codes
     */
    'genderIdentity.anyOf'?: Array<string>;
    /**
     * Gender identity - Filter for a mismmatching set of concept codes
     */
    'genderIdentity.not.anyOf'?: Array<string>;
    /**
     * Gender identity - Filter for all child concepts of a given concepts code
     */
    'genderIdentity.descendantsOf'?: string;
    /**
     * Date of birth - Filter for entries with dates before the specified value
     */
    'dateOfBirth.before'?: string;
    /**
     * Date of birth - Filter for entries with dates after the specified value
     */
    'dateOfBirth.after'?: string;
    /**
     * Date of birth - Filter for entries with dates on or before the specified value
     */
    'dateOfBirth.onOrBefore'?: string;
    /**
     * Date of birth - Filter for entries with dates on or after the specified value
     */
    'dateOfBirth.onOrAfter'?: string;
    /**
     * Date of birth - Filter for entries with dates exactly matching the specified value
     */
    'dateOfBirth.on'?: string;
    /**
     * Date of birth - Filter for entries with dates not matching the specified value
     */
    'dateOfBirth.not.on'?: string;
    /**
     * Date of birth - Filter for entries with dates between two specified values (inclusive)
     */
    'dateOfBirth.between'?: Array<any>;
    /**
     * Date of birth - Filter for entries with dates not between two specified values (inclusive)
     */
    'dateOfBirth.not.between'?: Array<any>;
    /**
     * Is deceased - (\'Filter for yes/no statement\',)
     */
    isDeceased?: boolean;
    /**
     * Date of death - Filter for entries without a value
     */
    'dateOfDeath.not.exists'?: boolean;
    /**
     * Date of death - Filter for entries with a value
     */
    'dateOfDeath.exists'?: boolean;
    /**
     * Date of death - Filter for entries with dates before the specified value
     */
    'dateOfDeath.before'?: string;
    /**
     * Date of death - Filter for entries with dates after the specified value
     */
    'dateOfDeath.after'?: string;
    /**
     * Date of death - Filter for entries with dates on or before the specified value
     */
    'dateOfDeath.onOrBefore'?: string;
    /**
     * Date of death - Filter for entries with dates on or after the specified value
     */
    'dateOfDeath.onOrAfter'?: string;
    /**
     * Date of death - Filter for entries with dates exactly matching the specified value
     */
    'dateOfDeath.on'?: string;
    /**
     * Date of death - Filter for entries with dates not matching the specified value
     */
    'dateOfDeath.not.on'?: string;
    /**
     * Date of death - Filter for entries with dates between two specified values (inclusive)
     */
    'dateOfDeath.between'?: Array<any>;
    /**
     * Date of death - Filter for entries with dates not between two specified values (inclusive)
     */
    'dateOfDeath.not.between'?: Array<any>;
    /**
     * Cause of death - Filter for entries without a value
     */
    'causeOfDeath.not.exists'?: boolean;
    /**
     * Cause of death - Filter for entries with a value
     */
    'causeOfDeath.exists'?: boolean;
    /**
     * Cause of death - Filter for a matching concept code
     */
    causeOfDeath?: string;
    /**
     * Cause of death - Filter for a mismatching concept code
     */
    'causeOfDeath.not'?: string;
    /**
     * Cause of death - Filter for a matching set of concept codes
     */
    'causeOfDeath.anyOf'?: Array<string>;
    /**
     * Cause of death - Filter for a mismmatching set of concept codes
     */
    'causeOfDeath.not.anyOf'?: Array<string>;
    /**
     * Cause of death - Filter for all child concepts of a given concepts code
     */
    'causeOfDeath.descendantsOf'?: string;
    /**
     * None - Filter for entries with values less than the specified value
     */
    'updatedBys.id.lessThan'?: number;
    /**
     * None - Filter for entries with values less than or equal to the specified value
     */
    'updatedBys.id.lessThanOrEqual'?: number;
    /**
     * None - Filter for entries with values greater than the specified value
     */
    'updatedBys.id.greaterThan'?: number;
    /**
     * None - Filter for entries with values greater than or equal to the specified value
     */
    'updatedBys.id.greaterThanOrEqual'?: number;
    /**
     * None - Filter for entries with values exactly equal to the specified value
     */
    'updatedBys.id.equal'?: number;
    /**
     * None - Filter for entries with values not equal to the specified value
     */
    'updatedBys.id.not.equal'?: number;
    /**
     * None - Filter for entries with values between two specified values (inclusive)
     */
    'updatedBys.id.between'?: Array<any>;
    /**
     * None - Filter for entries with values between two specified values (inclusive)
     */
    'updatedBys.id.not.between'?: Array<any>;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.username'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.username.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.username.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.username.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.username.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.username.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.username.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.username.not.endsWith'?: string;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.email'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.email.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.email.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.email.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.email.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.email.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.email.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.email.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'updatedBys.firstName.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'updatedBys.firstName.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.firstName'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.firstName.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.firstName.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.firstName.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.firstName.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.firstName.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.firstName.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.firstName.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'updatedBys.lastName.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'updatedBys.lastName.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.lastName'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.lastName.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.lastName.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.lastName.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.lastName.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.lastName.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.lastName.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.lastName.not.endsWith'?: string;
    manager?: string | null;
}

