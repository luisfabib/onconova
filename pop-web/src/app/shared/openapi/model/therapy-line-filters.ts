/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface TherapyLineFilters { 
    /**
     * Id - Filter for full text matches
     */
    id?: string;
    /**
     * Id - Filter for full text mismatches
     */
    'id.not'?: string;
    /**
     * Id - Filter for partial text matches
     */
    'id.contains'?: string;
    /**
     * Id - Filter for partial text mismatches
     */
    'id.not.contains'?: string;
    /**
     * Id - Filter for entries starting with the text
     */
    'id.beginsWith'?: string;
    /**
     * Id - Filter for entries not starting with the text
     */
    'id.not.beginsWith'?: string;
    /**
     * Id - Filter for entries ending with the text
     */
    'id.endsWith'?: string;
    /**
     * Id - Filter for entries not ending with the text
     */
    'id.not.endsWith'?: string;
    /**
     * Patient case - Filter for reference matches
     */
    caseId?: string;
    /**
     * Patient case - Filter for reference mismatches
     */
    'caseId.not'?: string;
    /**
     * Patient case - Filter for partial text matches
     */
    'caseId.contains'?: string;
    /**
     * Patient case - Filter for partial text mismatches
     */
    'caseId.not.contains'?: string;
    /**
     * Patient case - Filter for entries starting with the text
     */
    'caseId.beginsWith'?: string;
    /**
     * Patient case - Filter for entries not starting with the text
     */
    'caseId.not.beginsWith'?: string;
    /**
     * Patient case - Filter for entries ending with the text
     */
    'caseId.endsWith'?: string;
    /**
     * Patient case - Filter for entries not ending with the text
     */
    'caseId.not.endsWith'?: string;
    /**
     * Line ordinal number - Filter for entries with values less than the specified value
     */
    'ordinal.lessThan'?: number;
    /**
     * Line ordinal number - Filter for entries with values less than or equal to the specified value
     */
    'ordinal.lessThanOrEqual'?: number;
    /**
     * Line ordinal number - Filter for entries with values greater than the specified value
     */
    'ordinal.greaterThan'?: number;
    /**
     * Line ordinal number - Filter for entries with values greater than or equal to the specified value
     */
    'ordinal.greaterThanOrEqual'?: number;
    /**
     * Line ordinal number - Filter for entries with values exactly equal to the specified value
     */
    'ordinal.equal'?: number;
    /**
     * Line ordinal number - Filter for entries with values not equal to the specified value
     */
    'ordinal.not.equal'?: number;
    /**
     * Line ordinal number - Filter for entries with values between two specified values (inclusive)
     */
    'ordinal.between'?: Array<any>;
    /**
     * Line ordinal number - Filter for entries with values between two specified values (inclusive)
     */
    'ordinal.not.between'?: Array<any>;
    intent?: TherapyLineFilters.IntentEnum;
    'intent.not'?: TherapyLineFilters.IntentNotEnum;
    /**
     * Intent - (\'Filter for excluding a subset of value choices\',)
     */
    'intent.anyOf'?: Array<TherapyLineFilters.IntentAnyOfEnum>;
    /**
     * Begin of progression - Filter for entries without a value
     */
    'progressionDate.not.exists'?: boolean;
    /**
     * Begin of progression - Filter for entries with a value
     */
    'progressionDate.exists'?: boolean;
    /**
     * Begin of progression - Filter for entries with dates before the specified value
     */
    'progressionDate.before'?: string;
    /**
     * Begin of progression - Filter for entries with dates after the specified value
     */
    'progressionDate.after'?: string;
    /**
     * Begin of progression - Filter for entries with dates on or before the specified value
     */
    'progressionDate.onOrBefore'?: string;
    /**
     * Begin of progression - Filter for entries with dates on or after the specified value
     */
    'progressionDate.onOrAfter'?: string;
    /**
     * Begin of progression - Filter for entries with dates exactly matching the specified value
     */
    'progressionDate.on'?: string;
    /**
     * Begin of progression - Filter for entries with dates not matching the specified value
     */
    'progressionDate.not.on'?: string;
    /**
     * Begin of progression - Filter for entries with dates between two specified values (inclusive)
     */
    'progressionDate.between'?: Array<any>;
    /**
     * Begin of progression - Filter for entries with dates not between two specified values (inclusive)
     */
    'progressionDate.not.between'?: Array<any>;
    /**
     * Period - Filter for entries without a value
     */
    'period.not.exists'?: boolean;
    /**
     * Period - Filter for entries with a value
     */
    'period.exists'?: boolean;
    /**
     * Period - Filter for entries overlapping with the time period
     */
    'period.overlaps'?: Array<any>;
    /**
     * Period - Filter for entries not overlapping with the time period
     */
    'period.not.overlaps'?: Array<any>;
    /**
     * Period - Filter for entries containing the time period
     */
    'period.contains'?: Array<any>;
    /**
     * Period - Filter for entries not containing the time period
     */
    'period.not.contains'?: Array<any>;
    /**
     * Period - Filter for entries whose period are contined by the time period
     */
    'period.containedBy'?: Array<any>;
    /**
     * Period - Filter for entries whose period are not contined by the time period
     */
    'period.not.containedBy'?: Array<any>;
    /**
     * Label - Filter for full text matches
     */
    label?: string;
    /**
     * Label - Filter for full text mismatches
     */
    'label.not'?: string;
    /**
     * Label - Filter for partial text matches
     */
    'label.contains'?: string;
    /**
     * Label - Filter for partial text mismatches
     */
    'label.not.contains'?: string;
    /**
     * Label - Filter for entries starting with the text
     */
    'label.beginsWith'?: string;
    /**
     * Label - Filter for entries not starting with the text
     */
    'label.not.beginsWith'?: string;
    /**
     * Label - Filter for entries ending with the text
     */
    'label.endsWith'?: string;
    /**
     * Label - Filter for entries not ending with the text
     */
    'label.not.endsWith'?: string;
    /**
     * Progression-free survival in months - Filter for entries without a value
     */
    'progressionFreeSurvival.not.exists'?: boolean;
    /**
     * Progression-free survival in months - Filter for entries with a value
     */
    'progressionFreeSurvival.exists'?: boolean;
    /**
     * Progression-free survival in months - Filter for entries with values less than the specified value
     */
    'progressionFreeSurvival.lessThan'?: number;
    /**
     * Progression-free survival in months - Filter for entries with values less than or equal to the specified value
     */
    'progressionFreeSurvival.lessThanOrEqual'?: number;
    /**
     * Progression-free survival in months - Filter for entries with values greater than the specified value
     */
    'progressionFreeSurvival.greaterThan'?: number;
    /**
     * Progression-free survival in months - Filter for entries with values greater than or equal to the specified value
     */
    'progressionFreeSurvival.greaterThanOrEqual'?: number;
    /**
     * Progression-free survival in months - Filter for entries with values exactly equal to the specified value
     */
    'progressionFreeSurvival.equal'?: number;
    /**
     * Progression-free survival in months - Filter for entries with values not equal to the specified value
     */
    'progressionFreeSurvival.not.equal'?: number;
    /**
     * Progression-free survival in months - Filter for entries with values between two specified values (inclusive)
     */
    'progressionFreeSurvival.between'?: Array<any>;
    /**
     * Progression-free survival in months - Filter for entries with values between two specified values (inclusive)
     */
    'progressionFreeSurvival.not.between'?: Array<any>;
}
export namespace TherapyLineFilters {
    export type IntentEnum = 'curative' | 'palliative';
    export const IntentEnum = {
        Curative: 'curative' as IntentEnum,
        Palliative: 'palliative' as IntentEnum
    };
    export type IntentNotEnum = 'curative' | 'palliative';
    export const IntentNotEnum = {
        Curative: 'curative' as IntentNotEnum,
        Palliative: 'palliative' as IntentNotEnum
    };
    export type IntentAnyOfEnum = 'curative' | 'palliative';
    export const IntentAnyOfEnum = {
        Curative: 'curative' as IntentAnyOfEnum,
        Palliative: 'palliative' as IntentAnyOfEnum
    };
}


