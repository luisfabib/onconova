/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ComorbiditiesAssessment } from './comorbidities-assessment';
import { RiskAssessment } from './risk-assessment';
import { SystemicTherapy } from './systemic-therapy';
import { User } from './user';
import { CodedConcept } from './coded-concept';
import { PatientCaseBundleGenomicSignaturesInner } from './patient-case-bundle-genomic-signatures-inner';
import { PatientCaseBundleTumorBoardsInner } from './patient-case-bundle-tumor-boards-inner';
import { PatientCaseDataCompletionStatusSchema } from './patient-case-data-completion-status-schema';
import { NeoplasticEntity } from './neoplastic-entity';
import { Radiotherapy } from './radiotherapy';
import { GenomicVariant } from './genomic-variant';
import { TumorMarker } from './tumor-marker';
import { AdverseEvent } from './adverse-event';
import { TreatmentResponse } from './treatment-response';
import { TherapyLine } from './therapy-line';
import { Surgery } from './surgery';
import { FamilyHistory } from './family-history';
import { Lifestyle } from './lifestyle';
import { Vitals } from './vitals';
import { PerformanceStatus } from './performance-status';
import { PatientCaseConsentStatusChoices } from './patient-case-consent-status-choices';
import { PatientCaseBundleStagingsInner } from './patient-case-bundle-stagings-inner';


export interface PatientCaseBundle { 
    /**
     * Approximate age of the patient in years
     */
    age: number;
    overall_survival?: number | null;
    age_at_diagnosis?: number | null;
    /**
     * Percentage indicating the completeness of a case in terms of its data.
     */
    dataCompletionRate: number;
    /**
     * 
     */
    id: string;
    /**
     * 
     */
    createdAt: string;
    /**
     * 
     */
    updatedAt: string;
    createdBy?: User | null;
    externalSource?: string | null;
    externalSourceId?: string | null;
    /**
     * Pseudoidentifier of the patient
     */
    pseudoidentifier: string;
    /**
     * Medical center where the patient data originally resides
     */
    clinicalCenter: string;
    /**
     * Unique clinical identifier (typically the clinical information system identifier) unique for a physical patient
     */
    clinicalIdentifier: string;
    /**
     * Status of the general consent by the patient for the use of their data for research purposes
     */
    consentStatus?: PatientCaseConsentStatusChoices;
    /**
     * Gender for administrative purposes
     */
    gender: CodedConcept;
    race?: CodedConcept | null;
    sexAtBirth?: CodedConcept | null;
    genderIdentity?: CodedConcept | null;
    /**
     * Anonymized date of birth (year/month). The day is set to the first day of the month by convention.
     */
    dateOfBirth: string;
    /**
     * Indicates if the individual is deceased or not (determined automatically based on existence of a date of death)
     */
    isDeceased: boolean;
    dateOfDeath?: string | null;
    causeOfDeath?: CodedConcept | null;
    /**
     * The user(s) who updated the data since its creation
     */
    updatedBy?: Array<User>;
    /**
     * Human-readable description
     */
    description: string;
    neoplastic_entities?: Array<NeoplasticEntity>;
    stagings?: Array<PatientCaseBundleStagingsInner>;
    tumor_markers?: Array<TumorMarker>;
    risk_assessments?: Array<RiskAssessment>;
    therapy_lines?: Array<TherapyLine>;
    systemic_therapies?: Array<SystemicTherapy>;
    surgeries?: Array<Surgery>;
    radiotherapies?: Array<Radiotherapy>;
    adverse_events?: Array<AdverseEvent>;
    treatment_responses?: Array<TreatmentResponse>;
    tumorBoards?: Array<PatientCaseBundleTumorBoardsInner>;
    performance_status?: Array<PerformanceStatus>;
    comorbidities?: Array<ComorbiditiesAssessment>;
    genomic_variants?: Array<GenomicVariant>;
    genomicSignatures?: Array<PatientCaseBundleGenomicSignaturesInner>;
    vitals?: Array<Vitals>;
    lifestyles?: Array<Lifestyle>;
    family_histories?: Array<FamilyHistory>;
    completedDataCategories: { [key: string]: PatientCaseDataCompletionStatusSchema; };
}
export namespace PatientCaseBundle {
}


