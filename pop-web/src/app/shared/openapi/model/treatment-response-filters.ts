/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface TreatmentResponseFilters { 
    /**
     * Id - Filter for full text matches
     */
    id?: string;
    /**
     * Id - Filter for full text mismatches
     */
    'id.not'?: string;
    /**
     * Id - Filter for partial text matches
     */
    'id.contains'?: string;
    /**
     * Id - Filter for partial text mismatches
     */
    'id.not.contains'?: string;
    /**
     * Id - Filter for entries starting with the text
     */
    'id.beginsWith'?: string;
    /**
     * Id - Filter for entries not starting with the text
     */
    'id.not.beginsWith'?: string;
    /**
     * Id - Filter for entries ending with the text
     */
    'id.endsWith'?: string;
    /**
     * Id - Filter for entries not ending with the text
     */
    'id.not.endsWith'?: string;
    /**
     * Patient case - Filter for reference matches
     */
    caseId?: string;
    /**
     * Patient case - Filter for reference mismatches
     */
    'caseId.not'?: string;
    /**
     * Patient case - Filter for partial text matches
     */
    'caseId.contains'?: string;
    /**
     * Patient case - Filter for partial text mismatches
     */
    'caseId.not.contains'?: string;
    /**
     * Patient case - Filter for entries starting with the text
     */
    'caseId.beginsWith'?: string;
    /**
     * Patient case - Filter for entries not starting with the text
     */
    'caseId.not.beginsWith'?: string;
    /**
     * Patient case - Filter for entries ending with the text
     */
    'caseId.endsWith'?: string;
    /**
     * Patient case - Filter for entries not ending with the text
     */
    'caseId.not.endsWith'?: string;
    /**
     * Assessment date - Filter for entries with dates before the specified value
     */
    'date.before'?: string;
    /**
     * Assessment date - Filter for entries with dates after the specified value
     */
    'date.after'?: string;
    /**
     * Assessment date - Filter for entries with dates on or before the specified value
     */
    'date.onOrBefore'?: string;
    /**
     * Assessment date - Filter for entries with dates on or after the specified value
     */
    'date.onOrAfter'?: string;
    /**
     * Assessment date - Filter for entries with dates exactly matching the specified value
     */
    'date.on'?: string;
    /**
     * Assessment date - Filter for entries with dates not matching the specified value
     */
    'date.not.on'?: string;
    /**
     * Assessment date - Filter for entries with dates between two specified values (inclusive)
     */
    'date.between'?: Array<any>;
    /**
     * Assessment date - Filter for entries with dates not between two specified values (inclusive)
     */
    'date.not.between'?: Array<any>;
    /**
     * RECIST - Filter for a matching concept code
     */
    recist?: string;
    /**
     * RECIST - Filter for a mismatching concept code
     */
    'recist.not'?: string;
    /**
     * RECIST - Filter for a matching set of concept codes
     */
    'recist.anyOf'?: Array<string>;
    /**
     * RECIST - Filter for a mismmatching set of concept codes
     */
    'recist.not.anyOf'?: Array<string>;
    /**
     * RECIST - Filter for all child concepts of a given concepts code
     */
    'recist.descendantsOf'?: string;
    /**
     * RECIST Interpreted? - Filter for entries without a value
     */
    'recistInterpreted.not.exists'?: boolean;
    /**
     * RECIST Interpreted? - Filter for entries with a value
     */
    'recistInterpreted.exists'?: boolean;
    /**
     * RECIST Interpreted? - (\'Filter for yes/no statement\',)
     */
    recistInterpreted?: boolean;
    /**
     * Assessment method - Filter for a matching concept code
     */
    methodology?: string;
    /**
     * Assessment method - Filter for a mismatching concept code
     */
    'methodology.not'?: string;
    /**
     * Assessment method - Filter for a matching set of concept codes
     */
    'methodology.anyOf'?: Array<string>;
    /**
     * Assessment method - Filter for a mismmatching set of concept codes
     */
    'methodology.not.anyOf'?: Array<string>;
    /**
     * Assessment method - Filter for all child concepts of a given concepts code
     */
    'methodology.descendantsOf'?: string;
    /**
     * Assessed neoplastic entities - Filter for reference matches
     */
    assessedEntitiesIds?: string;
    /**
     * Assessed neoplastic entities - Filter for reference mismatches
     */
    'assessedEntitiesIds.not'?: string;
    /**
     * None - Filter for full text matches
     */
    'assessedBodysites.code'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'assessedBodysites.code.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'assessedBodysites.code.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'assessedBodysites.code.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'assessedBodysites.code.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'assessedBodysites.code.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'assessedBodysites.code.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'assessedBodysites.code.not.endsWith'?: string;
    /**
     * None - Filter for full text matches
     */
    'assessedBodysites.system'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'assessedBodysites.system.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'assessedBodysites.system.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'assessedBodysites.system.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'assessedBodysites.system.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'assessedBodysites.system.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'assessedBodysites.system.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'assessedBodysites.system.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'assessedBodysites.display.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'assessedBodysites.display.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'assessedBodysites.display'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'assessedBodysites.display.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'assessedBodysites.display.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'assessedBodysites.display.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'assessedBodysites.display.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'assessedBodysites.display.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'assessedBodysites.display.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'assessedBodysites.display.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'assessedBodysites.version.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'assessedBodysites.version.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'assessedBodysites.version'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'assessedBodysites.version.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'assessedBodysites.version.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'assessedBodysites.version.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'assessedBodysites.version.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'assessedBodysites.version.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'assessedBodysites.version.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'assessedBodysites.version.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'assessedBodysites.synonyms.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'assessedBodysites.synonyms.exists'?: boolean;
    /**
     * None - Filter for entries without a value
     */
    'assessedBodysites.properties.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'assessedBodysites.properties.exists'?: boolean;
}

