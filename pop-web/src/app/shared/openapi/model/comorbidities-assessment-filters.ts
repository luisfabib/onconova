/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface ComorbiditiesAssessmentFilters { 
    /**
     * Id - Filter for full text matches
     */
    id?: string;
    /**
     * Id - Filter for full text mismatches
     */
    'id.not'?: string;
    /**
     * Id - Filter for partial text matches
     */
    'id.contains'?: string;
    /**
     * Id - Filter for partial text mismatches
     */
    'id.not.contains'?: string;
    /**
     * Id - Filter for entries starting with the text
     */
    'id.beginsWith'?: string;
    /**
     * Id - Filter for entries not starting with the text
     */
    'id.not.beginsWith'?: string;
    /**
     * Id - Filter for entries ending with the text
     */
    'id.endsWith'?: string;
    /**
     * Id - Filter for entries not ending with the text
     */
    'id.not.endsWith'?: string;
    /**
     * Created At - Filter for entries with dates before the specified value
     */
    'createdAt.before'?: string;
    /**
     * Created At - Filter for entries with dates after the specified value
     */
    'createdAt.after'?: string;
    /**
     * Created At - Filter for entries with dates on or before the specified value
     */
    'createdAt.onOrBefore'?: string;
    /**
     * Created At - Filter for entries with dates on or after the specified value
     */
    'createdAt.onOrAfter'?: string;
    /**
     * Created At - Filter for entries with dates exactly matching the specified value
     */
    'createdAt.on'?: string;
    /**
     * Created At - Filter for entries with dates not matching the specified value
     */
    'createdAt.not.on'?: string;
    /**
     * Created At - Filter for entries with dates between two specified values (inclusive)
     */
    'createdAt.between'?: Array<any>;
    /**
     * Created At - Filter for entries with dates not between two specified values (inclusive)
     */
    'createdAt.not.between'?: Array<any>;
    /**
     * Updated At - Filter for entries with dates before the specified value
     */
    'updatedAt.before'?: string;
    /**
     * Updated At - Filter for entries with dates after the specified value
     */
    'updatedAt.after'?: string;
    /**
     * Updated At - Filter for entries with dates on or before the specified value
     */
    'updatedAt.onOrBefore'?: string;
    /**
     * Updated At - Filter for entries with dates on or after the specified value
     */
    'updatedAt.onOrAfter'?: string;
    /**
     * Updated At - Filter for entries with dates exactly matching the specified value
     */
    'updatedAt.on'?: string;
    /**
     * Updated At - Filter for entries with dates not matching the specified value
     */
    'updatedAt.not.on'?: string;
    /**
     * Updated At - Filter for entries with dates between two specified values (inclusive)
     */
    'updatedAt.between'?: Array<any>;
    /**
     * Updated At - Filter for entries with dates not between two specified values (inclusive)
     */
    'updatedAt.not.between'?: Array<any>;
    /**
     * Created By - Filter for entries without a value
     */
    'createdBy.not.exists'?: boolean;
    /**
     * Created By - Filter for entries with a value
     */
    'createdBy.exists'?: boolean;
    /**
     * None - Filter for entries with values less than the specified value
     */
    'updatedBys.id.lessThan'?: number;
    /**
     * None - Filter for entries with values less than or equal to the specified value
     */
    'updatedBys.id.lessThanOrEqual'?: number;
    /**
     * None - Filter for entries with values greater than the specified value
     */
    'updatedBys.id.greaterThan'?: number;
    /**
     * None - Filter for entries with values greater than or equal to the specified value
     */
    'updatedBys.id.greaterThanOrEqual'?: number;
    /**
     * None - Filter for entries with values exactly equal to the specified value
     */
    'updatedBys.id.equal'?: number;
    /**
     * None - Filter for entries with values not equal to the specified value
     */
    'updatedBys.id.not.equal'?: number;
    /**
     * None - Filter for entries with values between two specified values (inclusive)
     */
    'updatedBys.id.between'?: Array<any>;
    /**
     * None - Filter for entries with values between two specified values (inclusive)
     */
    'updatedBys.id.not.between'?: Array<any>;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.username'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.username.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.username.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.username.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.username.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.username.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.username.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.username.not.endsWith'?: string;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.email'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.email.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.email.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.email.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.email.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.email.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.email.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.email.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'updatedBys.firstName.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'updatedBys.firstName.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.firstName'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.firstName.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.firstName.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.firstName.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.firstName.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.firstName.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.firstName.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.firstName.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'updatedBys.lastName.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'updatedBys.lastName.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'updatedBys.lastName'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'updatedBys.lastName.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'updatedBys.lastName.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'updatedBys.lastName.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'updatedBys.lastName.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'updatedBys.lastName.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'updatedBys.lastName.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'updatedBys.lastName.not.endsWith'?: string;
    /**
     * Patient case - Filter for full text matches
     */
    caseId?: string;
    /**
     * Patient case - Filter for full text mismatches
     */
    'caseId.not'?: string;
    /**
     * Patient case - Filter for partial text matches
     */
    'caseId.contains'?: string;
    /**
     * Patient case - Filter for partial text mismatches
     */
    'caseId.not.contains'?: string;
    /**
     * Patient case - Filter for entries starting with the text
     */
    'caseId.beginsWith'?: string;
    /**
     * Patient case - Filter for entries not starting with the text
     */
    'caseId.not.beginsWith'?: string;
    /**
     * Patient case - Filter for entries ending with the text
     */
    'caseId.endsWith'?: string;
    /**
     * Patient case - Filter for entries not ending with the text
     */
    'caseId.not.endsWith'?: string;
    /**
     * Assessment date - Filter for entries with dates before the specified value
     */
    'date.before'?: string;
    /**
     * Assessment date - Filter for entries with dates after the specified value
     */
    'date.after'?: string;
    /**
     * Assessment date - Filter for entries with dates on or before the specified value
     */
    'date.onOrBefore'?: string;
    /**
     * Assessment date - Filter for entries with dates on or after the specified value
     */
    'date.onOrAfter'?: string;
    /**
     * Assessment date - Filter for entries with dates exactly matching the specified value
     */
    'date.on'?: string;
    /**
     * Assessment date - Filter for entries with dates not matching the specified value
     */
    'date.not.on'?: string;
    /**
     * Assessment date - Filter for entries with dates between two specified values (inclusive)
     */
    'date.between'?: Array<any>;
    /**
     * Assessment date - Filter for entries with dates not between two specified values (inclusive)
     */
    'date.not.between'?: Array<any>;
    /**
     * Index neoplastic entity - Filter for full text matches
     */
    indexconditionId?: string;
    /**
     * Index neoplastic entity - Filter for full text mismatches
     */
    'indexconditionId.not'?: string;
    /**
     * Index neoplastic entity - Filter for partial text matches
     */
    'indexconditionId.contains'?: string;
    /**
     * Index neoplastic entity - Filter for partial text mismatches
     */
    'indexconditionId.not.contains'?: string;
    /**
     * Index neoplastic entity - Filter for entries starting with the text
     */
    'indexconditionId.beginsWith'?: string;
    /**
     * Index neoplastic entity - Filter for entries not starting with the text
     */
    'indexconditionId.not.beginsWith'?: string;
    /**
     * Index neoplastic entity - Filter for entries ending with the text
     */
    'indexconditionId.endsWith'?: string;
    /**
     * Index neoplastic entity - Filter for entries not ending with the text
     */
    'indexconditionId.not.endsWith'?: string;
    /**
     * Panel - Filter for entries without a value
     */
    'panel.not.exists'?: boolean;
    /**
     * Panel - Filter for entries with a value
     */
    'panel.exists'?: boolean;
    panel?: ComorbiditiesAssessmentFilters.PanelEnum;
    'panel.not'?: ComorbiditiesAssessmentFilters.PanelNotEnum;
    /**
     * Panel - (\'Filter for excluding a subset of value choices\',)
     */
    'panel.anyOf'?: Array<ComorbiditiesAssessmentFilters.PanelAnyOfEnum>;
    /**
     * None - Filter for full text matches
     */
    'presentConditions.code'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'presentConditions.code.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'presentConditions.code.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'presentConditions.code.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'presentConditions.code.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'presentConditions.code.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'presentConditions.code.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'presentConditions.code.not.endsWith'?: string;
    /**
     * None - Filter for full text matches
     */
    'presentConditions.system'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'presentConditions.system.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'presentConditions.system.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'presentConditions.system.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'presentConditions.system.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'presentConditions.system.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'presentConditions.system.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'presentConditions.system.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'presentConditions.display.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'presentConditions.display.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'presentConditions.display'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'presentConditions.display.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'presentConditions.display.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'presentConditions.display.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'presentConditions.display.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'presentConditions.display.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'presentConditions.display.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'presentConditions.display.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'presentConditions.version.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'presentConditions.version.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'presentConditions.version'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'presentConditions.version.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'presentConditions.version.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'presentConditions.version.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'presentConditions.version.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'presentConditions.version.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'presentConditions.version.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'presentConditions.version.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'presentConditions.synonyms.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'presentConditions.synonyms.exists'?: boolean;
    /**
     * None - Filter for entries without a value
     */
    'presentConditions.properties.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'presentConditions.properties.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'absentConditions.code'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'absentConditions.code.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'absentConditions.code.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'absentConditions.code.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'absentConditions.code.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'absentConditions.code.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'absentConditions.code.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'absentConditions.code.not.endsWith'?: string;
    /**
     * None - Filter for full text matches
     */
    'absentConditions.system'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'absentConditions.system.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'absentConditions.system.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'absentConditions.system.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'absentConditions.system.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'absentConditions.system.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'absentConditions.system.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'absentConditions.system.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'absentConditions.display.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'absentConditions.display.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'absentConditions.display'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'absentConditions.display.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'absentConditions.display.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'absentConditions.display.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'absentConditions.display.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'absentConditions.display.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'absentConditions.display.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'absentConditions.display.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'absentConditions.version.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'absentConditions.version.exists'?: boolean;
    /**
     * None - Filter for full text matches
     */
    'absentConditions.version'?: string;
    /**
     * None - Filter for full text mismatches
     */
    'absentConditions.version.not'?: string;
    /**
     * None - Filter for partial text matches
     */
    'absentConditions.version.contains'?: string;
    /**
     * None - Filter for partial text mismatches
     */
    'absentConditions.version.not.contains'?: string;
    /**
     * None - Filter for entries starting with the text
     */
    'absentConditions.version.beginsWith'?: string;
    /**
     * None - Filter for entries not starting with the text
     */
    'absentConditions.version.not.beginsWith'?: string;
    /**
     * None - Filter for entries ending with the text
     */
    'absentConditions.version.endsWith'?: string;
    /**
     * None - Filter for entries not ending with the text
     */
    'absentConditions.version.not.endsWith'?: string;
    /**
     * None - Filter for entries without a value
     */
    'absentConditions.synonyms.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'absentConditions.synonyms.exists'?: boolean;
    /**
     * None - Filter for entries without a value
     */
    'absentConditions.properties.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'absentConditions.properties.exists'?: boolean;
    /**
     * None - Filter for entries without a value
     */
    'index.not.exists'?: boolean;
    /**
     * None - Filter for entries with a value
     */
    'index.exists'?: boolean;
    /**
     * None - Filter for entries with values less than the specified value
     */
    'index.lessThan'?: number;
    /**
     * None - Filter for entries with values less than or equal to the specified value
     */
    'index.lessThanOrEqual'?: number;
    /**
     * None - Filter for entries with values greater than the specified value
     */
    'index.greaterThan'?: number;
    /**
     * None - Filter for entries with values greater than or equal to the specified value
     */
    'index.greaterThanOrEqual'?: number;
    /**
     * None - Filter for entries with values exactly equal to the specified value
     */
    'index.equal'?: number;
    /**
     * None - Filter for entries with values not equal to the specified value
     */
    'index.not.equal'?: number;
    /**
     * None - Filter for entries with values between two specified values (inclusive)
     */
    'index.between'?: Array<any>;
    /**
     * None - Filter for entries with values between two specified values (inclusive)
     */
    'index.not.between'?: Array<any>;
}
export namespace ComorbiditiesAssessmentFilters {
    export type PanelEnum = 'Charlson' | 'Elixhauser' | 'NCI';
    export const PanelEnum = {
        Charlson: 'Charlson' as PanelEnum,
        Elixhauser: 'Elixhauser' as PanelEnum,
        Nci: 'NCI' as PanelEnum
    };
    export type PanelNotEnum = 'Charlson' | 'Elixhauser' | 'NCI';
    export const PanelNotEnum = {
        Charlson: 'Charlson' as PanelNotEnum,
        Elixhauser: 'Elixhauser' as PanelNotEnum,
        Nci: 'NCI' as PanelNotEnum
    };
    export type PanelAnyOfEnum = 'Charlson' | 'Elixhauser' | 'NCI';
    export const PanelAnyOfEnum = {
        Charlson: 'Charlson' as PanelAnyOfEnum,
        Elixhauser: 'Elixhauser' as PanelAnyOfEnum,
        Nci: 'NCI' as PanelAnyOfEnum
    };
}


