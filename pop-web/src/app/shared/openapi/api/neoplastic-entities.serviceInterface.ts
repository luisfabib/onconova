/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { NeoplasticEntity } from '../model/models';
import { NeoplasticEntityCreate } from '../model/models';
import { PaginatedNeoplasticEntity } from '../model/models';
import { ResourceIdSchema } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface NeoplasticEntitiesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Neoplastic Entity
     * 
     * @param neoplasticEntityCreate 
     */
    createNeoplasticEntity(neoplasticEntityCreate: NeoplasticEntityCreate, extraHttpRequestParams?: any): Observable<ResourceIdSchema>;

    /**
     * Delete Neoplastic Entity
     * 
     * @param entityId 
     */
    deleteNeoplasticEntityById(entityId: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get All Neoplastic Entities Matching The Query
     * 
     * @param caseId 
     * @param type 
     * @param limit 
     * @param offset 
     */
    getNeoplasticEntities(caseId?: string, type?: Array<'primary' | 'metastatic' | 'local_recurrence' | 'regional_recurrence'>, limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<PaginatedNeoplasticEntity>;

    /**
     * Get Neoplastic Entity By Id
     * 
     * @param entityId 
     */
    getNeoplasticEntityById(entityId: string, extraHttpRequestParams?: any): Observable<NeoplasticEntity>;

    /**
     * Update Neoplastic Entity
     * 
     * @param entityId 
     * @param neoplasticEntityCreate 
     */
    updateNeoplasticEntityById(entityId: string, neoplasticEntityCreate: NeoplasticEntityCreate, extraHttpRequestParams?: any): Observable<{}>;

}
