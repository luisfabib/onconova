/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { GenomicVariantCreateSchema } from '../model/models';
import { GenomicVariantSchema } from '../model/models';
import { PaginatedGenomicVariantSchema } from '../model/models';
import { ModifiedResourceSchema } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface GenomicVariantsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Genomic Variant
     * 
     * @param genomicVariantCreateSchema 
     */
    createGenomicVariant(genomicVariantCreateSchema: GenomicVariantCreateSchema, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Delete Genomic Variant
     * 
     * @param genomicVariantId 
     */
    deleteGenomicVariant(genomicVariantId: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get Genomic Variant By Id
     * 
     * @param genomicVariantId 
     */
    getGenomicVariantById(genomicVariantId: string, extraHttpRequestParams?: any): Observable<GenomicVariantSchema>;

    /**
     * Get All Genomic Variants Matching The Query
     * 
     * @param caseId 
     * @param limit 
     * @param offset 
     */
    getGenomicVariants(caseId?: string, limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<PaginatedGenomicVariantSchema>;

    /**
     * Update Genomic Variant
     * 
     * @param genomicVariantId 
     * @param genomicVariantCreateSchema 
     */
    updateGenomicVariant(genomicVariantId: string, genomicVariantCreateSchema: GenomicVariantCreateSchema, extraHttpRequestParams?: any): Observable<{}>;

}
