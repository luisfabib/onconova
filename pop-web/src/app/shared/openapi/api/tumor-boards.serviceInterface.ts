/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AnyTumorBoard } from '../model/models';
import { MolecularTherapeuticRecommendationCreateSchema } from '../model/models';
import { MolecularTherapeuticRecommendationSchema } from '../model/models';
import { PaginatedAnyTumorBoard } from '../model/models';
import { Payload1 } from '../model/models';
import { ModifiedResourceSchema } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface TumorBoardsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Molecular Tumor Board Therapeutic Recommendation
     * 
     * @param tumorBoardId 
     * @param molecularTherapeuticRecommendationCreateSchema 
     */
    createMolecularTherapeuticRecommendation(tumorBoardId: string, molecularTherapeuticRecommendationCreateSchema: MolecularTherapeuticRecommendationCreateSchema, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Create Tumor Board
     * 
     * @param payload1 
     */
    createTumorBoard(payload1: Payload1, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Delete Molecular Tumor Board Therapeutic Recommendation
     * 
     * @param tumorBoardId 
     * @param recommendationId 
     */
    deleteMolecularTherapeuticRecommendation(tumorBoardId: string, recommendationId: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete Tumor Board
     * 
     * @param tumorBoardId 
     */
    deleteTumorBoardById(tumorBoardId: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get Molecular Tumor Board Therapeutic Recommendation By Id
     * 
     * @param tumorBoardId 
     * @param recommendationId 
     */
    getMOlecularTherapeuticRecommendationById(tumorBoardId: string, recommendationId: string, extraHttpRequestParams?: any): Observable<MolecularTherapeuticRecommendationSchema>;

    /**
     * Get Molecular Tumor Board Therapeutic Recommendations Matching The Query
     * 
     * @param tumorBoardId 
     */
    getMolecularTherapeuticRecommendations(tumorBoardId: string, extraHttpRequestParams?: any): Observable<Array<MolecularTherapeuticRecommendationSchema>>;

    /**
     * Get Tumor Board By Id
     * 
     * @param tumorBoardId 
     */
    getTumorBoardById(tumorBoardId: string, extraHttpRequestParams?: any): Observable<AnyTumorBoard>;

    /**
     * Get All Tumor Boards Matching The Query
     * 
     * @param caseId 
     * @param stagingDomain 
     * @param limit 
     * @param offset 
     */
    getTumorBoards(caseId?: string, stagingDomain?: Array<'unspecified' | 'molecular'>, limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<PaginatedAnyTumorBoard>;

    /**
     * Update Molecular Tumor Board Therapeutic Recommendation
     * 
     * @param tumorBoardId 
     * @param recommendationId 
     * @param molecularTherapeuticRecommendationCreateSchema 
     */
    updateMolecularTherapeuticRecommendation(tumorBoardId: string, recommendationId: string, molecularTherapeuticRecommendationCreateSchema: MolecularTherapeuticRecommendationCreateSchema, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Update Tumor Board
     * 
     * @param tumorBoardId 
     * @param payload1 
     */
    updateTumorBoardById(tumorBoardId: string, payload1: Payload1, extraHttpRequestParams?: any): Observable<{}>;

}
