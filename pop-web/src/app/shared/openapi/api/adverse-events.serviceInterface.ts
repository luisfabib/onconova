/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AdverseEventCreateSchema } from '../model/models';
import { AdverseEventMitigationCreateSchema } from '../model/models';
import { AdverseEventMitigationSchema } from '../model/models';
import { AdverseEventSchema } from '../model/models';
import { AdverseEventSuspectedCauseCreateSchema } from '../model/models';
import { AdverseEventSuspectedCauseSchema } from '../model/models';
import { ModifiedResourceSchema } from '../model/models';
import { PaginatedAdverseEventSchema } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateAdverseEventRequestParams {
    adverseEventCreateSchema: AdverseEventCreateSchema;
}

export interface CreateAdverseEventMitigationRequestParams {
    adverseEventId: string;
    adverseEventMitigationCreateSchema: AdverseEventMitigationCreateSchema;
}

export interface CreateAdverseEventSuspectedCauseRequestParams {
    adverseEventId: string;
    adverseEventSuspectedCauseCreateSchema: AdverseEventSuspectedCauseCreateSchema;
}

export interface DeleteAdverseEventByIdRequestParams {
    adverseEventId: string;
}

export interface DeleteAdverseEventMitigationRequestParams {
    adverseEventId: string;
    mitigationId: string;
}

export interface DeleteAdverseEventSuspectedCauseRequestParams {
    adverseEventId: string;
    causeId: string;
}

export interface GetAdverseEventByIdRequestParams {
    adverseEventId: string;
}

export interface GetAdverseEventMitigationByIdRequestParams {
    adverseEventId: string;
    mitigationId: string;
}

export interface GetAdverseEventMitigationsRequestParams {
    adverseEventId: string;
}

export interface GetAdverseEventSuspectedCauseByIdRequestParams {
    adverseEventId: string;
    causeId: string;
}

export interface GetAdverseEventSuspectedCausesRequestParams {
    adverseEventId: string;
}

export interface GetAdverseEventsRequestParams {
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    dateBefore?: string;
    dateAfter?: string;
    dateOnOrBefore?: string;
    dateOnOrAfter?: string;
    dateOn?: string;
    dateNotOn?: string;
    dateBetween?: Array<any>;
    dateNotBetween?: Array<any>;
    event?: string;
    eventNot?: string;
    eventAnyOf?: Array<string>;
    eventNotAnyOf?: Array<string>;
    eventDescendantsOf?: string;
    gradeLessThan?: number;
    gradeLessThanOrEqual?: number;
    gradeGreaterThan?: number;
    gradeGreaterThanOrEqual?: number;
    gradeEqual?: number;
    gradeNotEqual?: number;
    gradeBetween?: Array<any>;
    gradeNotBetween?: Array<any>;
    outcome?: string;
    outcomeNot?: string;
    outcomeAnyOf?: Array<'resolved' | 'resolved-with-sequelae' | 'recovering' | 'ongoing' | 'fatal' | 'unknown'>;
    dateResolvedNotExists?: boolean;
    dateResolvedExists?: boolean;
    dateResolvedBefore?: string;
    dateResolvedAfter?: string;
    dateResolvedOnOrBefore?: string;
    dateResolvedOnOrAfter?: string;
    dateResolvedOn?: string;
    dateResolvedNotOn?: string;
    dateResolvedBetween?: Array<any>;
    dateResolvedNotBetween?: Array<any>;
    suspectedCausesId?: string;
    suspectedCausesIdNot?: string;
    suspectedCausesIdContains?: string;
    suspectedCausesIdNotContains?: string;
    suspectedCausesIdBeginsWith?: string;
    suspectedCausesIdNotBeginsWith?: string;
    suspectedCausesIdEndsWith?: string;
    suspectedCausesIdNotEndsWith?: string;
    suspectedCausesCreatedAtBefore?: string;
    suspectedCausesCreatedAtAfter?: string;
    suspectedCausesCreatedAtOnOrBefore?: string;
    suspectedCausesCreatedAtOnOrAfter?: string;
    suspectedCausesCreatedAtOn?: string;
    suspectedCausesCreatedAtNotOn?: string;
    suspectedCausesCreatedAtBetween?: Array<any>;
    suspectedCausesCreatedAtNotBetween?: Array<any>;
    suspectedCausesUpdatedAtBefore?: string;
    suspectedCausesUpdatedAtAfter?: string;
    suspectedCausesUpdatedAtOnOrBefore?: string;
    suspectedCausesUpdatedAtOnOrAfter?: string;
    suspectedCausesUpdatedAtOn?: string;
    suspectedCausesUpdatedAtNotOn?: string;
    suspectedCausesUpdatedAtBetween?: Array<any>;
    suspectedCausesUpdatedAtNotBetween?: Array<any>;
    suspectedCausesCreatedByNotExists?: boolean;
    suspectedCausesCreatedByExists?: boolean;
    suspectedCausesUpdatedByIdLessThan?: number;
    suspectedCausesUpdatedByIdLessThanOrEqual?: number;
    suspectedCausesUpdatedByIdGreaterThan?: number;
    suspectedCausesUpdatedByIdGreaterThanOrEqual?: number;
    suspectedCausesUpdatedByIdEqual?: number;
    suspectedCausesUpdatedByIdNotEqual?: number;
    suspectedCausesUpdatedByIdBetween?: Array<any>;
    suspectedCausesUpdatedByIdNotBetween?: Array<any>;
    suspectedCausesUpdatedByUsername?: string;
    suspectedCausesUpdatedByUsernameNot?: string;
    suspectedCausesUpdatedByUsernameContains?: string;
    suspectedCausesUpdatedByUsernameNotContains?: string;
    suspectedCausesUpdatedByUsernameBeginsWith?: string;
    suspectedCausesUpdatedByUsernameNotBeginsWith?: string;
    suspectedCausesUpdatedByUsernameEndsWith?: string;
    suspectedCausesUpdatedByUsernameNotEndsWith?: string;
    suspectedCausesUpdatedByEmail?: string;
    suspectedCausesUpdatedByEmailNot?: string;
    suspectedCausesUpdatedByEmailContains?: string;
    suspectedCausesUpdatedByEmailNotContains?: string;
    suspectedCausesUpdatedByEmailBeginsWith?: string;
    suspectedCausesUpdatedByEmailNotBeginsWith?: string;
    suspectedCausesUpdatedByEmailEndsWith?: string;
    suspectedCausesUpdatedByEmailNotEndsWith?: string;
    suspectedCausesUpdatedByFirstNameNotExists?: boolean;
    suspectedCausesUpdatedByFirstNameExists?: boolean;
    suspectedCausesUpdatedByFirstName?: string;
    suspectedCausesUpdatedByFirstNameNot?: string;
    suspectedCausesUpdatedByFirstNameContains?: string;
    suspectedCausesUpdatedByFirstNameNotContains?: string;
    suspectedCausesUpdatedByFirstNameBeginsWith?: string;
    suspectedCausesUpdatedByFirstNameNotBeginsWith?: string;
    suspectedCausesUpdatedByFirstNameEndsWith?: string;
    suspectedCausesUpdatedByFirstNameNotEndsWith?: string;
    suspectedCausesUpdatedByLastNameNotExists?: boolean;
    suspectedCausesUpdatedByLastNameExists?: boolean;
    suspectedCausesUpdatedByLastName?: string;
    suspectedCausesUpdatedByLastNameNot?: string;
    suspectedCausesUpdatedByLastNameContains?: string;
    suspectedCausesUpdatedByLastNameNotContains?: string;
    suspectedCausesUpdatedByLastNameBeginsWith?: string;
    suspectedCausesUpdatedByLastNameNotBeginsWith?: string;
    suspectedCausesUpdatedByLastNameEndsWith?: string;
    suspectedCausesUpdatedByLastNameNotEndsWith?: string;
    suspectedCausesDescription?: string;
    suspectedCausesDescriptionNot?: string;
    suspectedCausesDescriptionContains?: string;
    suspectedCausesDescriptionNotContains?: string;
    suspectedCausesDescriptionBeginsWith?: string;
    suspectedCausesDescriptionNotBeginsWith?: string;
    suspectedCausesDescriptionEndsWith?: string;
    suspectedCausesDescriptionNotEndsWith?: string;
    suspectedCausesExternalSourceNotExists?: boolean;
    suspectedCausesExternalSourceExists?: boolean;
    suspectedCausesExternalSource?: string;
    suspectedCausesExternalSourceNot?: string;
    suspectedCausesExternalSourceContains?: string;
    suspectedCausesExternalSourceNotContains?: string;
    suspectedCausesExternalSourceBeginsWith?: string;
    suspectedCausesExternalSourceNotBeginsWith?: string;
    suspectedCausesExternalSourceEndsWith?: string;
    suspectedCausesExternalSourceNotEndsWith?: string;
    suspectedCausesExternalSourceIdNotExists?: boolean;
    suspectedCausesExternalSourceIdExists?: boolean;
    suspectedCausesExternalSourceId?: string;
    suspectedCausesExternalSourceIdNot?: string;
    suspectedCausesExternalSourceIdContains?: string;
    suspectedCausesExternalSourceIdNotContains?: string;
    suspectedCausesExternalSourceIdBeginsWith?: string;
    suspectedCausesExternalSourceIdNotBeginsWith?: string;
    suspectedCausesExternalSourceIdEndsWith?: string;
    suspectedCausesExternalSourceIdNotEndsWith?: string;
    suspectedCausesSystemicTherapyIdNotExists?: boolean;
    suspectedCausesSystemicTherapyIdExists?: boolean;
    suspectedCausesSystemicTherapyId?: string;
    suspectedCausesSystemicTherapyIdNot?: string;
    suspectedCausesSystemicTherapyIdContains?: string;
    suspectedCausesSystemicTherapyIdNotContains?: string;
    suspectedCausesSystemicTherapyIdBeginsWith?: string;
    suspectedCausesSystemicTherapyIdNotBeginsWith?: string;
    suspectedCausesSystemicTherapyIdEndsWith?: string;
    suspectedCausesSystemicTherapyIdNotEndsWith?: string;
    suspectedCausesMedicationIdNotExists?: boolean;
    suspectedCausesMedicationIdExists?: boolean;
    suspectedCausesMedicationId?: string;
    suspectedCausesMedicationIdNot?: string;
    suspectedCausesMedicationIdContains?: string;
    suspectedCausesMedicationIdNotContains?: string;
    suspectedCausesMedicationIdBeginsWith?: string;
    suspectedCausesMedicationIdNotBeginsWith?: string;
    suspectedCausesMedicationIdEndsWith?: string;
    suspectedCausesMedicationIdNotEndsWith?: string;
    suspectedCausesRadiotherapyIdNotExists?: boolean;
    suspectedCausesRadiotherapyIdExists?: boolean;
    suspectedCausesRadiotherapyId?: string;
    suspectedCausesRadiotherapyIdNot?: string;
    suspectedCausesRadiotherapyIdContains?: string;
    suspectedCausesRadiotherapyIdNotContains?: string;
    suspectedCausesRadiotherapyIdBeginsWith?: string;
    suspectedCausesRadiotherapyIdNotBeginsWith?: string;
    suspectedCausesRadiotherapyIdEndsWith?: string;
    suspectedCausesRadiotherapyIdNotEndsWith?: string;
    suspectedCausesSurgeryIdNotExists?: boolean;
    suspectedCausesSurgeryIdExists?: boolean;
    suspectedCausesSurgeryId?: string;
    suspectedCausesSurgeryIdNot?: string;
    suspectedCausesSurgeryIdContains?: string;
    suspectedCausesSurgeryIdNotContains?: string;
    suspectedCausesSurgeryIdBeginsWith?: string;
    suspectedCausesSurgeryIdNotBeginsWith?: string;
    suspectedCausesSurgeryIdEndsWith?: string;
    suspectedCausesSurgeryIdNotEndsWith?: string;
    suspectedCausesCausalityNotExists?: boolean;
    suspectedCausesCausalityExists?: boolean;
    suspectedCausesCausality?: string;
    suspectedCausesCausalityNot?: string;
    suspectedCausesCausalityAnyOf?: Array<'unrelated' | 'unlikely-related' | 'possibly-related' | 'probably-related' | 'definitely-related' | 'conditionally-related'>;
    mitigationsId?: string;
    mitigationsIdNot?: string;
    mitigationsIdContains?: string;
    mitigationsIdNotContains?: string;
    mitigationsIdBeginsWith?: string;
    mitigationsIdNotBeginsWith?: string;
    mitigationsIdEndsWith?: string;
    mitigationsIdNotEndsWith?: string;
    mitigationsCreatedAtBefore?: string;
    mitigationsCreatedAtAfter?: string;
    mitigationsCreatedAtOnOrBefore?: string;
    mitigationsCreatedAtOnOrAfter?: string;
    mitigationsCreatedAtOn?: string;
    mitigationsCreatedAtNotOn?: string;
    mitigationsCreatedAtBetween?: Array<any>;
    mitigationsCreatedAtNotBetween?: Array<any>;
    mitigationsUpdatedAtBefore?: string;
    mitigationsUpdatedAtAfter?: string;
    mitigationsUpdatedAtOnOrBefore?: string;
    mitigationsUpdatedAtOnOrAfter?: string;
    mitigationsUpdatedAtOn?: string;
    mitigationsUpdatedAtNotOn?: string;
    mitigationsUpdatedAtBetween?: Array<any>;
    mitigationsUpdatedAtNotBetween?: Array<any>;
    mitigationsCreatedByNotExists?: boolean;
    mitigationsCreatedByExists?: boolean;
    mitigationsUpdatedByIdLessThan?: number;
    mitigationsUpdatedByIdLessThanOrEqual?: number;
    mitigationsUpdatedByIdGreaterThan?: number;
    mitigationsUpdatedByIdGreaterThanOrEqual?: number;
    mitigationsUpdatedByIdEqual?: number;
    mitigationsUpdatedByIdNotEqual?: number;
    mitigationsUpdatedByIdBetween?: Array<any>;
    mitigationsUpdatedByIdNotBetween?: Array<any>;
    mitigationsUpdatedByUsername?: string;
    mitigationsUpdatedByUsernameNot?: string;
    mitigationsUpdatedByUsernameContains?: string;
    mitigationsUpdatedByUsernameNotContains?: string;
    mitigationsUpdatedByUsernameBeginsWith?: string;
    mitigationsUpdatedByUsernameNotBeginsWith?: string;
    mitigationsUpdatedByUsernameEndsWith?: string;
    mitigationsUpdatedByUsernameNotEndsWith?: string;
    mitigationsUpdatedByEmail?: string;
    mitigationsUpdatedByEmailNot?: string;
    mitigationsUpdatedByEmailContains?: string;
    mitigationsUpdatedByEmailNotContains?: string;
    mitigationsUpdatedByEmailBeginsWith?: string;
    mitigationsUpdatedByEmailNotBeginsWith?: string;
    mitigationsUpdatedByEmailEndsWith?: string;
    mitigationsUpdatedByEmailNotEndsWith?: string;
    mitigationsUpdatedByFirstNameNotExists?: boolean;
    mitigationsUpdatedByFirstNameExists?: boolean;
    mitigationsUpdatedByFirstName?: string;
    mitigationsUpdatedByFirstNameNot?: string;
    mitigationsUpdatedByFirstNameContains?: string;
    mitigationsUpdatedByFirstNameNotContains?: string;
    mitigationsUpdatedByFirstNameBeginsWith?: string;
    mitigationsUpdatedByFirstNameNotBeginsWith?: string;
    mitigationsUpdatedByFirstNameEndsWith?: string;
    mitigationsUpdatedByFirstNameNotEndsWith?: string;
    mitigationsUpdatedByLastNameNotExists?: boolean;
    mitigationsUpdatedByLastNameExists?: boolean;
    mitigationsUpdatedByLastName?: string;
    mitigationsUpdatedByLastNameNot?: string;
    mitigationsUpdatedByLastNameContains?: string;
    mitigationsUpdatedByLastNameNotContains?: string;
    mitigationsUpdatedByLastNameBeginsWith?: string;
    mitigationsUpdatedByLastNameNotBeginsWith?: string;
    mitigationsUpdatedByLastNameEndsWith?: string;
    mitigationsUpdatedByLastNameNotEndsWith?: string;
    mitigationsDescription?: string;
    mitigationsDescriptionNot?: string;
    mitigationsDescriptionContains?: string;
    mitigationsDescriptionNotContains?: string;
    mitigationsDescriptionBeginsWith?: string;
    mitigationsDescriptionNotBeginsWith?: string;
    mitigationsDescriptionEndsWith?: string;
    mitigationsDescriptionNotEndsWith?: string;
    mitigationsExternalSourceNotExists?: boolean;
    mitigationsExternalSourceExists?: boolean;
    mitigationsExternalSource?: string;
    mitigationsExternalSourceNot?: string;
    mitigationsExternalSourceContains?: string;
    mitigationsExternalSourceNotContains?: string;
    mitigationsExternalSourceBeginsWith?: string;
    mitigationsExternalSourceNotBeginsWith?: string;
    mitigationsExternalSourceEndsWith?: string;
    mitigationsExternalSourceNotEndsWith?: string;
    mitigationsExternalSourceIdNotExists?: boolean;
    mitigationsExternalSourceIdExists?: boolean;
    mitigationsExternalSourceId?: string;
    mitigationsExternalSourceIdNot?: string;
    mitigationsExternalSourceIdContains?: string;
    mitigationsExternalSourceIdNotContains?: string;
    mitigationsExternalSourceIdBeginsWith?: string;
    mitigationsExternalSourceIdNotBeginsWith?: string;
    mitigationsExternalSourceIdEndsWith?: string;
    mitigationsExternalSourceIdNotEndsWith?: string;
    mitigationsCategory?: string;
    mitigationsCategoryNot?: string;
    mitigationsCategoryAnyOf?: Array<'adjustment' | 'pharmacological' | 'procedure'>;
    mitigationsAdjustmentNotExists?: boolean;
    mitigationsAdjustmentExists?: boolean;
    mitigationsAdjustment?: string;
    mitigationsAdjustmentNot?: string;
    mitigationsAdjustmentAnyOf?: Array<string>;
    mitigationsAdjustmentNotAnyOf?: Array<string>;
    mitigationsAdjustmentDescendantsOf?: string;
    mitigationsDrugNotExists?: boolean;
    mitigationsDrugExists?: boolean;
    mitigationsDrug?: string;
    mitigationsDrugNot?: string;
    mitigationsDrugAnyOf?: Array<string>;
    mitigationsDrugNotAnyOf?: Array<string>;
    mitigationsDrugDescendantsOf?: string;
    mitigationsProcedureNotExists?: boolean;
    mitigationsProcedureExists?: boolean;
    mitigationsProcedure?: string;
    mitigationsProcedureNot?: string;
    mitigationsProcedureAnyOf?: Array<string>;
    mitigationsProcedureNotAnyOf?: Array<string>;
    mitigationsProcedureDescendantsOf?: string;
    mitigationsManagementNotExists?: boolean;
    mitigationsManagementExists?: boolean;
    mitigationsManagement?: string;
    mitigationsManagementNot?: string;
    mitigationsManagementAnyOf?: Array<string>;
    mitigationsManagementNotAnyOf?: Array<string>;
    mitigationsManagementDescendantsOf?: string;
    limit?: number;
    offset?: number;
}

export interface UpdateAdverseEventRequestParams {
    adverseEventId: string;
    adverseEventCreateSchema: AdverseEventCreateSchema;
}

export interface UpdateAdverseEventMitigationRequestParams {
    adverseEventId: string;
    mitigationId: string;
    adverseEventMitigationCreateSchema: AdverseEventMitigationCreateSchema;
}

export interface UpdateAdverseEventSuspectedCauseRequestParams {
    adverseEventId: string;
    causeId: string;
    adverseEventSuspectedCauseCreateSchema: AdverseEventSuspectedCauseCreateSchema;
}


export interface AdverseEventsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Adverse Event
     * 
* @param requestParameters
     */
    createAdverseEvent(requestParameters: CreateAdverseEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Create Adverse Event Mitigation
     * 
* @param requestParameters
     */
    createAdverseEventMitigation(requestParameters: CreateAdverseEventMitigationRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Create Adverse Event Suspected Cause
     * 
* @param requestParameters
     */
    createAdverseEventSuspectedCause(requestParameters: CreateAdverseEventSuspectedCauseRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Delete Adverse Event
     * 
* @param requestParameters
     */
    deleteAdverseEventById(requestParameters: DeleteAdverseEventByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete Adverse Event Mitigation
     * 
* @param requestParameters
     */
    deleteAdverseEventMitigation(requestParameters: DeleteAdverseEventMitigationRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete Adverse Event Suspected Cause
     * 
* @param requestParameters
     */
    deleteAdverseEventSuspectedCause(requestParameters: DeleteAdverseEventSuspectedCauseRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get Adverse Event By Id
     * 
* @param requestParameters
     */
    getAdverseEventById(requestParameters: GetAdverseEventByIdRequestParams, extraHttpRequestParams?: any): Observable<AdverseEventSchema>;

    /**
     * Get Adverse Event Mitigation By Id
     * 
* @param requestParameters
     */
    getAdverseEventMitigationById(requestParameters: GetAdverseEventMitigationByIdRequestParams, extraHttpRequestParams?: any): Observable<AdverseEventMitigationSchema>;

    /**
     * Get Adverse Event Mitigations Matching The Query
     * 
* @param requestParameters
     */
    getAdverseEventMitigations(requestParameters: GetAdverseEventMitigationsRequestParams, extraHttpRequestParams?: any): Observable<Array<AdverseEventMitigationSchema>>;

    /**
     * Get Adverse Event Suspected Cause By Id
     * 
* @param requestParameters
     */
    getAdverseEventSuspectedCauseById(requestParameters: GetAdverseEventSuspectedCauseByIdRequestParams, extraHttpRequestParams?: any): Observable<AdverseEventSuspectedCauseSchema>;

    /**
     * Get Adverse Event Suspected Causes Matching The Query
     * 
* @param requestParameters
     */
    getAdverseEventSuspectedCauses(requestParameters: GetAdverseEventSuspectedCausesRequestParams, extraHttpRequestParams?: any): Observable<Array<AdverseEventSuspectedCauseSchema>>;

    /**
     * Get All Adverse Events Matching The Query
     * 
* @param requestParameters
     */
    getAdverseEvents(requestParameters: GetAdverseEventsRequestParams, extraHttpRequestParams?: any): Observable<PaginatedAdverseEventSchema>;

    /**
     * Update Adverse Event
     * 
* @param requestParameters
     */
    updateAdverseEvent(requestParameters: UpdateAdverseEventRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Update Adverse Event Mitigation
     * 
* @param requestParameters
     */
    updateAdverseEventMitigation(requestParameters: UpdateAdverseEventMitigationRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Update Adverse Event Suspected Cause
     * 
* @param requestParameters
     */
    updateAdverseEventSuspectedCause(requestParameters: UpdateAdverseEventSuspectedCauseRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

}
