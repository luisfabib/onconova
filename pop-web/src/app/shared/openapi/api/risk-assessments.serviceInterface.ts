/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { PaginatedRiskAssessment } from '../model/models';
import { ResourceIdSchema } from '../model/models';
import { RiskAssessment } from '../model/models';
import { RiskAssessmentCreate } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface RiskAssessmentsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Risk Assessment
     * 
     * @param riskAssessmentCreate 
     */
    createRiskAssessment(riskAssessmentCreate: RiskAssessmentCreate, extraHttpRequestParams?: any): Observable<ResourceIdSchema>;

    /**
     * Delete Risk Assessment
     * 
     * @param riskAssessmentId 
     */
    deleteRiskAssessmentById(riskAssessmentId: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get Risk Assessment By Id
     * 
     * @param riskAssessmentId 
     */
    getRiskAssessmentById(riskAssessmentId: string, extraHttpRequestParams?: any): Observable<RiskAssessment>;

    /**
     * Get All Risk Assessments Matching The Query
     * 
     * @param caseId 
     * @param limit 
     * @param offset 
     */
    getRiskAssessments(caseId?: string, limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<PaginatedRiskAssessment>;

    /**
     * Update Risk Assessment
     * 
     * @param riskAssessmentId 
     * @param riskAssessmentCreate 
     */
    updateRiskAssessmentById(riskAssessmentId: string, riskAssessmentCreate: RiskAssessmentCreate, extraHttpRequestParams?: any): Observable<{}>;

}
