/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ModifiedResource } from '../model/models';
import { PaginatedUser } from '../model/models';
import { RefreshedTokenPair } from '../model/models';
import { TokenPair } from '../model/models';
import { TokenRefresh } from '../model/models';
import { User } from '../model/models';
import { UserCreate } from '../model/models';
import { UserCredentials } from '../model/models';
import { UserProfileSchema } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateUserRequestParams {
    userCreate: UserCreate;
}

export interface GetTokenPairRequestParams {
    userCredentials: UserCredentials;
}

export interface GetUserByIdRequestParams {
    userId: string;
}

export interface GetUsersRequestParams {
    limit?: number;
    offset?: number;
}

export interface RefreshTokenPairRequestParams {
    tokenRefresh: TokenRefresh;
}

export interface UpdateUserRequestParams {
    userId: string;
    userCreate: UserCreate;
}

export interface UpdateUserProfileRequestParams {
    userId: string;
    userProfileSchema: UserProfileSchema;
}


export interface AuthServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create User
     * 
* @param requestParameters
     */
    createUser(requestParameters: CreateUserRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Obtain Token Pair
     * 
* @param requestParameters
     */
    getTokenPair(requestParameters: GetTokenPairRequestParams, extraHttpRequestParams?: any): Observable<TokenPair>;

    /**
     * Get User By Id
     * 
* @param requestParameters
     */
    getUserById(requestParameters: GetUserByIdRequestParams, extraHttpRequestParams?: any): Observable<User>;

    /**
     * Get All Users Matching The Query
     * 
* @param requestParameters
     */
    getUsers(requestParameters: GetUsersRequestParams, extraHttpRequestParams?: any): Observable<PaginatedUser>;

    /**
     * Refresh Token Pair
     * 
* @param requestParameters
     */
    refreshTokenPair(requestParameters: RefreshTokenPairRequestParams, extraHttpRequestParams?: any): Observable<RefreshedTokenPair>;

    /**
     * Update User
     * 
* @param requestParameters
     */
    updateUser(requestParameters: UpdateUserRequestParams, extraHttpRequestParams?: any): Observable<User>;

    /**
     * Update User Profile
     * 
* @param requestParameters
     */
    updateUserProfile(requestParameters: UpdateUserProfileRequestParams, extraHttpRequestParams?: any): Observable<User>;

}
