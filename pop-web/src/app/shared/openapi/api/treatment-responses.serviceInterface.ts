/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ModifiedResource } from '../model/models';
import { PaginatedTreatmentResponse } from '../model/models';
import { TreatmentResponse } from '../model/models';
import { TreatmentResponseCreate } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateTreatmentResponseRequestParams {
    treatmentResponseCreate: TreatmentResponseCreate;
}

export interface DeleteTreatmentResponseRequestParams {
    treatmentRresponseId: string;
}

export interface GetTreatmentResponseByIdRequestParams {
    treatmentRresponseId: string;
}

export interface GetTreatmentResponsesRequestParams {
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    dateBefore?: string;
    dateAfter?: string;
    dateOnOrBefore?: string;
    dateOnOrAfter?: string;
    dateOn?: string;
    dateNotOn?: string;
    dateBetween?: Array<any>;
    dateNotBetween?: Array<any>;
    recist?: string;
    recistNot?: string;
    recistAnyOf?: Array<string>;
    recistNotAnyOf?: Array<string>;
    recistDescendantsOf?: string;
    recistInterpretedNotExists?: boolean;
    recistInterpretedExists?: boolean;
    recistInterpreted?: boolean;
    methodology?: string;
    methodologyNot?: string;
    methodologyAnyOf?: Array<string>;
    methodologyNotAnyOf?: Array<string>;
    methodologyDescendantsOf?: string;
    assessedEntitiesIds?: string;
    assessedEntitiesIdsNot?: string;
    assessedBodysitesCode?: string;
    assessedBodysitesCodeNot?: string;
    assessedBodysitesCodeContains?: string;
    assessedBodysitesCodeNotContains?: string;
    assessedBodysitesCodeBeginsWith?: string;
    assessedBodysitesCodeNotBeginsWith?: string;
    assessedBodysitesCodeEndsWith?: string;
    assessedBodysitesCodeNotEndsWith?: string;
    assessedBodysitesSystem?: string;
    assessedBodysitesSystemNot?: string;
    assessedBodysitesSystemContains?: string;
    assessedBodysitesSystemNotContains?: string;
    assessedBodysitesSystemBeginsWith?: string;
    assessedBodysitesSystemNotBeginsWith?: string;
    assessedBodysitesSystemEndsWith?: string;
    assessedBodysitesSystemNotEndsWith?: string;
    assessedBodysitesDisplayNotExists?: boolean;
    assessedBodysitesDisplayExists?: boolean;
    assessedBodysitesDisplay?: string;
    assessedBodysitesDisplayNot?: string;
    assessedBodysitesDisplayContains?: string;
    assessedBodysitesDisplayNotContains?: string;
    assessedBodysitesDisplayBeginsWith?: string;
    assessedBodysitesDisplayNotBeginsWith?: string;
    assessedBodysitesDisplayEndsWith?: string;
    assessedBodysitesDisplayNotEndsWith?: string;
    assessedBodysitesVersionNotExists?: boolean;
    assessedBodysitesVersionExists?: boolean;
    assessedBodysitesVersion?: string;
    assessedBodysitesVersionNot?: string;
    assessedBodysitesVersionContains?: string;
    assessedBodysitesVersionNotContains?: string;
    assessedBodysitesVersionBeginsWith?: string;
    assessedBodysitesVersionNotBeginsWith?: string;
    assessedBodysitesVersionEndsWith?: string;
    assessedBodysitesVersionNotEndsWith?: string;
    assessedBodysitesSynonymsNotExists?: boolean;
    assessedBodysitesSynonymsExists?: boolean;
    assessedBodysitesPropertiesNotExists?: boolean;
    assessedBodysitesPropertiesExists?: boolean;
    limit?: number;
    offset?: number;
}

export interface UpdateTreatmentResponseRequestParams {
    treatmentRresponseId: string;
    treatmentResponseCreate: TreatmentResponseCreate;
}


export interface TreatmentResponsesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Treatment Response
     * 
* @param requestParameters
     */
    createTreatmentResponse(requestParameters: CreateTreatmentResponseRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Treatment Response
     * 
* @param requestParameters
     */
    deleteTreatmentResponse(requestParameters: DeleteTreatmentResponseRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get Treatment Response By Id
     * 
* @param requestParameters
     */
    getTreatmentResponseById(requestParameters: GetTreatmentResponseByIdRequestParams, extraHttpRequestParams?: any): Observable<TreatmentResponse>;

    /**
     * Get All Treatment Responses Matching The Query
     * 
* @param requestParameters
     */
    getTreatmentResponses(requestParameters: GetTreatmentResponsesRequestParams, extraHttpRequestParams?: any): Observable<PaginatedTreatmentResponse>;

    /**
     * Update Treatment Response
     * 
* @param requestParameters
     */
    updateTreatmentResponse(requestParameters: UpdateTreatmentResponseRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
