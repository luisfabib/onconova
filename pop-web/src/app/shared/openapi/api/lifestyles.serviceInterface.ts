/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Lifestyle } from '../model/models';
import { LifestyleCreate } from '../model/models';
import { ModifiedResource } from '../model/models';
import { PaginatedLifestyle } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateLifestyleRequestParams {
    lifestyleCreate: LifestyleCreate;
}

export interface DeleteLifestyleByIdRequestParams {
    lifestyleId: string;
}

export interface GetLifestyleByIdRequestParams {
    lifestyleId: string;
}

export interface GetLifestylesRequestParams {
    id?: string;
    idNot?: string;
    idContains?: string;
    idNotContains?: string;
    idBeginsWith?: string;
    idNotBeginsWith?: string;
    idEndsWith?: string;
    idNotEndsWith?: string;
    caseId?: string;
    caseIdNot?: string;
    caseIdContains?: string;
    caseIdNotContains?: string;
    caseIdBeginsWith?: string;
    caseIdNotBeginsWith?: string;
    caseIdEndsWith?: string;
    caseIdNotEndsWith?: string;
    dateBefore?: string;
    dateAfter?: string;
    dateOnOrBefore?: string;
    dateOnOrAfter?: string;
    dateOn?: string;
    dateNotOn?: string;
    dateBetween?: Array<any>;
    dateNotBetween?: Array<any>;
    smokingStatusNotExists?: boolean;
    smokingStatusExists?: boolean;
    smokingStatus?: string;
    smokingStatusNot?: string;
    smokingStatusAnyOf?: Array<string>;
    smokingStatusNotAnyOf?: Array<string>;
    smokingStatusDescendantsOf?: string;
    smokingPackyearsNotExists?: boolean;
    smokingPackyearsExists?: boolean;
    smokingPackyearsLessThan?: number;
    smokingPackyearsLessThanOrEqual?: number;
    smokingPackyearsGreaterThan?: number;
    smokingPackyearsGreaterThanOrEqual?: number;
    smokingPackyearsEqual?: number;
    smokingPackyearsNotEqual?: number;
    smokingPackyearsBetween?: Array<any>;
    smokingPackyearsNotBetween?: Array<any>;
    smokingQuitedNotExists?: boolean;
    smokingQuitedExists?: boolean;
    smokingQuitedLessThan?: number;
    smokingQuitedLessThanOrEqual?: number;
    smokingQuitedGreaterThan?: number;
    smokingQuitedGreaterThanOrEqual?: number;
    smokingQuitedEqual?: number;
    smokingQuitedNotEqual?: number;
    smokingQuitedBetween?: Array<any>;
    smokingQuitedNotBetween?: Array<any>;
    alcoholConsumptionNotExists?: boolean;
    alcoholConsumptionExists?: boolean;
    alcoholConsumption?: string;
    alcoholConsumptionNot?: string;
    alcoholConsumptionAnyOf?: Array<string>;
    alcoholConsumptionNotAnyOf?: Array<string>;
    alcoholConsumptionDescendantsOf?: string;
    nightSleepNotExists?: boolean;
    nightSleepExists?: boolean;
    nightSleepLessThan?: number;
    nightSleepLessThanOrEqual?: number;
    nightSleepGreaterThan?: number;
    nightSleepGreaterThanOrEqual?: number;
    nightSleepEqual?: number;
    nightSleepNotEqual?: number;
    nightSleepBetween?: Array<any>;
    nightSleepNotBetween?: Array<any>;
    recreationalDrugsCode?: string;
    recreationalDrugsCodeNot?: string;
    recreationalDrugsCodeContains?: string;
    recreationalDrugsCodeNotContains?: string;
    recreationalDrugsCodeBeginsWith?: string;
    recreationalDrugsCodeNotBeginsWith?: string;
    recreationalDrugsCodeEndsWith?: string;
    recreationalDrugsCodeNotEndsWith?: string;
    recreationalDrugsSystem?: string;
    recreationalDrugsSystemNot?: string;
    recreationalDrugsSystemContains?: string;
    recreationalDrugsSystemNotContains?: string;
    recreationalDrugsSystemBeginsWith?: string;
    recreationalDrugsSystemNotBeginsWith?: string;
    recreationalDrugsSystemEndsWith?: string;
    recreationalDrugsSystemNotEndsWith?: string;
    recreationalDrugsDisplayNotExists?: boolean;
    recreationalDrugsDisplayExists?: boolean;
    recreationalDrugsDisplay?: string;
    recreationalDrugsDisplayNot?: string;
    recreationalDrugsDisplayContains?: string;
    recreationalDrugsDisplayNotContains?: string;
    recreationalDrugsDisplayBeginsWith?: string;
    recreationalDrugsDisplayNotBeginsWith?: string;
    recreationalDrugsDisplayEndsWith?: string;
    recreationalDrugsDisplayNotEndsWith?: string;
    recreationalDrugsVersionNotExists?: boolean;
    recreationalDrugsVersionExists?: boolean;
    recreationalDrugsVersion?: string;
    recreationalDrugsVersionNot?: string;
    recreationalDrugsVersionContains?: string;
    recreationalDrugsVersionNotContains?: string;
    recreationalDrugsVersionBeginsWith?: string;
    recreationalDrugsVersionNotBeginsWith?: string;
    recreationalDrugsVersionEndsWith?: string;
    recreationalDrugsVersionNotEndsWith?: string;
    recreationalDrugsSynonymsNotExists?: boolean;
    recreationalDrugsSynonymsExists?: boolean;
    recreationalDrugsPropertiesNotExists?: boolean;
    recreationalDrugsPropertiesExists?: boolean;
    exposuresCode?: string;
    exposuresCodeNot?: string;
    exposuresCodeContains?: string;
    exposuresCodeNotContains?: string;
    exposuresCodeBeginsWith?: string;
    exposuresCodeNotBeginsWith?: string;
    exposuresCodeEndsWith?: string;
    exposuresCodeNotEndsWith?: string;
    exposuresSystem?: string;
    exposuresSystemNot?: string;
    exposuresSystemContains?: string;
    exposuresSystemNotContains?: string;
    exposuresSystemBeginsWith?: string;
    exposuresSystemNotBeginsWith?: string;
    exposuresSystemEndsWith?: string;
    exposuresSystemNotEndsWith?: string;
    exposuresDisplayNotExists?: boolean;
    exposuresDisplayExists?: boolean;
    exposuresDisplay?: string;
    exposuresDisplayNot?: string;
    exposuresDisplayContains?: string;
    exposuresDisplayNotContains?: string;
    exposuresDisplayBeginsWith?: string;
    exposuresDisplayNotBeginsWith?: string;
    exposuresDisplayEndsWith?: string;
    exposuresDisplayNotEndsWith?: string;
    exposuresVersionNotExists?: boolean;
    exposuresVersionExists?: boolean;
    exposuresVersion?: string;
    exposuresVersionNot?: string;
    exposuresVersionContains?: string;
    exposuresVersionNotContains?: string;
    exposuresVersionBeginsWith?: string;
    exposuresVersionNotBeginsWith?: string;
    exposuresVersionEndsWith?: string;
    exposuresVersionNotEndsWith?: string;
    exposuresSynonymsNotExists?: boolean;
    exposuresSynonymsExists?: boolean;
    exposuresPropertiesNotExists?: boolean;
    exposuresPropertiesExists?: boolean;
    limit?: number;
    offset?: number;
}

export interface UpdateLifestyleByIdRequestParams {
    lifestyleId: string;
    lifestyleCreate: LifestyleCreate;
}


export interface LifestylesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Lifestyle
     * 
* @param requestParameters
     */
    createLifestyle(requestParameters: CreateLifestyleRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

    /**
     * Delete Lifestyle
     * 
* @param requestParameters
     */
    deleteLifestyleById(requestParameters: DeleteLifestyleByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get Lifestyle By Id
     * 
* @param requestParameters
     */
    getLifestyleById(requestParameters: GetLifestyleByIdRequestParams, extraHttpRequestParams?: any): Observable<Lifestyle>;

    /**
     * Get All Lifestyles Matching The Query
     * 
* @param requestParameters
     */
    getLifestyles(requestParameters: GetLifestylesRequestParams, extraHttpRequestParams?: any): Observable<PaginatedLifestyle>;

    /**
     * Update Lifestyle
     * 
* @param requestParameters
     */
    updateLifestyleById(requestParameters: UpdateLifestyleByIdRequestParams, extraHttpRequestParams?: any): Observable<ModifiedResource>;

}
