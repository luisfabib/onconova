/**
 * POP API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { PaginatedPatientCase } from '../model/models';
import { PatientCase } from '../model/models';
import { PatientCaseBundle } from '../model/models';
import { PatientCaseBundleCreate } from '../model/models';
import { PatientCaseCreate } from '../model/models';
import { PatientCaseDataCompletionStatusSchema } from '../model/models';
import { ModifiedResourceSchema } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface PatientCasesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Patient Case
     * 
     * @param patientCaseCreate 
     */
    createPatientCase(patientCaseCreate: PatientCaseCreate, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Create Patient Case Bundle
     * 
     * @param patientCaseBundleCreate 
     */
    createPatientCaseBundleById(patientCaseBundleCreate: PatientCaseBundleCreate, extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Create Patient Case Data Completion
     * 
     * @param caseId 
     * @param category 
     */
    createPatientCaseDataCompletion(caseId: string, category: 'comorbidities-assessments' | 'family-histories' | 'genomic-signatures' | 'genomic-variants' | 'lifestyles' | 'comorbidities' | 'neoplastic-entities' | 'performance-status' | 'radiotherapies' | 'risk-assessments' | 'stagings' | 'surgeries' | 'systemic-therapies' | 'tumor-markers' | 'vitals' | 'tumor-board-reviews' | 'adverse-events' | 'therapy-responses', extraHttpRequestParams?: any): Observable<ModifiedResourceSchema>;

    /**
     * Delete Patient Case
     * 
     * @param caseId 
     */
    deletePatientCaseById(caseId: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete Patient Case Data Completion
     * 
     * @param caseId 
     * @param category 
     */
    deletePatientCaseDataCompletion(caseId: string, category: 'comorbidities-assessments' | 'family-histories' | 'genomic-signatures' | 'genomic-variants' | 'lifestyles' | 'comorbidities' | 'neoplastic-entities' | 'performance-status' | 'radiotherapies' | 'risk-assessments' | 'stagings' | 'surgeries' | 'systemic-therapies' | 'tumor-markers' | 'vitals' | 'tumor-board-reviews' | 'adverse-events' | 'therapy-responses', extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get Patient Case Bundle By Id
     * 
     * @param caseId 
     */
    getPatientCaseBundleById(caseId: string, extraHttpRequestParams?: any): Observable<PatientCaseBundle>;

    /**
     * Get Patient Case By Id
     * 
     * @param caseId 
     */
    getPatientCaseById(caseId: string, extraHttpRequestParams?: any): Observable<PatientCase>;

    /**
     * Get Patient Case By Pseudoidentifier
     * 
     * @param pseudoidentifier 
     */
    getPatientCaseByPseudoidentifier(pseudoidentifier: string, extraHttpRequestParams?: any): Observable<PatientCase>;

    /**
     * Get Patient Case Data Completion Status
     * 
     * @param caseId 
     * @param category 
     */
    getPatientCaseDataCompletionStatus(caseId: string, category: 'comorbidities-assessments' | 'family-histories' | 'genomic-signatures' | 'genomic-variants' | 'lifestyles' | 'comorbidities' | 'neoplastic-entities' | 'performance-status' | 'radiotherapies' | 'risk-assessments' | 'stagings' | 'surgeries' | 'systemic-therapies' | 'tumor-markers' | 'vitals' | 'tumor-board-reviews' | 'adverse-events' | 'therapy-responses', extraHttpRequestParams?: any): Observable<PatientCaseDataCompletionStatusSchema>;

    /**
     * Get All Patient Cases Matching The Query
     * 
     * @param ageLte 
     * @param ageGte 
     * @param pseudoidentifier 
     * @param manager 
     * @param deceased 
     * @param gender 
     * @param born 
     * @param limit 
     * @param offset 
     */
    getPatientCases(ageLte?: number, ageGte?: number, pseudoidentifier?: string, manager?: string, deceased?: boolean, gender?: Array<'male' | 'female' | 'unknown'>, born?: string, limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<PaginatedPatientCase>;

    /**
     * Update Patient Case
     * 
     * @param caseId 
     * @param patientCaseCreate 
     */
    updatePatientCaseById(caseId: string, patientCaseCreate: PatientCaseCreate, extraHttpRequestParams?: any): Observable<{}>;

}
