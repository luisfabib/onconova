# Generated by Django 5.1 on 2025-08-28 08:52

import django.contrib.postgres.fields
import django.contrib.postgres.fields.ranges
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CancerMorphology',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancermorphology')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerMorphologyMetastatic',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('terminology.cancermorphology',),
        ),
        migrations.CreateModel(
            name='CancerMorphologyPrimary',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('terminology.cancermorphology',),
        ),
        migrations.CreateModel(
            name='CancerTopography',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancertopography')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerTopographyGroup',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('terminology.cancertopography',),
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.gene')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GeneExon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('rank', models.IntegerField()),
                ('coding_dna_region', django.contrib.postgres.fields.ranges.IntegerRangeField()),
                ('coding_genomic_region', django.contrib.postgres.fields.ranges.IntegerRangeField()),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exons', to='terminology.gene')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TumorBoardRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tumorboardrecommendation')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MolecularTumorBoardRecommendation',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('terminology.tumorboardrecommendation',),
        ),
        migrations.CreateModel(
            name='AdjunctiveTherapyRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adjunctivetherapyrole')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdministrativeGender',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.administrativegender')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventMitigationDrug',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventmitigationdrug')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventMitigationManagement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventmitigationmanagement')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventMitigationProcedure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventmitigationprocedure')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventMitigationTreatmentAdjustment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventmitigationtreatmentadjustment')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventTerm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventterm')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AlcoholConsumptionFrequency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.alcoholconsumptionfrequency')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AminoAcidChangeType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.aminoacidchangetype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AntineoplasticAgent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('therapy_category', models.CharField(blank=True, choices=[('chemotherapy', 'Chemotherapy'), ('immunotherapy', 'Immunotherapy'), ('hormone-therapy', 'Hormone Therapy'), ('targeted-therapy', 'Targeted Therapy'), ('antimetastatic_therapy', 'Antimetastatic Therapy'), ('metabolic-therapy', 'Metabolic Therapy'), ('radiopharmaceutical-therapy', 'Radiopharmaceutical Therapy'), ('unclassified', 'Unclassified')], default='unclassified', help_text='Therapy classification', max_length=50, null=True, verbose_name='Therapy classification')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.antineoplasticagent')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BinetStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.binetstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BirthSex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.birthsex')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BodyLocationQualifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.bodylocationqualifier')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BreslowDepthStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.breslowdepthstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerRiskAssessmentClassification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancerriskassessmentclassification')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerRiskAssessmentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancerriskassessmentmethod')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerTreatmentResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancertreatmentresponse')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerTreatmentResponseObservationMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancertreatmentresponseobservationmethod')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CauseOfDeath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.causeofdeath')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ChromosomeIdentifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.chromosomeidentifier')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ClarkLevel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.clarklevel')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ClinOrPathModifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.clinorpathmodifier')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='DnaChangeType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.dnachangetype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='DosageRoute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.dosageroute')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ECOGPerformanceStatusInterpretation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.ecogperformancestatusinterpretation')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ExpectedDrugAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.expecteddrugaction')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ExposureAgent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.exposureagent')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='FamilyMemberType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.familymembertype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='FIGOStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.figostage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='FIGOStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.figostagingmethod')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GenderIdentity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.genderidentity')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GeneticVariantSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.geneticvariantsource')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GenomicCoordinateSystem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.genomiccoordinatesystem')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GleasonGradeGroupStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.gleasongradegroupstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='HistologyDifferentiation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.histologydifferentiation')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ICD10Condition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.icd10condition')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='KarnofskyPerformanceStatusInterpretation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.karnofskyperformancestatusinterpretation')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='LateralityQualifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.lateralityqualifier')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='LymphomaStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.lymphomastage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='LymphomaStageValueModifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.lymphomastagevaluemodifier')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='LymphomaStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.lymphomastagingmethod')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MicrosatelliteInstabilityState',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.microsatelliteinstabilitystate')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MolecularConsequence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.molecularconsequence')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MyelomaISSStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.myelomaissstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MyelomaRISSStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.myelomarissstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='NeuroblastomaINRGSSStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.neuroblastomainrgssstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='NeuroblastomaINSSStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.neuroblastomainssstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ObservationBodySite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.observationbodysite')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ProcedureOutcome',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.procedureoutcome')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.race')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyModality',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapymodality')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyTechnique',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapytechnique')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyTreatmentLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapytreatmentlocation')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyTreatmentLocationQualifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapytreatmentlocationqualifier')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyVolumeType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapyvolumetype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RaiStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.raistage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RaiStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.raistagingmethod')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RecreationalDrug',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.recreationaldrug')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ReferenceGenomeBuild',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.referencegenomebuild')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RhabdomyosarcomaClinicalGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.rhabdomyosarcomaclinicalgroup')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='SmokingStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.smokingstatus')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='StructuralVariantAnalysisMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.structuralvariantanalysismethod')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='SurgicalProcedure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.surgicalprocedure')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMDistantMetastasesCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmdistantmetastasescategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMDistantMetastasesStagingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmdistantmetastasesstagingtype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMGradeCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmgradecategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMLymphaticInvasionCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmlymphaticinvasioncategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMPerineuralInvasionCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmperineuralinvasioncategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMPrimaryTumorCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmprimarytumorcategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMPrimaryTumorStagingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmprimarytumorstagingtype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMRegionalNodesCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmregionalnodescategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMRegionalNodesStagingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmregionalnodesstagingtype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMResidualTumorCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmresidualtumorcategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMSerumTumorMarkerLevelCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmserumtumormarkerlevelcategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmstagingmethod')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMVenousInvasionCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmvenousinvasioncategory')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TreatmentTerminationReason',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.treatmentterminationreason')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TumorMarkerAnalyte',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tumormarkeranalyte')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='VariantInheritance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.variantinheritance')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='WilmsTumorStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.wilmstumorstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='Zygosity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier of the resource (UUID v4).', primary_key=True, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.zygosity')),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
    ]
