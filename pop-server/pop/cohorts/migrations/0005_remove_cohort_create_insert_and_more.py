# Generated by Django 5.1 on 2025-06-11 16:12

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cohorts', '0004_remove_cohort_create_insert_and_more'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='cohort',
            name='create_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='cohort',
            name='update_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='cohort',
            name='delete_delete',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='dataset',
            name='create_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='dataset',
            name='update_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='dataset',
            name='delete_delete',
        ),
        migrations.AlterField(
            model_name='cohortevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='cohorts.cohort'),
        ),
        migrations.AlterField(
            model_name='datasetevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='cohorts.dataset'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cohort',
            trigger=pgtrigger.compiler.Trigger(name='create_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cohorts_cohortevent" ("exclude_criteria", "external_source", "external_source_id", "id", "include_criteria", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id") VALUES (NEW."exclude_criteria", NEW."external_source", NEW."external_source_id", NEW."id", NEW."include_criteria", NEW."is_public", NEW."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'create\', NEW."id", NEW."project_id"); RETURN NULL;', hash='5f4b27dc059b19fcf524c8d71dac07773e5d2cfc', operation='INSERT', pgid='pgtrigger_create_insert_b2b04', table='cohorts_cohort', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cohort',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cohorts_cohortevent" ("exclude_criteria", "external_source", "external_source_id", "id", "include_criteria", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id") VALUES (NEW."exclude_criteria", NEW."external_source", NEW."external_source_id", NEW."id", NEW."include_criteria", NEW."is_public", NEW."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'update\', NEW."id", NEW."project_id"); RETURN NULL;', hash='788ff36c45747a4c18bbea883ad1b3a6f360106a', operation='UPDATE', pgid='pgtrigger_update_update_09318', table='cohorts_cohort', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cohort',
            trigger=pgtrigger.compiler.Trigger(name='delete_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cohorts_cohortevent" ("exclude_criteria", "external_source", "external_source_id", "id", "include_criteria", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id") VALUES (OLD."exclude_criteria", OLD."external_source", OLD."external_source_id", OLD."id", OLD."include_criteria", OLD."is_public", OLD."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'delete\', OLD."id", OLD."project_id"); RETURN NULL;', hash='96096381733b50f2a83e6e60855dd0dbe5dbbe05', operation='DELETE', pgid='pgtrigger_delete_delete_c354a', table='cohorts_cohort', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='dataset',
            trigger=pgtrigger.compiler.Trigger(name='create_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cohorts_datasetevent" ("external_source", "external_source_id", "id", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "rules") VALUES (NEW."external_source", NEW."external_source_id", NEW."id", NEW."is_public", NEW."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'create\', NEW."id", NEW."rules"); RETURN NULL;', hash='9c974c2d237a0ca027275ac0201d3f49f392565c', operation='INSERT', pgid='pgtrigger_create_insert_44522', table='cohorts_dataset', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='dataset',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cohorts_datasetevent" ("external_source", "external_source_id", "id", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "rules") VALUES (NEW."external_source", NEW."external_source_id", NEW."id", NEW."is_public", NEW."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'update\', NEW."id", NEW."rules"); RETURN NULL;', hash='7ff1182919c24fd6e99a0bb5436092bd29326891', operation='UPDATE', pgid='pgtrigger_update_update_d7a21', table='cohorts_dataset', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='dataset',
            trigger=pgtrigger.compiler.Trigger(name='delete_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cohorts_datasetevent" ("external_source", "external_source_id", "id", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "rules") VALUES (OLD."external_source", OLD."external_source_id", OLD."id", OLD."is_public", OLD."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'delete\', OLD."id", OLD."rules"); RETURN NULL;', hash='5ee11734e145075019d626066fe1135208165c5a', operation='DELETE', pgid='pgtrigger_delete_delete_16064', table='cohorts_dataset', when='AFTER')),
        ),
    ]
