# Generated by Django 5.1 on 2025-05-26 13:57

import django.contrib.postgres.fields.ranges
import django.db.models.deletion
import pghistory.utils
import pgtrigger.compiler
import pgtrigger.migrations
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0003_projectdatamanagergrant_revoked'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectDataManagerGrantEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('pgh_context', pghistory.utils.JSONField(null=True)),
                ('pgh_context_id', models.UUIDField(null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('revoked', models.BooleanField(default=False, help_text='A flag that indicated whether the authorization has been revoked', verbose_name='Revoked')),
                ('validity_period', django.contrib.postgres.fields.ranges.DateRangeField(help_text='Period of validity', verbose_name='Validity period')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveConstraint(
            model_name='projectdatamanagergrant',
            name='expiration_date_must_be_in_future',
        ),
        migrations.RemoveField(
            model_name='projectdatamanagergrant',
            name='granted_at',
        ),
        migrations.RemoveField(
            model_name='projectdatamanagergrant',
            name='granted_by',
        ),
        migrations.AlterField(
            model_name='projectdatamanagergrant',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='projectdatamanagergrant',
            trigger=pgtrigger.compiler.Trigger(name='create_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "projects_projectdatamanagergrantevent" ("external_source", "external_source_id", "id", "member_id", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id", "revoked", "validity_period") VALUES (NEW."external_source", NEW."external_source_id", NEW."id", NEW."member_id", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'create\', NEW."id", NEW."project_id", NEW."revoked", NEW."validity_period"); RETURN NULL;', hash='cab44465f14bfbe26d77ce75afdfc79bfbbdefec', operation='INSERT', pgid='pgtrigger_create_insert_d145e', table='projects_projectdatamanagergrant', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='projectdatamanagergrant',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "projects_projectdatamanagergrantevent" ("external_source", "external_source_id", "id", "member_id", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id", "revoked", "validity_period") VALUES (NEW."external_source", NEW."external_source_id", NEW."id", NEW."member_id", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'update\', NEW."id", NEW."project_id", NEW."revoked", NEW."validity_period"); RETURN NULL;', hash='17bcec6eb3692316b7006bf31dc0200ef5ec2078', operation='UPDATE', pgid='pgtrigger_update_update_dc0c8', table='projects_projectdatamanagergrant', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='projectdatamanagergrant',
            trigger=pgtrigger.compiler.Trigger(name='delete_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "projects_projectdatamanagergrantevent" ("external_source", "external_source_id", "id", "member_id", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id", "revoked", "validity_period") VALUES (OLD."external_source", OLD."external_source_id", OLD."id", OLD."member_id", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'delete\', OLD."id", OLD."project_id", OLD."revoked", OLD."validity_period"); RETURN NULL;', hash='ece2bf399acaec7ed51f2737271803117bb56c62', operation='DELETE', pgid='pgtrigger_delete_delete_a1b8a', table='projects_projectdatamanagergrant', when='AFTER')),
        ),
        migrations.AddField(
            model_name='projectdatamanagergrantevent',
            name='member',
            field=models.ForeignKey(db_constraint=False, help_text='Manager of the project data', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Manager'),
        ),
        migrations.AddField(
            model_name='projectdatamanagergrantevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='projects.projectdatamanagergrant'),
        ),
        migrations.AddField(
            model_name='projectdatamanagergrantevent',
            name='project',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='projects.project'),
        ),
    ]
