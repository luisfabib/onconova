# Generated by Django 5.1 on 2025-05-27 07:07

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('analytics', '0003_cohortevent_datasetevent_remove_cohort_created_at_and_more'),
        ('projects', '0004_projectdatamanagergrantevent_and_more'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='cohort',
            name='create_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='cohort',
            name='update_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='cohort',
            name='delete_delete',
        ),
        migrations.AddField(
            model_name='cohort',
            name='project',
            field=models.ForeignKey(blank=True, help_text='Project to which the cohort is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cohorts', to='projects.project', verbose_name='Project'),
        ),
        migrations.AddField(
            model_name='cohortevent',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Project to which the cohort is associated', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='projects.project', verbose_name='Project'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cohort',
            trigger=pgtrigger.compiler.Trigger(name='create_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "analytics_cohortevent" ("exclude_criteria", "external_source", "external_source_id", "id", "include_criteria", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id") VALUES (NEW."exclude_criteria", NEW."external_source", NEW."external_source_id", NEW."id", NEW."include_criteria", NEW."is_public", NEW."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'create\', NEW."id", NEW."project_id"); RETURN NULL;', hash='8a131c99c7e7dd1cf69e6e0cc35eef0d8c0b8d7f', operation='INSERT', pgid='pgtrigger_create_insert_b100e', table='analytics_cohort', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cohort',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "analytics_cohortevent" ("exclude_criteria", "external_source", "external_source_id", "id", "include_criteria", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id") VALUES (NEW."exclude_criteria", NEW."external_source", NEW."external_source_id", NEW."id", NEW."include_criteria", NEW."is_public", NEW."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'update\', NEW."id", NEW."project_id"); RETURN NULL;', hash='7e8596f48fa139ee103f3e7fdef0170dc8893f4b', operation='UPDATE', pgid='pgtrigger_update_update_198ab', table='analytics_cohort', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cohort',
            trigger=pgtrigger.compiler.Trigger(name='delete_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "analytics_cohortevent" ("exclude_criteria", "external_source", "external_source_id", "id", "include_criteria", "is_public", "name", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "project_id") VALUES (OLD."exclude_criteria", OLD."external_source", OLD."external_source_id", OLD."id", OLD."include_criteria", OLD."is_public", OLD."name", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'delete\', OLD."id", OLD."project_id"); RETURN NULL;', hash='0a5ae2ee2cca54793a567934c11a65bd2bcfe634', operation='DELETE', pgid='pgtrigger_delete_delete_8a49f', table='analytics_cohort', when='AFTER')),
        ),
    ]
