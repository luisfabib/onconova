# Generated by Django 5.1 on 2025-07-14 14:20

import django.contrib.postgres.fields
import django.contrib.postgres.fields.ranges
import django.core.validators
import django.db.models.deletion
import django.db.models.fields
import django.db.models.functions.text
import measurement.measures.distance
import measurement.measures.mass
import pop.core.measures.fields
import pop.core.measures.measures
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('oncology', '0017_alter_breslowdepth_depth_and_more'),
        ('terminology', '0009_alter_geneexon_gene'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='vitals',
            name='body_mass_index',
        ),
        migrations.RemoveField(
            model_name='vitalsevent',
            name='body_mass_index',
        ),
        migrations.AlterField(
            model_name='adverseeventevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the case of the patient who had the adverse event being recorded', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='adverseeventevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date at which the adverse event ocurred.', null=True, verbose_name='Event date'),
        ),
        migrations.AlterField(
            model_name='adverseeventevent',
            name='event',
            field=models.ForeignKey(db_constraint=False, help_text='Classification of the adverse event using CTCAE criteria', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.adverseeventterm', verbose_name='Adverse event'),
        ),
        migrations.AlterField(
            model_name='adverseeventevent',
            name='grade',
            field=models.PositiveSmallIntegerField(help_text='The grade associated with the severity of an adverse event, using CTCAE criteria.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Grade'),
        ),
        migrations.AlterField(
            model_name='adverseeventevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='adverseeventevent',
            name='is_resolved',
            field=models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('outcome', 'resolved'), ('outcome', 'resolved-with-sequelae'), _connector='OR'), then=models.Value(True)), default=models.Value(False), output_field=models.BooleanField()), help_text='Indicates whether the adverse event has been resolved', null=True, output_field=models.BooleanField(), verbose_name='Is resolved'),
        ),
        migrations.AlterField(
            model_name='adverseeventevent',
            name='outcome',
            field=models.CharField(choices=[('resolved', 'Resolved'), ('resolved-with-sequelae', 'Resolved With Sequelae'), ('recovering', 'Recovering'), ('ongoing', 'Ongoind'), ('fatal', 'Fatal'), ('unknown', 'Unknown')], help_text='The date when the adverse event ended or returned to baseline.', max_length=50, null=True, verbose_name='Date resolved'),
        ),
        migrations.AlterField(
            model_name='adverseeventevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.adverseevent'),
        ),
        migrations.AlterField(
            model_name='adverseeventmitigationevent',
            name='adverse_event',
            field=models.ForeignKey(db_constraint=False, help_text='Adverse event to which this mitigation belongs to', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.adverseevent', verbose_name='Adverse event'),
        ),
        migrations.AlterField(
            model_name='adverseeventmitigationevent',
            name='category',
            field=models.CharField(choices=[('adjustment', 'Adjustment'), ('pharmacological', 'Pharmacological'), ('procedure', 'Procedire')], help_text='Type of mitigation employed', max_length=50, null=True, verbose_name='Mitigation category'),
        ),
        migrations.AlterField(
            model_name='adverseeventmitigationevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='adverseeventmitigationevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.adverseeventmitigation'),
        ),
        migrations.AlterField(
            model_name='adverseeventsuspectedcauseevent',
            name='adverse_event',
            field=models.ForeignKey(db_constraint=False, help_text='Adverse event to which this suspected cause belongs to', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.adverseevent', verbose_name='Adverse event'),
        ),
        migrations.AlterField(
            model_name='adverseeventsuspectedcauseevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='adverseeventsuspectedcauseevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.adverseeventsuspectedcause'),
        ),
        migrations.AlterField(
            model_name='aneuploidscoreevent',
            name='genomic_signature',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.genomicsignature'),
        ),
        migrations.AlterField(
            model_name='aneuploidscoreevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.aneuploidscore'),
        ),
        migrations.AlterField(
            model_name='aneuploidscoreevent',
            name='value',
            field=models.SmallIntegerField(help_text='The actual aneuploid score (AS) value in total altered arms', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(39)], verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='binetstagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.binetstaging'),
        ),
        migrations.AlterField(
            model_name='binetstagingevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the Binet stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.binetstage', verbose_name='Binet Stage'),
        ),
        migrations.AlterField(
            model_name='binetstagingevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='breslowdepth',
            name='depth',
            field=pop.core.measures.fields.MeasurementField(default_unit='mm', help_text='Breslow depth', measurement=measurement.measures.distance.Distance, verbose_name='Breslow depth'),
        ),
        migrations.AlterField(
            model_name='breslowdepthevent',
            name='depth',
            field=pop.core.measures.fields.MeasurementField(default_unit='mm', help_text='Breslow depth', measurement=measurement.measures.distance.Distance, null=True, verbose_name='Breslow depth'),
        ),
        migrations.AlterField(
            model_name='breslowdepthevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.breslowdepth'),
        ),
        migrations.AlterField(
            model_name='breslowdepthevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='clarkstagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.clarkstaging'),
        ),
        migrations.AlterField(
            model_name='clarkstagingevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the Clark level stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.clarklevel', verbose_name='Clark Level Stage'),
        ),
        migrations.AlterField(
            model_name='clarkstagingevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='comorbiditiesassessmentevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's comorbidities are being recorded", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='comorbiditiesassessmentevent',
            name='date',
            field=models.DateField(help_text="Clinically-relevant date at which the patient's comorbidities were assessed and recorded.", null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='comorbiditiesassessmentevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='comorbiditiesassessmentevent',
            name='index_condition',
            field=models.ForeignKey(db_constraint=False, help_text='The primary neoplastic entity against which comorbidities are assessed', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.neoplasticentity', verbose_name='Index neoplastic entity'),
        ),
        migrations.AlterField(
            model_name='comorbiditiesassessmentevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.comorbiditiesassessment'),
        ),
        migrations.AlterField(
            model_name='familyhistoryevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's family's history is being recorded", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='familyhistoryevent',
            name='date',
            field=models.DateField(help_text="Clinically-relevant date at which the patient's family history was assessed and recorded.", null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='familyhistoryevent',
            name='had_cancer',
            field=models.BooleanField(help_text='Whether the family member has a history of cancer', null=True, verbose_name='Had cancer'),
        ),
        migrations.AlterField(
            model_name='familyhistoryevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='familyhistoryevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.familyhistory'),
        ),
        migrations.AlterField(
            model_name='familyhistoryevent',
            name='relationship',
            field=models.ForeignKey(db_constraint=False, help_text='Relationship to the patient', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.familymembertype', verbose_name='Relationship'),
        ),
        migrations.AlterField(
            model_name='figostagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.figostaging'),
        ),
        migrations.AlterField(
            model_name='figostagingevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the FIGO stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.figostage', verbose_name='FIGO Stage'),
        ),
        migrations.AlterField(
            model_name='figostagingevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='genomicsignatureevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's lifestyle is assesed", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='genomicsignatureevent',
            name='date',
            field=models.DateField(help_text="Clinically-relevant date at which the patient's genomic signature was assessed.", null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='genomicsignatureevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='genomicsignatureevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parent_events', related_query_name='parent_events', to='oncology.genomicsignature'),
        ),
        migrations.AlterField(
            model_name='genomicvariantevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who' genomic variant is described", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='genomicvariantevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date of the genomic variant (e.g. the specimen collection date).', null=True, verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='genomicvariantevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='genomicvariantevent',
            name='is_pathogenic',
            field=models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('clinical_relevance__isnull', True)), then=models.Value(None)), models.When(models.Q(('clinical_relevance', 'likely_pathogenic'), ('clinical_relevance', 'pathogenic'), _connector='OR'), then=models.Value(True)), default=models.Value(False), output_field=models.BooleanField()), help_text='Indicates if the variant is pathogenic (determined automatically based on the clinical relevance classification)', null=True, output_field=models.BooleanField(), verbose_name='Is pathogenic'),
        ),
        migrations.AlterField(
            model_name='genomicvariantevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.genomicvariant'),
        ),
        migrations.AlterField(
            model_name='gleasongradeevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.gleasongrade'),
        ),
        migrations.AlterField(
            model_name='gleasongradeevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the Gleason grade stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.gleasongradegroupstage', verbose_name='Gleason grade Stage'),
        ),
        migrations.AlterField(
            model_name='gleasongradeevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='homologousrecombinationdeficiencyevent',
            name='genomic_signature',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.genomicsignature'),
        ),
        migrations.AlterField(
            model_name='homologousrecombinationdeficiencyevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.homologousrecombinationdeficiency'),
        ),
        migrations.AlterField(
            model_name='inrgssstageevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.inrgssstage'),
        ),
        migrations.AlterField(
            model_name='inrgssstageevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the INRGSS stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.neuroblastomainrgssstage', verbose_name='INRGSS Stage'),
        ),
        migrations.AlterField(
            model_name='inrgssstageevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='inssstageevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.inssstage'),
        ),
        migrations.AlterField(
            model_name='inssstageevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the INSS stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.neuroblastomainssstage', verbose_name='INSS Stage'),
        ),
        migrations.AlterField(
            model_name='inssstageevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='issstagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.issstaging'),
        ),
        migrations.AlterField(
            model_name='issstagingevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of theISS stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.myelomaissstage', verbose_name='ISS Stage'),
        ),
        migrations.AlterField(
            model_name='issstagingevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='lifestyle',
            name='night_sleep',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='hour', help_text='Estimated average sleep time per night', measurement=pop.core.measures.measures.Time, null=True, verbose_name='Night sleep'),
        ),
        migrations.AlterField(
            model_name='lifestyle',
            name='smoking_quited',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='year', help_text='Estimated time since quitting smoking (if applicable)', measurement=pop.core.measures.measures.Time, null=True, verbose_name='Time since quitted smoking'),
        ),
        migrations.AlterField(
            model_name='lifestyleevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's lifestyle is assesed", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='lifestyleevent',
            name='date',
            field=models.DateField(help_text="Clinically-relevant date at which the patient's lifetyle was assessed and recorded.", null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='lifestyleevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='lifestyleevent',
            name='night_sleep',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='hour', help_text='Estimated average sleep time per night', measurement=pop.core.measures.measures.Time, null=True, verbose_name='Night sleep'),
        ),
        migrations.AlterField(
            model_name='lifestyleevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.lifestyle'),
        ),
        migrations.AlterField(
            model_name='lifestyleevent',
            name='smoking_quited',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='year', help_text='Estimated time since quitting smoking (if applicable)', measurement=pop.core.measures.measures.Time, null=True, verbose_name='Time since quitted smoking'),
        ),
        migrations.AlterField(
            model_name='lossofheterozygosityevent',
            name='genomic_signature',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.genomicsignature'),
        ),
        migrations.AlterField(
            model_name='lossofheterozygosityevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.lossofheterozygosity'),
        ),
        migrations.AlterField(
            model_name='lossofheterozygosityevent',
            name='value',
            field=models.FloatField(help_text='Loss of heterozygosity (LOH) as a percentage', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='lymphomastagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.lymphomastaging'),
        ),
        migrations.AlterField(
            model_name='lymphomastagingevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the Lymphoma stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.lymphomastage', verbose_name='Lymphoma Stage'),
        ),
        migrations.AlterField(
            model_name='lymphomastagingevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='microsatelliteinstabilityevent',
            name='genomic_signature',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.genomicsignature'),
        ),
        migrations.AlterField(
            model_name='microsatelliteinstabilityevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.microsatelliteinstability'),
        ),
        migrations.AlterField(
            model_name='microsatelliteinstabilityevent',
            name='value',
            field=models.ForeignKey(db_constraint=False, help_text='Microsatellite instability (MSI) classification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.microsatelliteinstabilitystate', verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='moleculartherapeuticrecommendationevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='moleculartherapeuticrecommendationevent',
            name='molecular_tumor_board',
            field=models.ForeignKey(db_constraint=False, help_text='Molecular tumor board where the recommendation was issued', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.moleculartumorboard', verbose_name='Molecular tumor board'),
        ),
        migrations.AlterField(
            model_name='moleculartherapeuticrecommendationevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.moleculartherapeuticrecommendation'),
        ),
        migrations.AlterField(
            model_name='moleculartumorboardevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.moleculartumorboard'),
        ),
        migrations.AlterField(
            model_name='moleculartumorboardevent',
            name='reviewed_reports',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), blank=True, default=list, null=True, size=None, verbose_name='Reviewed genomics reports'),
        ),
        migrations.AlterField(
            model_name='moleculartumorboardevent',
            name='tumor_board',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.tumorboard'),
        ),
        migrations.AlterField(
            model_name='neoplasticentityevent',
            name='assertion_date',
            field=models.DateField(help_text='The date on which the existence of the neoplasm(s) was first asserted or acknowledged', null=True, verbose_name='Assertion date'),
        ),
        migrations.AlterField(
            model_name='neoplasticentityevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's neoplasm(s) are recorded", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='neoplasticentityevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='neoplasticentityevent',
            name='morphology',
            field=models.ForeignKey(db_constraint=False, help_text='Describes the cell type of the tumor and its biologic activity, in other words, the characteristics of the tumor itself', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.cancermorphology', verbose_name='Morphology'),
        ),
        migrations.AlterField(
            model_name='neoplasticentityevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.neoplasticentity'),
        ),
        migrations.AlterField(
            model_name='neoplasticentityevent',
            name='relationship',
            field=models.CharField(choices=[('primary', 'Primary'), ('metastatic', 'Metastatic'), ('local_recurrence', 'Local Recurrence'), ('regional_recurrence', 'Regional Recurrence')], help_text='Relationship linking secondary and recurrent tumors to their primary origin or for distinguishing between different phases of the disease.', max_length=30, null=True, verbose_name='Neoplastic relationship'),
        ),
        migrations.AlterField(
            model_name='neoplasticentityevent',
            name='topography',
            field=models.ForeignKey(db_constraint=False, help_text='Anatomical location of the neoplasm(s)', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.cancertopography', verbose_name='Topography'),
        ),
        migrations.AlterField(
            model_name='patientcasedatacompletionevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Patient case who's data category has been marked as completed.", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='patientcasedatacompletionevent',
            name='category',
            field=models.CharField(blank=True, choices=[('comorbidities-assessments', 'Comorbidities Assessments'), ('family-histories', 'Family Histories'), ('genomic-signatures', 'Genomic Signatures'), ('genomic-variants', 'Genomic Variants'), ('lifestyles', 'Lifestyles'), ('comorbidities', 'Comorbidities'), ('neoplastic-entities', 'Neoplastic Entities'), ('performance-status', 'Performance Status'), ('radiotherapies', 'Radiotherapies'), ('risk-assessments', 'Risk Assessments'), ('stagings', 'Stagins'), ('surgeries', 'Surgeries'), ('systemic-therapies', 'Systemic Therapies'), ('tumor-markers', 'Tumor Markers'), ('vitals', 'Vitals'), ('tumor-board-reviews', 'Tumor Board Reviews'), ('adverse-events', 'Adverse Events'), ('therapy-responses', 'Therapy Responses')], help_text='Indicates the categories of a patient case, whose data entries are deemed to be complete and/or up-to-date with the primary records.', max_length=500, null=True, verbose_name='Finalized data category'),
        ),
        migrations.AlterField(
            model_name='patientcasedatacompletionevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='patientcasedatacompletionevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.patientcasedatacompletion'),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='clinical_center',
            field=models.CharField(help_text='Medical center where the patient data originally resides', max_length=200, null=True, verbose_name='Medical center'),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='clinical_identifier',
            field=models.CharField(help_text='Unique clinical identifier (typically the clinical information system identifier) unique for a physical patient', max_length=100, null=True, verbose_name='Clinical identifier'),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='consent_status',
            field=models.CharField(choices=[('valid', 'Valid'), ('revoked', 'Revoked'), ('unknown', 'Unknown')], default='unknown', help_text='Status of the general consent by the patient for the use of their data for research purposes', max_length=20, null=True, verbose_name='Consent status'),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='date_of_birth',
            field=models.DateField(help_text='Anonymized date of birth (year/month). The day is set to the first day of the month by convention.', null=True, verbose_name='Date of birth'),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='gender',
            field=models.ForeignKey(db_constraint=False, help_text='Gender for administrative purposes', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.administrativegender', verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='is_deceased',
            field=models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('date_of_death__isnull', False), ('cause_of_death__isnull', False), _connector='OR'), then=models.Value(True)), default=models.Value(False), output_field=models.BooleanField()), help_text='Indicates if the individual is deceased or not (determined automatically based on existence of a date of death)', null=True, output_field=models.BooleanField(), verbose_name='Is deceased'),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.patientcase'),
        ),
        migrations.AlterField(
            model_name='patientcaseevent',
            name='pseudoidentifier',
            field=models.CharField(editable=False, help_text='Pseudoidentifier of the patient', max_length=40, null=True, verbose_name='Pseudoidentifier'),
        ),
        migrations.AlterField(
            model_name='performancestatusevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's performance status is assesed", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='performancestatusevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date at which the performance score was performed and recorded.', null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='performancestatusevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='performancestatusevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.performancestatus'),
        ),
        migrations.AlterField(
            model_name='radiotherapydosageevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='radiotherapydosageevent',
            name='irradiated_volume',
            field=models.ForeignKey(db_constraint=False, help_text='Anatomical location of the irradiated volume', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.radiotherapytreatmentlocation', verbose_name='Irradiated volume'),
        ),
        migrations.AlterField(
            model_name='radiotherapydosageevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.radiotherapydosage'),
        ),
        migrations.AlterField(
            model_name='radiotherapydosageevent',
            name='radiotherapy',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the radoptherapy where this dosage was delivered', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.radiotherapy', verbose_name='Radiotherapy'),
        ),
        migrations.AlterField(
            model_name='radiotherapyevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the case of the patient who received the radiotherapy', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='radiotherapyevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='radiotherapyevent',
            name='intent',
            field=models.CharField(choices=[('curative', 'Curative'), ('palliative', 'Palliative')], help_text='Treatment intent of the system therapy', max_length=30, null=True, verbose_name='Intent'),
        ),
        migrations.AlterField(
            model_name='radiotherapyevent',
            name='period',
            field=django.contrib.postgres.fields.ranges.DateRangeField(help_text='Clinically-relevant period during which the radiotherapy was administered to the patient.', null=True, verbose_name='Treatment period'),
        ),
        migrations.AlterField(
            model_name='radiotherapyevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.radiotherapy'),
        ),
        migrations.AlterField(
            model_name='radiotherapyevent',
            name='sessions',
            field=models.PositiveIntegerField(help_text='The total number of radiotherapy sessions over the treatment period.', null=True, verbose_name='Total sessions'),
        ),
        migrations.AlterField(
            model_name='radiotherapysettingevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='radiotherapysettingevent',
            name='modality',
            field=models.ForeignKey(db_constraint=False, help_text='Modality of external beam or brachytherapy radiation procedures', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.radiotherapymodality', verbose_name='Modality'),
        ),
        migrations.AlterField(
            model_name='radiotherapysettingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.radiotherapysetting'),
        ),
        migrations.AlterField(
            model_name='radiotherapysettingevent',
            name='radiotherapy',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the radoptherapy where this dosage was delivered', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.radiotherapy', verbose_name='Radiotherapy'),
        ),
        migrations.AlterField(
            model_name='radiotherapysettingevent',
            name='technique',
            field=models.ForeignKey(db_constraint=False, help_text='Technique of external beam or brachytherapy radiation procedures', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.radiotherapytechnique', verbose_name='Technique'),
        ),
        migrations.AlterField(
            model_name='raistagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.raistaging'),
        ),
        migrations.AlterField(
            model_name='raistagingevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the Rai stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.raistage', verbose_name='Rai Stage'),
        ),
        migrations.AlterField(
            model_name='raistagingevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='rhabdomyosarcomaclinicalgroupevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.rhabdomyosarcomaclinicalgroup'),
        ),
        migrations.AlterField(
            model_name='rhabdomyosarcomaclinicalgroupevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the rhabdomyosarcoma clinical group', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.rhabdomyosarcomaclinicalgroup', verbose_name='Rhabdomyosarcoma clinical group'),
        ),
        migrations.AlterField(
            model_name='rhabdomyosarcomaclinicalgroupevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='riskassessmentevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's cancer risk is assesed", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='riskassessmentevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date at which the risk assessment was performed and recorded.', null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='riskassessmentevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='riskassessmentevent',
            name='methodology',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the method or type of risk assessment', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.cancerriskassessmentmethod', verbose_name='Assessment methodology'),
        ),
        migrations.AlterField(
            model_name='riskassessmentevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.riskassessment'),
        ),
        migrations.AlterField(
            model_name='riskassessmentevent',
            name='risk',
            field=models.ForeignKey(db_constraint=False, help_text='Assessed risk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.cancerriskassessmentclassification', verbose_name='Risk'),
        ),
        migrations.AlterField(
            model_name='rissstagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.rissstaging'),
        ),
        migrations.AlterField(
            model_name='rissstagingevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the RISS stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.myelomarissstage', verbose_name='RISS Stage'),
        ),
        migrations.AlterField(
            model_name='rissstagingevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='stagingevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's cancer is staged", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='stagingevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date at which the staging was performed and recorded.', null=True, verbose_name='Staging date'),
        ),
        migrations.AlterField(
            model_name='stagingevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='stagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parent_events', related_query_name='parent_events', to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='surgeryevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the case of the patient who received the surgical procedure', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='surgeryevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date of the surgical procedure.', null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='surgeryevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='surgeryevent',
            name='intent',
            field=models.CharField(choices=[('curative', 'Curative'), ('palliative', 'Palliative')], help_text='Therapeutic intent of the surgery', max_length=30, null=True, verbose_name='Intent'),
        ),
        migrations.AlterField(
            model_name='surgeryevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.surgery'),
        ),
        migrations.AlterField(
            model_name='surgeryevent',
            name='procedure',
            field=models.ForeignKey(db_constraint=False, help_text='The specific surgical procedure that was performed', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.surgicalprocedure', verbose_name='Surgical procedure'),
        ),
        migrations.AlterField(
            model_name='systemictherapyevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the case of the patient who received the systemic therapy', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='systemictherapyevent',
            name='cycles',
            field=models.PositiveIntegerField(help_text='The total number of treatment cycles during the treatment period.', null=True, verbose_name='Cycles'),
        ),
        migrations.AlterField(
            model_name='systemictherapyevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='systemictherapyevent',
            name='intent',
            field=models.CharField(choices=[('curative', 'Curative'), ('palliative', 'Palliative')], help_text='Treatment intent of the system therapy', max_length=30, null=True, verbose_name='Intent'),
        ),
        migrations.AlterField(
            model_name='systemictherapyevent',
            name='is_adjunctive',
            field=models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('adjunctive_role__isnull', False)), then=models.Value(True)), default=models.Value(False), output_field=models.BooleanField()), help_text='Indicates whether it is adjunctive therapy instead of a primary therapy ', null=True, output_field=models.BooleanField(), verbose_name='Treatment Role'),
        ),
        migrations.AlterField(
            model_name='systemictherapyevent',
            name='period',
            field=django.contrib.postgres.fields.ranges.DateRangeField(help_text='Clinically-relevant period during which the therapy was administered to the patient.', null=True, verbose_name='Treatment period'),
        ),
        migrations.AlterField(
            model_name='systemictherapyevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.systemictherapy'),
        ),
        migrations.AlterField(
            model_name='systemictherapymedicationevent',
            name='drug',
            field=models.ForeignKey(db_constraint=False, help_text='Antineoplastic drug/medication administered to the patient', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.antineoplasticagent', verbose_name='Antineoplastic Drug'),
        ),
        migrations.AlterField(
            model_name='systemictherapymedicationevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='systemictherapymedicationevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.systemictherapymedication'),
        ),
        migrations.AlterField(
            model_name='systemictherapymedicationevent',
            name='systemic_therapy',
            field=models.ForeignKey(db_constraint=False, help_text='The systemic therapy to which this medication belongs to', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.systemictherapy', verbose_name='Systemic therapy'),
        ),
        migrations.AlterField(
            model_name='therapylineevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the case of the patient to whom this therapy line is associated', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='therapylineevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='therapylineevent',
            name='intent',
            field=models.CharField(choices=[('curative', 'Curative'), ('palliative', 'Palliative')], help_text='Treatment intent of the system therapy', max_length=30, null=True, verbose_name='Intent'),
        ),
        migrations.AlterField(
            model_name='therapylineevent',
            name='label',
            field=models.GeneratedField(db_persist=True, expression=django.db.models.functions.text.Concat(django.db.models.functions.text.Upper(django.db.models.functions.text.Left('intent', 1)), models.Value('LoT'), 'ordinal', output_field=django.db.models.fields.CharField), null=True, output_field=models.CharField()),
        ),
        migrations.AlterField(
            model_name='therapylineevent',
            name='ordinal',
            field=models.PositiveIntegerField(help_text='Number indicating the sequence in which this block of treatments were administered to the patient', null=True, verbose_name='Line ordinal number'),
        ),
        migrations.AlterField(
            model_name='therapylineevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.therapyline'),
        ),
        migrations.AlterField(
            model_name='tnmstagingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.tnmstaging'),
        ),
        migrations.AlterField(
            model_name='tnmstagingevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The information determined as a result of making the observation, if the information has a simple value', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.tnmstage', verbose_name='TNM Stage'),
        ),
        migrations.AlterField(
            model_name='tnmstagingevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
        migrations.AlterField(
            model_name='treatmentresponseevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's treatment response is asseessed", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='treatmentresponseevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date of the treatment response assessment', null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='treatmentresponseevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='treatmentresponseevent',
            name='methodology',
            field=models.ForeignKey(db_constraint=False, help_text='Method used to assess and classify the treatment response', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.cancertreatmentresponseobservationmethod', verbose_name='Assessment method'),
        ),
        migrations.AlterField(
            model_name='treatmentresponseevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.treatmentresponse'),
        ),
        migrations.AlterField(
            model_name='treatmentresponseevent',
            name='recist',
            field=models.ForeignKey(db_constraint=False, help_text='The classification of the treatment response according to RECIST', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.cancertreatmentresponse', verbose_name='RECIST'),
        ),
        migrations.AlterField(
            model_name='tumorboardevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the case of the patient which was discussed at the tumor board', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='tumorboardevent',
            name='date',
            field=models.DateField(help_text='Date at which the tumor board took place and/or when the board provided a recommendation.', null=True, verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='tumorboardevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='tumorboardevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parent_events', related_query_name='parent_events', to='oncology.tumorboard'),
        ),
        migrations.AlterField(
            model_name='tumormarker',
            name='arbitrary_concentration',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='kIU__l', help_text='Arbitrary concentration of the analyte (if revelant/measured)', measurement=pop.core.measures.measures.ArbitraryConcentration, null=True, verbose_name='Arbitrary concentration'),
        ),
        migrations.AlterField(
            model_name='tumormarkerevent',
            name='analyte',
            field=models.ForeignKey(db_constraint=False, help_text='The chemical or biological substance/agent that is analyzed.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.tumormarkeranalyte', verbose_name='Analyte'),
        ),
        migrations.AlterField(
            model_name='tumormarkerevent',
            name='arbitrary_concentration',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='kIU__l', help_text='Arbitrary concentration of the analyte (if revelant/measured)', measurement=pop.core.measures.measures.ArbitraryConcentration, null=True, verbose_name='Arbitrary concentration'),
        ),
        migrations.AlterField(
            model_name='tumormarkerevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text='Indicates the case of the patient related to the tumor marker result', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='tumormarkerevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date at which the tumor marker was analyzed.', null=True, verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='tumormarkerevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='tumormarkerevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.tumormarker'),
        ),
        migrations.AlterField(
            model_name='tumormutationalburdenevent',
            name='genomic_signature',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.genomicsignature'),
        ),
        migrations.AlterField(
            model_name='tumormutationalburdenevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.tumormutationalburden'),
        ),
        migrations.AlterField(
            model_name='tumormutationalburdenevent',
            name='value',
            field=models.FloatField(help_text='The actual tumor mutational burden (TMB) value in mutations/Mb', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='tumorneoantigenburdenevent',
            name='genomic_signature',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.genomicsignature'),
        ),
        migrations.AlterField(
            model_name='tumorneoantigenburdenevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.tumorneoantigenburden'),
        ),
        migrations.AlterField(
            model_name='tumorneoantigenburdenevent',
            name='value',
            field=models.FloatField(help_text='The actual tumor neoantigen burden (TNB) value in neoantigens/Mb', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='unspecifiedtumorboardevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.unspecifiedtumorboard'),
        ),
        migrations.AlterField(
            model_name='unspecifiedtumorboardevent',
            name='tumor_board',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.tumorboard'),
        ),
        migrations.AlterField(
            model_name='vitals',
            name='blood_pressure_diastolic',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='mmHg', help_text='Diastolic blood pressure of the patient', measurement=pop.core.measures.measures.Pressure, null=True, verbose_name='Diastolic blood pressure'),
        ),
        migrations.AlterField(
            model_name='vitals',
            name='blood_pressure_systolic',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='mmHg', help_text='Systolic blood pressure of the patient', measurement=pop.core.measures.measures.Pressure, null=True, verbose_name='Systolic blood pressure'),
        ),
        migrations.AlterField(
            model_name='vitals',
            name='height',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='m', help_text='Height of the patient', measurement=measurement.measures.distance.Distance, null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='vitals',
            name='temperature',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='celsius', help_text='Temperature of the patient', measurement=pop.core.measures.measures.Temperature, null=True, verbose_name='Temperature'),
        ),
        migrations.AlterField(
            model_name='vitals',
            name='weight',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='kg', help_text='Weight of the patient', measurement=measurement.measures.mass.Mass, null=True, verbose_name='Weight'),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='blood_pressure_diastolic',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='mmHg', help_text='Diastolic blood pressure of the patient', measurement=pop.core.measures.measures.Pressure, null=True, verbose_name='Diastolic blood pressure'),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='blood_pressure_systolic',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='mmHg', help_text='Systolic blood pressure of the patient', measurement=pop.core.measures.measures.Pressure, null=True, verbose_name='Systolic blood pressure'),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Indicates the case of the patient who's vitals are assesed", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='date',
            field=models.DateField(help_text='Clinically-relevant date at which the vitals were recorded.', null=True, verbose_name='Assessment date'),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='height',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='m', help_text='Height of the patient', measurement=measurement.measures.distance.Distance, null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.vitals'),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='temperature',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='celsius', help_text='Temperature of the patient', measurement=pop.core.measures.measures.Temperature, null=True, verbose_name='Temperature'),
        ),
        migrations.AlterField(
            model_name='vitalsevent',
            name='weight',
            field=pop.core.measures.fields.MeasurementField(blank=True, default_unit='kg', help_text='Weight of the patient', measurement=measurement.measures.mass.Mass, null=True, verbose_name='Weight'),
        ),
        migrations.AlterField(
            model_name='wilmsstageevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.wilmsstage'),
        ),
        migrations.AlterField(
            model_name='wilmsstageevent',
            name='stage',
            field=models.ForeignKey(db_constraint=False, help_text='The value of the Wilms stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='terminology.wilmstumorstage', verbose_name='Wilms Stage'),
        ),
        migrations.AlterField(
            model_name='wilmsstageevent',
            name='staging',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', related_query_name='+', serialize=False, to='oncology.staging'),
        ),
    ]
