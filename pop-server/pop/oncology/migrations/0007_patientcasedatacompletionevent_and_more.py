# Generated by Django 5.1 on 2025-04-10 15:22

import django.db.models.deletion
import pghistory.utils
import pgtrigger.compiler
import pgtrigger.migrations
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('oncology', '0006_adverseeventevent_adverseeventmitigationevent_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientCaseDataCompletionEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('pgh_context', pghistory.utils.JSONField(null=True)),
                ('pgh_context_id', models.UUIDField(null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, serialize=False)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('category', models.CharField(blank=True, choices=[('comorbidities-assessments', 'Comorbidities Assessments'), ('family-histories', 'Family Histories'), ('genomic-signatures', 'Genomic Signatures'), ('genomic-variants', 'Genomic Variants'), ('lifestyles', 'Lifestyles'), ('comorbidities', 'Comorbidities'), ('neoplastic-entities', 'Neoplastic Entities'), ('performance-status', 'Performance Status'), ('radiotherapies', 'Radiotherapies'), ('risk-assessments', 'Risk Assessments'), ('stagings', 'Stagins'), ('surgeries', 'Surgeries'), ('systemic-therapies', 'Systemic Therapies'), ('tumor-markers', 'Tumor Markers'), ('vitals', 'Vitals'), ('tumor-board-reviews', 'Tumor Board Reviews'), ('adverse-events', 'Adverse Events'), ('therapy-responses', 'Therapy Responses')], help_text='Indicates the categories of a patient case, whose data entries are deemed to be complete and/or up-to-date with the primary records.', max_length=500, verbose_name='Finalized data category')),
            ],
            options={
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='patientcasedatacompletion',
            trigger=pgtrigger.compiler.Trigger(name='create_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "oncology_patientcasedatacompletionevent" ("case_id", "category", "external_source", "external_source_id", "id", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."case_id", NEW."category", NEW."external_source", NEW."external_source_id", NEW."id", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'create\', NEW."id"); RETURN NULL;', hash='a60591764dd3b9d331baf30f28c4a4c30a9f65ec', operation='INSERT', pgid='pgtrigger_create_insert_abc44', table='oncology_patientcasedatacompletion', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='patientcasedatacompletion',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "oncology_patientcasedatacompletionevent" ("case_id", "category", "external_source", "external_source_id", "id", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."case_id", NEW."category", NEW."external_source", NEW."external_source_id", NEW."id", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'update\', NEW."id"); RETURN NULL;', hash='31298120fbd7a6e86d3058633819061d701341ca', operation='UPDATE', pgid='pgtrigger_update_update_acc3b', table='oncology_patientcasedatacompletion', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='patientcasedatacompletion',
            trigger=pgtrigger.compiler.Trigger(name='delete_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "oncology_patientcasedatacompletionevent" ("case_id", "category", "external_source", "external_source_id", "id", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."case_id", OLD."category", OLD."external_source", OLD."external_source_id", OLD."id", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'delete\', OLD."id"); RETURN NULL;', hash='d47ad25cdc28d3d0f3d23653fbd1409a2a62edd1', operation='DELETE', pgid='pgtrigger_delete_delete_805aa', table='oncology_patientcasedatacompletion', when='AFTER')),
        ),
        migrations.AddField(
            model_name='patientcasedatacompletionevent',
            name='case',
            field=models.ForeignKey(db_constraint=False, help_text="Patient case who's data category has been marked as completed.", on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='oncology.patientcase', verbose_name='Patient case'),
        ),
        migrations.AddField(
            model_name='patientcasedatacompletionevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='oncology.patientcasedatacompletion'),
        ),
    ]
