# Generated by Django 5.1 on 2024-12-03 09:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('oncology', '0001_initial'),
        ('terminology', '0004_rename_causeofdeathcodes_causeofdeath'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NeoplasticEntity',
            fields=[
                ('auto_id', models.BigAutoField(editable=False, help_text='Automated incremental database identifier', primary_key=True, serialize=False, verbose_name='Database ID')),
                ('id', models.CharField(max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('relationship', models.CharField(choices=[('primary', 'Primary'), ('metastatic', 'Metastatic'), ('local_recurrence', 'Local recurrence'), ('regional_recurrence', 'Regional recurrence')], help_text='Relationship linking secondary and recurrent tumors to their primary origin or for distinguishing between different phases of the disease.', max_length=30, verbose_name='Neoplastic relationship')),
                ('assertion_date', models.DateField(help_text='The date on which the existence of the neoplasm(s) was first asserted or acknowledged', verbose_name='Assertion date')),
                ('case', models.ForeignKey(help_text="Indicates the case of the patient who's neoplasm(s) are recorded", on_delete=django.db.models.deletion.CASCADE, related_name='neoplastic_entities', to='oncology.patientcase', verbose_name='Patient case')),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('differentitation', models.ForeignKey(blank=True, help_text='Morphologic differentitation characteristics of the neoplasm(s)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.histologydifferentiation', verbose_name='Differentiation')),
                ('laterality', models.ForeignKey(blank=True, help_text='Laterality qualifier for the location of the neoplasm(s)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.lateralityqualifier', verbose_name='Laterality')),
                ('morphology', models.ForeignKey(help_text='Describes the cell type of the tumor and its biologic activity, in other words, the characteristics of the tumor itself', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.cancermorphology', verbose_name='Morphology')),
                ('related_primary', models.ForeignKey(blank=True, help_text='Reference to the primary neoplasm of which the neoplasm(s) originated from.', null=True, on_delete=django.db.models.deletion.CASCADE, to='oncology.neoplasticentity', verbose_name='Related primary neoplasm')),
                ('topography', models.ForeignKey(help_text='Anatomical location of the neoplasm(s)', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.cancertopography', verbose_name='Topography')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Neoplastic Entity',
                'verbose_name_plural': 'Neoplastic Entities',
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('related_primary', None), ('relationship', 'primary')), models.Q(('relationship', 'primary'), _negated=True), _connector='OR'), name='primary_cannot_have_a_related_primary', violation_error_message='A primary neoplasm cannot have a related primary')],
            },
        ),
    ]
