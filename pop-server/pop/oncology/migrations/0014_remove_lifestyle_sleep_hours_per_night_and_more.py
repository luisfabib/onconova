# Generated by Django 5.1 on 2025-01-09 06:07

import django.db.models.deletion
import pop.core.measures.fields
import pop.core.measures
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('oncology', '0013_lifestyle_exposures_lifestyle_recreational_drugs_and_more'),
        ('terminology', '0005_rename_uscoresmokingstatusobservationcodes_smokingstatus_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='lifestyle',
            name='sleep_hours_per_night',
        ),
        migrations.AddField(
            model_name='lifestyle',
            name='night_sleep',
            field=pop.core.measures.fields.MeasurementField(blank=True, help_text='Estimated average sleep time per night', measurement=pop.core.measures.Time, null=True, verbose_name='Night sleep'),
        ),
        migrations.AlterField(
            model_name='lifestyle',
            name='smoking_quited',
            field=pop.core.measures.fields.MeasurementField(blank=True, help_text='Estimated time since quitting smoking (if applicable)', measurement=pop.core.measures.Time, null=True, verbose_name='Time since quitted smoking'),
        ),
        migrations.CreateModel(
            name='FamilyHistory',
            fields=[
                ('auto_id', models.BigAutoField(editable=False, help_text='Automated incremental database identifier', primary_key=True, serialize=False, verbose_name='Database ID')),
                ('id', models.CharField(max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(help_text="Clinically-relevant date at which the patient's family history was assessed and recorded.", verbose_name='Assessment date')),
                ('had_cancer', models.BooleanField(help_text='Whether the family member has a history of cancer', verbose_name='Had cancer')),
                ('contributed_to_death', models.BooleanField(blank=True, help_text='Whether the cancer contributed to the cause of death of the family member', null=True, verbose_name='Contributed to death')),
                ('onset_age', models.PositiveSmallIntegerField(blank=True, help_text="Age at which the family member's cancer manifested", null=True, verbose_name='Onset age')),
                ('case', models.ForeignKey(help_text="Indicates the case of the patient who's family's history is being recorded", on_delete=django.db.models.deletion.CASCADE, related_name='family_histories', to='oncology.patientcase', verbose_name='Patient case')),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('morphology', models.ForeignKey(blank=True, help_text="Morphology of the family member's cancer (if known)", null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.cancermorphology', verbose_name='Morphology')),
                ('relationship', models.ForeignKey(help_text='Relationship to the patient', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.familymembertype', verbose_name='Relationship')),
                ('topography', models.ForeignKey(blank=True, help_text="Estimated or actual topography of the family member's cancer", null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.cancertopography', verbose_name='Topography')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
