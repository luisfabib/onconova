# Generated by Django 5.1 on 2024-11-27 11:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('terminology', '0004_rename_causeofdeathcodes_causeofdeath'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientCase',
            fields=[
                ('auto_id', models.BigAutoField(editable=False, help_text='Automated incremental database identifier', primary_key=True, serialize=False, verbose_name='Database ID')),
                ('id', models.CharField(max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pseudoidentifier', models.CharField(editable=False, help_text='Pseudoidentifier of the patient', max_length=40, unique=True, verbose_name='Pseudoidentifier')),
                ('date_of_birth', models.DateField(help_text='Anonymized date of birth (year/month). The day is set to the first day of the month by convention.', verbose_name='Date of birth')),
                ('is_deceased', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('date_of_death__isnull', False), ('cause_of_death__isnull', False), _connector='OR'), then=models.Value(True)), default=models.Value(False), output_field=models.BooleanField()), help_text='Indicates if the individual is deceased or not (determined automatically based on existence of a date of death)', output_field=models.BooleanField(), verbose_name='Is deceased')),
                ('date_of_death', models.DateField(blank=True, help_text='Anonymized date of death (year/month). The day is set to the first day of the month by convention.', null=True, verbose_name='Date of death')),
                ('cause_of_death', models.ForeignKey(blank=True, help_text='Classification of the cause of death.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.causeofdeath', verbose_name='Cause of death')),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('gender', models.ForeignKey(help_text='Gender for administrative purposes', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.administrativegender', verbose_name='Gender')),
                ('gender_identity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.genderidentity', verbose_name='Gender identity')),
                ('race', models.ForeignKey(blank=True, help_text='Race of the patient', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.racecategory', verbose_name='Race')),
                ('sex_at_birth', models.ForeignKey(blank=True, help_text='Sex assigned at birth', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='terminology.birthsex', verbose_name='Birth sex')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('date_of_birth__day', 1)), name='date_of_birth_must_be_first_of_month', violation_error_message='Birthdate must be the first day of the month'), models.CheckConstraint(condition=models.Q(('date_of_death__day', 1)), name='date_of_death_must_be_first_of_month', violation_error_message='Birthdate must be the first day of the month')],
            },
        ),
    ]
