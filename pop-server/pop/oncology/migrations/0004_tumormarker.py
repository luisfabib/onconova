# Generated by Django 5.1 on 2024-12-11 10:20

import django.db.models.deletion
import django_measurement.models
import pop.core.measures
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('oncology', '0003_tnmstaging_pathological'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TumorMarker',
            fields=[
                ('auto_id', models.BigAutoField(editable=False, help_text='Automated incremental database identifier', primary_key=True, serialize=False, verbose_name='Database ID')),
                ('id', models.CharField(max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(help_text='Clinically-relevant date at which the tumor marker was analyzed.', verbose_name='Date')),
                ('analyte', models.CharField(choices=[('CEA', 'Carcinoembryonic Antigen'), ('CA19-9', 'Cancer Antigen 19-9'), ('CA125', 'Cancer Antigen 125'), ('CA15-3', 'Cancer Antigen 15-3'), ('CA72-4', 'Cancer Antigen 72-4'), ('CA27-29', 'Cancer Antigen 27-29'), ('NSE', 'Neuron-specific enolase'), ('LDH', 'Lactate dehydrogenase'), ('CgA', 'Chromogranin A'), ('S100A1', 'S100 Calcium-binding Protein A1'), ('S100B', 'S100 Calcium-binding Protein B'), ('PSA', 'Prostate-specific Ag'), ('AFP', 'Alpha-1-Fetoprotein'), ('β-hCG', 'Choriogonadotropin subunit β'), ('B2M', 'β-2 microglobulin'), ('CYFRA 21-1', 'Cytokeratin 19 Fragment'), ('EBV', 'Epstein Barr Virus Antibody'), ('PD-L1 ICS', 'PDL1 Immune Cell Score'), ('PD-L1 TPS', 'PDL1 Tumor Proportion Score'), ('PD-L1 CPS', 'PDL1 Combined Positive Score'), ('HER2', 'Human Epidermal Growth Factor Receptor 2'), ('ER', 'Estrogen receptor'), ('PR', 'Progesterone receptor'), ('AR', 'Androgen receptor'), ('Ki67', 'Antigen Kiel 67'), ('SSTR2', 'Somatostatin Receptor Type 2'), ('MLH1', 'DNA mismatch repair protein MLH1'), ('MSH2', 'DNA mismatch repair protein MSH2'), ('MSH6', 'DNA mismatch repair protein MSH6'), ('PMS2', 'Mismatch repair endonuclease PMS2'), ('p16', 'Cyclin-dependent Kinase Inhibitor 2A'), ('EBV', 'Epstein Barr virus DNA'), ('HPV', 'Human papillomavirus')], help_text='The chemical or biological substance/agent that is analyzed.', max_length=50, verbose_name='Analyte')),
                ('mass_concentration', django_measurement.models.MeasurementField(blank=True, help_text='Mass concentration of the analyte (if revelant)', measurement=pop.core.measures.MassConcentration, null=True, verbose_name='Mass concentration')),
                ('case', models.ForeignKey(help_text='Indicates the case of the patient related to the tumor marker result', on_delete=django.db.models.deletion.CASCADE, related_name='tumor_markers', to='oncology.patientcase', verbose_name='Patient case')),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('related_entities', models.ManyToManyField(help_text='References to the neoplastic entities that are related or the focus of the tumor marker analysis.', related_name='tumor_markers', to='oncology.neoplasticentity', verbose_name='Related neoplastic entities')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
