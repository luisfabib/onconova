# Generated by Django 5.1 on 2025-02-05 15:58

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CancerMorphology',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancermorphology')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerMorphologyMetastatic',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('terminology.cancermorphology',),
        ),
        migrations.CreateModel(
            name='CancerMorphologyPrimary',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('terminology.cancermorphology',),
        ),
        migrations.CreateModel(
            name='TumorBoardRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tumorboardrecommendation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MolecularTumorBoardRecommendation',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('terminology.tumorboardrecommendation',),
        ),
        migrations.CreateModel(
            name='AdditionalDosageInstruction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.additionaldosageinstruction')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdministrationMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.administrationmethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdministrativeGender',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.administrativegender')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventActuality',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventactuality')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventExpectation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventexpectation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventMitigationDrug',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventmitigationdrug')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventMitigationManagement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventmitigationmanagement')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventMitigationProcedure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventmitigationprocedure')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventMitigationTreatmentAdjustment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventmitigationtreatmentadjustment')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventOutcome',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventoutcome')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventRelatedness',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventrelatedness')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventSeriousness',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventseriousness')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventSeriousnessOutcome',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventseriousnessoutcome')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventSeverity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventseverity')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AdverseEventTerm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.adverseeventterm')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AlcoholConsumptionFrequency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.alcoholconsumptionfrequency')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AminoAcidChangeType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.aminoacidchangetype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='AntineoplasticAgent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('drugCategory', models.CharField(blank=True, help_text='NCT-POT drug classification', max_length=50, null=True, verbose_name='Drug class')),
                ('drugDomain', models.CharField(blank=True, help_text='NCT-POT drug classification', max_length=50, null=True, verbose_name='Drug domain')),
                ('therapyCategory', models.CharField(blank=True, help_text='NCT-POT drug classification', max_length=50, null=True, verbose_name='Drug class')),
                ('atc', models.CharField(blank=True, max_length=50, null=True, verbose_name='ATC code')),
                ('snomed', models.CharField(blank=True, max_length=50, null=True, verbose_name='SNOMED CT code')),
                ('rxnorm', models.CharField(blank=True, max_length=50, null=True, verbose_name='RxNorm code')),
                ('drugbank', models.CharField(blank=True, max_length=50, null=True, verbose_name='Drugbank code')),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.antineoplasticagent')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BinetStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.binetstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BirthSex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.birthsex')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BodyLocationAndLateralityQualifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.bodylocationandlateralityqualifier')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BodyLocationQualifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.bodylocationqualifier')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='BreslowDepthStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.breslowdepthstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerRiskAssessmentClassification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancerriskassessmentclassification')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerRiskAssessmentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancerriskassessmentmethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancerstagingmethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerStagingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancerstagingtype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerTopography',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancertopography')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerTreatmentResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancertreatmentresponse')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CancerTreatmentResponseObservationMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.cancertreatmentresponseobservationmethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CauseOfDeath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.causeofdeath')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ChromosomeIdentifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.chromosomeidentifier')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ClarkLevel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.clarklevel')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ClinOrPathModifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.clinorpathmodifier')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ConsentScope',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.consentscope')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ConsentState',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.consentstate')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='CTCAEGrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.ctcaegrade')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='DnaChangeType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.dnachangetype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='DosageRoute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.dosageroute')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='DoseAndRateType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.doseandratetype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ECOGPerformanceStatusInterpretation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.ecogperformancestatusinterpretation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ExpectedDrugAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.expecteddrugaction')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ExposureAgent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.exposureagent')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='FamilyMemberType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.familymembertype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='FIGOStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.figostage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='FIGOStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.figostagingmethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='FunctionalEffect',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.functionaleffect')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GenderIdentity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.genderidentity')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.gene')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GeneticFollowupRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.geneticfollowuprecommendation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GeneticTherapeuticImplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.genetictherapeuticimplication')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GeneticVariantAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.geneticvariantassessment')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GeneticVariantSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.geneticvariantsource')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GenomicCoordinateSystem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.genomiccoordinatesystem')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='GleasonGradeGroupStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.gleasongradegroupstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='HighLowInterpretation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.highlowinterpretation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='HistologyDifferentiation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.histologydifferentiation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='HistoryOfMetastaticMalignantNeoplasm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.historyofmetastaticmalignantneoplasm')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='HumanSpecimenCollectionSite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.humanspecimencollectionsite')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='HumanSpecimenType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('PathoProCode', models.CharField(help_text='Deprecated SNOMED (pre1998) codes used by PathoPro', max_length=100, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.humanspecimentype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ICD10Condition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.icd10condition')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='KarnofskyPerformanceStatusInterpretation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.karnofskyperformancestatusinterpretation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='LateralityQualifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.lateralityqualifier')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='LymphomaStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.lymphomastage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='LymphomaStageValueModifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.lymphomastagevaluemodifier')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='LymphomaStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.lymphomastagingmethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MeasurementSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.measurementsetting')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MedicationRequestCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.medicationrequestcategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MedicationRequestIntent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.medicationrequestintent')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MedicationUsageSuggestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.medicationusagesuggestion')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MicrosatelliteInstabilityState',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.microsatelliteinstabilitystate')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MolecularConsequence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.molecularconsequence')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MyelomaISSStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.myelomaissstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='MyelomaRISSStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.myelomarissstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='NCITCancerClassification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.ncitcancerclassification')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='NeuroblastomaINRGSSStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.neuroblastomainrgssstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='NeuroblastomaINSSStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.neuroblastomainssstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ObservationBodySite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.observationbodysite')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='OncoTreeCancerClassification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.oncotreecancerclassification')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='PDL1ImmuneCellScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.pdl1immunecellscore')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='PDL1TumorCellScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.pdl1tumorcellscore')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ProcedureIntent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.procedureintent')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ProcedureOutcome',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.procedureoutcome')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RaceCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.racecategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyModality',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapymodality')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyTechnique',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapytechnique')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyTreatmentLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapytreatmentlocation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyTreatmentLocationQualifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapytreatmentlocationqualifier')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RadiotherapyVolumeType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.radiotherapyvolumetype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RaiStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.raistage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RaiStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.raistagingmethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RecreationalDrug',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.recreationaldrug')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ReferenceGenomeBuild',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.referencegenomebuild')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ResearchStudyPhase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.researchstudyphase')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ResearchStudyPrimaryPurposeType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.researchstudyprimarypurposetype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='ResearchStudyStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.researchstudystatus')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='RhabdomyosarcomaClinicalGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.rhabdomyosarcomaclinicalgroup')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='SmokingStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.smokingstatus')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='StructuralVariantAnalysisMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.structuralvariantanalysismethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='SurgicalProcedure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.surgicalprocedure')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMDistantMetastasesCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmdistantmetastasescategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMDistantMetastasesStagingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmdistantmetastasesstagingtype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMGradeCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmgradecategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMLymphaticInvasionCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmlymphaticinvasioncategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMPerineuralInvasionCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmperineuralinvasioncategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMPrimaryTumorCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmprimarytumorcategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMPrimaryTumorStagingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmprimarytumorstagingtype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMRegionalNodesCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmregionalnodescategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMRegionalNodesStagingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmregionalnodesstagingtype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMResidualTumorCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmresidualtumorcategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMSerumTumorMarkerLevelCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmserumtumormarkerlevelcategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMStageGroupStagingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmstagegroupstagingtype')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMStagingMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmstagingmethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TNMVenousInvasionCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tnmvenousinvasioncategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TreatmentCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.treatmentcategory')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TreatmentResponseInterpretation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.treatmentresponseinterpretation')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TreatmentTerminationReason',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.treatmentterminationreason')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TumorMarkerAnalyte',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tumormarkeranalyte')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TumorMarkerTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('analyte', models.CharField(blank=True, help_text='Analyte Name', max_length=100, null=True, verbose_name='Analyte')),
                ('sample', models.CharField(blank=True, help_text='System (Sample) Type', max_length=100, null=True, verbose_name='Sample type')),
                ('method', models.CharField(blank=True, help_text='Type of Method', max_length=100, null=True, verbose_name='Method type')),
                ('type', models.CharField(blank=True, help_text='Type of unit', max_length=100, null=True, verbose_name='Result type')),
                ('scale', models.CharField(blank=True, help_text='Type of Scale', max_length=20, null=True, verbose_name='Result scale')),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tumormarkertest')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TumorMarkerTestResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tumormarkertestresult')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TumorMorphology',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tumormorphology')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='TumorSizeMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.tumorsizemethod')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='VariantClinicalSignificance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.variantclinicalsignificance')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='VariantConfidenceStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.variantconfidencestatus')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='VariantInheritance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.variantinheritance')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='WilmsTumorStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.wilmstumorstage')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
        migrations.CreateModel(
            name='Zygosity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_source', models.CharField(blank=True, help_text='The digital source of the data, relevant for automated data', null=True, verbose_name='External data source')),
                ('external_source_id', models.CharField(blank=True, help_text='The data identifier at the digital source of the data, relevant for automated data', null=True, verbose_name='External data source Id')),
                ('code', models.CharField(help_text='Code as defined in the code syste,', max_length=200, verbose_name='Code')),
                ('display', models.CharField(blank=True, help_text='Human-readable representation defined by the system', max_length=2000, null=True, verbose_name='Text')),
                ('system', models.CharField(blank=True, help_text='Canonical URL of the code system', null=True, verbose_name='Codesystem')),
                ('version', models.CharField(blank=True, help_text='Version of the code system', max_length=200, null=True, verbose_name='Version')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), default=list, size=None)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created the original data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='terminology.zygosity')),
                ('updated_by', models.ManyToManyField(help_text='The user(s) who updated the data since its creation', related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('code', 'system')},
            },
        ),
    ]
