# Redirect all non-encrypted (HTTP) to encrypted (HTTPS)
server {
    # Listen to HTTP requests
    listen 80;
    # Redirect to HTTPS requests
    return 301 https://$host$request_uri;
    # Setup max size for uploads (default 1MB)
    client_max_body_size 20M;
}

server { 
    
    # Listen only to HTTPS requests
    listen [::]:443 ssl;
    listen 443 ssl; 

    
    # Setup max size for uploads (default 1MB)
    client_max_body_size 20M;

    # SSL settings
    ssl_certificate /etc/nginx/ssl/cert_host.pem;
    ssl_certificate_key /etc/nginx/ssl/cert_host.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;


    # Proxy settings
    location / {
        # Redirect all HTTP traffic to pop-client container
        proxy_pass http://client;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    location /api/ {
        # Redirect all HTTP traffic to pop-server container
        proxy_pass http://server:8000/api/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }
    location /docs/ {
        # Redirect all HTTP traffic to pop-docs container
        proxy_pass http://docs/docs/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }
    # Serve static files
    location /static/ {
        alias /app/static/;  # Matches the static volume mounted in NGINX
    }
    # Serve media files
    location /media/ {
        alias /app/media/;  # Matches the media volume mounted in NGINX
    }
}
