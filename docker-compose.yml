version: "3.5"
services:

    pop-server:
        container_name: pop-server
        restart: unless-stopped
        build:
            context: ./pop-server
            additional_contexts:
                project-root: .
            args:
                CA_SSL_CERT_BUNDLE: ${CA_SSL_CERT_BUNDLE}
                HOST_SSL_CERT_KEY: ${HOST_SSL_CERT_KEY}
                HOST_SSL_CERT_BUNDLE: ${HOST_SSL_CERT_BUNDLE}
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
        command: 
            bash -c 
            "
            service rsyslog start
            && python manage.py runserver_plus 0.0.0.0:8000          
            "
        expose:
            - 8000
        volumes:
            - ./pop-server:/app/code
            - ./etc/logs:/app/logs
            - static_volume:/app/static
            - media_volume:/app/media
        env_file: .env
        networks:
            - pop-network
        depends_on:
            - pop-postgres

    pop-web:
        container_name: pop-web
        build:
            context: ./pop-web
            additional_contexts:
                project-root: .
            args:
                CA_SSL_CERT_BUNDLE: ${CA_SSL_CERT_BUNDLE}
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
        ports:
        - 4200
        volumes:
            - ./pop-web:/pop-web
        networks:
            - pop-network


    pop-nginx:
        container_name: pop-nginx
        build: nginx        
        restart: unless-stopped
        volumes:
            - static_volume:/app/static
            - media_volume:/app/media
            - ./etc/logs:/app/logs
            - ${SSL_CERT_DIR}/${HOST_SSL_CERT_BUNDLE}:/etc/nginx/ssl/cert_host.pem
            - ${SSL_CERT_DIR}/${HOST_SSL_CERT_KEY}:/etc/nginx/ssl/cert_host.key      
        ports:
            - "${HTTPS_WEB_PORT}:443"
            - "${HTTP_WEB_PORT}:80"
        env_file: .env
        networks:
            - pop-network

    # Production PostgreSQL instance
    pop-postgres:
        container_name: pop-postgres
        image: postgres:13-alpine
        volumes:
            - pop_postgres_volume:/var/lib/postgresql/data/
        env_file: .env
        environment:
            - POSTGRES_DB=${POSTGRES_DATABASE}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - PGPORT=${POSTGRES_PORT}
        networks:
            - pop-network
        expose:
            - ${POSTGRES_PORT}
        ports:
            - ${POSTGRES_PORT}
        command: 
            - -p ${POSTGRES_PORT}      

networks:
  pop-network:
    name: pop-network

volumes:
    pop_postgres_volume:
    media_volume:
    static_volume: