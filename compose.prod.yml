name: pop
services:
    server:
        container_name: "${COMPOSE_PROJECT_NAME}-server"
        restart: unless-stopped
        build:
            context: pop-server
            dockerfile: Dockerfile
            target: production      
        expose:
            - 8000
        volumes:
            - ./pop-server:/app/src
        env_file: .env
        depends_on:
            - database

    client:
        container_name: "${COMPOSE_PROJECT_NAME}-client"
        restart: unless-stopped
        env_file: .env
        build:
            context: pop-client
            additional_contexts: 
                - plugins=${POP_CLIENT_PLUGINS_PATH:-./pop-client/src/plugins}
            dockerfile: Dockerfile
            target: production

    docs:
        container_name: "${COMPOSE_PROJECT_NAME}-docs"
        restart: unless-stopped
        build:
            context: pop-docs
            dockerfile: Dockerfile
            target: production     

    reverse-proxy:
        image: nginx:1.23        
        container_name: "${COMPOSE_PROJECT_NAME}-nginx"
        restart: unless-stopped
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - ${POP_REVERSE_PROXY_SSL_CERTIFICATE_BUNDLE}:/etc/nginx/ssl/cert_host.pem
            - ${POP_REVERSE_PROXY_SSL_CERTIFICATE_PRIVATE_KEY}:/etc/nginx/ssl/cert_host.key 
        expose:
            - 80
            - 443
        ports:
            - "${POP_REVERSE_PROXY_HTTPS_PORT:-443}:443"
            - "${POP_REVERSE_PROXY_HTTP_PORT:-80}:80"
        env_file: .env
        depends_on:
            - database
            - server
            - client
            - docs

    database:
        image: postgres:13-alpine
        container_name: "${COMPOSE_PROJECT_NAME}-postgres"
        restart: unless-stopped
        volumes:
            - postgresql-data:/var/lib/postgresql/data/
        env_file: .env
        environment:
            - POSTGRES_DB=${POP_POSTGRES_DATABASE}
            - POSTGRES_USER=${POP_POSTGRES_USER}
            - POSTGRES_PASSWORD=${POP_POSTGRES_PASSWORD}
            - PGPORT=${POP_POSTGRES_PORT}
        expose:
            - ${POP_POSTGRES_PORT}
        ports:
            - ${POP_POSTGRES_PORT}
        command: 
            - -p ${POP_POSTGRES_PORT}      

volumes:
    postgresql-data: